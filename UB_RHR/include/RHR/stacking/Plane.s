	.text
	.file	"Plane.cpp"
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function __cxx_global_var_init
	.type	__cxx_global_var_init,@function
__cxx_global_var_init:                  # @__cxx_global_var_init
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	leaq	_ZStL8__ioinit(%rip), %rdi
	callq	_ZNSt8ios_base4InitC1Ev@PLT
	movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rax
	movq	%rax, %rdi
	leaq	_ZStL8__ioinit(%rip), %rsi
	leaq	__dso_handle(%rip), %rdx
	callq	__cxa_atexit@PLT
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end0:
	.size	__cxx_global_var_init, .Lfunc_end0-__cxx_global_var_init
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN5PlaneC2EbRKS_       # -- Begin function _ZN5PlaneC2EbRKS_
	.p2align	4, 0x90
	.type	_ZN5PlaneC2EbRKS_,@function
_ZN5PlaneC2EbRKS_:                      # @_ZN5PlaneC2EbRKS_
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$256, %rsp              # imm = 0x100
                                        # kill: def $sil killed $sil killed $esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	andb	$1, %sil
	movb	%sil, -33(%rbp)
	movq	%rdx, -48(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZN14ITransformableC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$184, %rax
	movq	%rax, %rdi
	callq	_ZN11IRenderableC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$192, %rax
	movq	%rax, %rdi
	callq	_ZN15IMouseUpdatableC2Ev
	leaq	_ZTV5Plane+16(%rip), %rax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	leaq	_ZTV5Plane+72(%rip), %rax
	movq	%rax, 184(%rcx)
	leaq	_ZTV5Plane+120(%rip), %rax
	movq	%rax, 192(%rcx)
	addq	$200, %rcx
	movq	%rcx, %rdi
	movq	%rcx, -96(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$224, %rax
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$248, %rax
	movq	%rax, %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$272, %rax              # imm = 0x110
	movq	%rax, %rdi
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$296, %rax              # imm = 0x128
	movq	%rax, %rdi
	movq	%rax, -128(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$320, %rax              # imm = 0x140
	movq	%rax, %rdi
	movq	%rax, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIbSaIbEEC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$360, %rax              # imm = 0x168
.Ltmp0:
	movq	%rax, %rdi
	movq	%rax, -144(%rbp)        # 8-byte Spill
	callq	_ZN2sf6ShaderC1Ev@PLT
.Ltmp1:
	jmp	.LBB1_1
.LBB1_1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$464, %rax              # imm = 0x1D0
.Ltmp3:
	movq	%rax, %rdi
	movq	%rax, -152(%rbp)        # 8-byte Spill
	callq	_ZN2sf7TextureC1Ev@PLT
.Ltmp4:
	jmp	.LBB1_2
.LBB1_2:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$504, %rax              # imm = 0x1F8
.Ltmp6:
	movq	%rax, %rdi
	movq	%rax, -160(%rbp)        # 8-byte Spill
	callq	_ZN2sf7TextureC1Ev@PLT
.Ltmp7:
	jmp	.LBB1_3
.LBB1_3:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$584, %rax              # imm = 0x248
	movq	%rax, %rdi
	movq	%rax, -168(%rbp)        # 8-byte Spill
	callq	_ZNSt8functionIFvhEEC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$632, %rax              # imm = 0x278
.Ltmp9:
	movq	%rax, %rdi
	callq	_ZN2sf7Vector2IfEC2Ev
.Ltmp10:
	jmp	.LBB1_4
.LBB1_4:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$640, %rax              # imm = 0x280
.Ltmp11:
	movq	%rax, %rdi
	callq	_ZN2sf7Vector2IiEC2Ev
.Ltmp12:
	jmp	.LBB1_5
.LBB1_5:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$656, %rax              # imm = 0x290
.Ltmp13:
	leaq	-16(%rbp), %rdi
	vxorps	%xmm0, %xmm0, %xmm0
	vmovss	%xmm0, -172(%rbp)       # 4-byte Spill
	vmovss	-172(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rax, -184(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp14:
	jmp	.LBB1_6
.LBB1_6:
.Ltmp15:
	leaq	-16(%rbp), %rsi
	movq	-184(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf14RectangleShapeC1ERKNS_7Vector2IfEE@PLT
.Ltmp16:
	jmp	.LBB1_7
.LBB1_7:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1032, %rax             # imm = 0x408
	movq	%rax, %rdi
	movq	%rax, -192(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIbSaIbEEC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	%rax, %rdi
	movq	%rax, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEC2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1096, %rax             # imm = 0x448
.Ltmp18:
	movq	%rax, %rdi
	callq	_ZN2sf7Vector2IiEC2Ev
.Ltmp19:
	jmp	.LBB1_8
.LBB1_8:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1104, %rax             # imm = 0x450
.Ltmp20:
	movq	%rax, %rdi
	movq	%rax, -208(%rbp)        # 8-byte Spill
	callq	_ZN2sf4TextC1Ev@PLT
.Ltmp21:
	jmp	.LBB1_9
.LBB1_9:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1476, %rax             # imm = 0x5C4
.Ltmp23:
	movq	%rax, %rdi
	callq	_ZN2sf4ViewC1Ev@PLT
.Ltmp24:
	jmp	.LBB1_10
.LBB1_10:
	movzbl	-33(%rbp), %eax
.Ltmp25:
	andl	$1, %eax
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movl	%eax, %esi
	callq	_ZN5Plane5SetupEb
.Ltmp26:
	jmp	.LBB1_11
.LBB1_11:
	movq	$0, -72(%rbp)
.LBB1_12:                               # =>This Inner Loop Header: Depth=1
	movq	-72(%rbp), %rax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movq	%rcx, %rdi
	movq	%rax, -216(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	-216(%rbp), %rcx        # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB1_23
# %bb.13:                               #   in Loop: Header=BB1_12 Depth=1
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-72(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	cmpq	$0, %rax
	movq	%rax, -224(%rbp)        # 8-byte Spill
	je	.LBB1_15
# %bb.14:                               #   in Loop: Header=BB1_12 Depth=1
	movq	-224(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*8(%rcx)
.LBB1_15:                               #   in Loop: Header=BB1_12 Depth=1
	jmp	.LBB1_16
.LBB1_16:                               #   in Loop: Header=BB1_12 Depth=1
	movq	-72(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -72(%rbp)
	jmp	.LBB1_12
.LBB1_17:
.Ltmp2:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -56(%rbp)
	movl	%edx, -60(%rbp)
	jmp	.LBB1_38
.LBB1_18:
.Ltmp5:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -56(%rbp)
	movl	%edx, -60(%rbp)
	jmp	.LBB1_37
.LBB1_19:
.Ltmp8:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -56(%rbp)
	movl	%edx, -60(%rbp)
	jmp	.LBB1_36
.LBB1_20:
.Ltmp17:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -56(%rbp)
	movl	%edx, -60(%rbp)
	jmp	.LBB1_35
.LBB1_21:
.Ltmp22:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -56(%rbp)
	movl	%edx, -60(%rbp)
	jmp	.LBB1_34
.LBB1_22:
.Ltmp34:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -56(%rbp)
	movl	%edx, -60(%rbp)
	jmp	.LBB1_33
.LBB1_23:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE5clearEv
	movq	$0, -80(%rbp)
.LBB1_24:                               # =>This Inner Loop Header: Depth=1
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rcx
	addq	$1072, %rcx             # imm = 0x430
	movq	%rcx, %rdi
	movq	%rax, -232(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	-232(%rbp), %rcx        # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB1_31
# %bb.25:                               #   in Loop: Header=BB1_24 Depth=1
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
.Ltmp27:
	movl	$216, %edi
	movq	%rax, -240(%rbp)        # 8-byte Spill
	callq	_Znwm@PLT
.Ltmp28:
	movq	%rax, -248(%rbp)        # 8-byte Spill
	jmp	.LBB1_26
.LBB1_26:                               #   in Loop: Header=BB1_24 Depth=1
	movq	-248(%rbp), %rax        # 8-byte Reload
	movq	-48(%rbp), %rcx
	addq	$1072, %rcx             # imm = 0x430
	movq	-80(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -256(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rsi
.Ltmp29:
	movq	-248(%rbp), %rdi        # 8-byte Reload
	callq	_ZN10CollectionC1ERKS_@PLT
.Ltmp30:
	jmp	.LBB1_27
.LBB1_27:                               #   in Loop: Header=BB1_24 Depth=1
	movq	-256(%rbp), %rax        # 8-byte Reload
	movq	%rax, -24(%rbp)
.Ltmp32:
	leaq	-24(%rbp), %rsi
	movq	-240(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_
.Ltmp33:
	jmp	.LBB1_28
.LBB1_28:                               #   in Loop: Header=BB1_24 Depth=1
	jmp	.LBB1_29
.LBB1_29:                               #   in Loop: Header=BB1_24 Depth=1
	movq	-80(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -80(%rbp)
	jmp	.LBB1_24
.LBB1_30:
.Ltmp31:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -56(%rbp)
	movl	%edx, -60(%rbp)
	movq	-248(%rbp), %rdi        # 8-byte Reload
	callq	_ZdlPv@PLT
	jmp	.LBB1_33
.LBB1_31:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB1_40
# %bb.32:
	addq	$256, %rsp              # imm = 0x100
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1_33:
	.cfi_def_cfa %rbp, 16
	movq	-208(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf4TextD2Ev
.LBB1_34:
	movq	-200(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EED2Ev
	movq	-192(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEED2Ev
	movq	-184(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf14RectangleShapeD2Ev
.LBB1_35:
	movq	-168(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8functionIFvhEED2Ev
	movq	-160(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf7TextureD1Ev@PLT
.LBB1_36:
	movq	-152(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf7TextureD1Ev@PLT
.LBB1_37:
	movq	-144(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf6ShaderD1Ev@PLT
.LBB1_38:
	movq	-136(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEED2Ev
	movq	-128(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev
	movq	-120(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$184, %rax
	movq	%rax, %rdi
	callq	_ZN11IRenderableD2Ev
	movq	-88(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN14ITransformableD2Ev
# %bb.39:
	movq	-56(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB1_40:
	callq	__stack_chk_fail@PLT
.Lfunc_end1:
	.size	_ZN5PlaneC2EbRKS_, .Lfunc_end1-_ZN5PlaneC2EbRKS_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table1:
.Lexception0:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Lfunc_begin0-.Lfunc_begin0 # >> Call Site 1 <<
	.uleb128 .Ltmp0-.Lfunc_begin0   #   Call between .Lfunc_begin0 and .Ltmp0
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp0-.Lfunc_begin0   # >> Call Site 2 <<
	.uleb128 .Ltmp1-.Ltmp0          #   Call between .Ltmp0 and .Ltmp1
	.uleb128 .Ltmp2-.Lfunc_begin0   #     jumps to .Ltmp2
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp3-.Lfunc_begin0   # >> Call Site 3 <<
	.uleb128 .Ltmp4-.Ltmp3          #   Call between .Ltmp3 and .Ltmp4
	.uleb128 .Ltmp5-.Lfunc_begin0   #     jumps to .Ltmp5
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp6-.Lfunc_begin0   # >> Call Site 4 <<
	.uleb128 .Ltmp7-.Ltmp6          #   Call between .Ltmp6 and .Ltmp7
	.uleb128 .Ltmp8-.Lfunc_begin0   #     jumps to .Ltmp8
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp9-.Lfunc_begin0   # >> Call Site 5 <<
	.uleb128 .Ltmp16-.Ltmp9         #   Call between .Ltmp9 and .Ltmp16
	.uleb128 .Ltmp17-.Lfunc_begin0  #     jumps to .Ltmp17
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp18-.Lfunc_begin0  # >> Call Site 6 <<
	.uleb128 .Ltmp21-.Ltmp18        #   Call between .Ltmp18 and .Ltmp21
	.uleb128 .Ltmp22-.Lfunc_begin0  #     jumps to .Ltmp22
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp23-.Lfunc_begin0  # >> Call Site 7 <<
	.uleb128 .Ltmp26-.Ltmp23        #   Call between .Ltmp23 and .Ltmp26
	.uleb128 .Ltmp34-.Lfunc_begin0  #     jumps to .Ltmp34
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp26-.Lfunc_begin0  # >> Call Site 8 <<
	.uleb128 .Ltmp27-.Ltmp26        #   Call between .Ltmp26 and .Ltmp27
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp27-.Lfunc_begin0  # >> Call Site 9 <<
	.uleb128 .Ltmp28-.Ltmp27        #   Call between .Ltmp27 and .Ltmp28
	.uleb128 .Ltmp34-.Lfunc_begin0  #     jumps to .Ltmp34
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp29-.Lfunc_begin0  # >> Call Site 10 <<
	.uleb128 .Ltmp30-.Ltmp29        #   Call between .Ltmp29 and .Ltmp30
	.uleb128 .Ltmp31-.Lfunc_begin0  #     jumps to .Ltmp31
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp32-.Lfunc_begin0  # >> Call Site 11 <<
	.uleb128 .Ltmp33-.Ltmp32        #   Call between .Ltmp32 and .Ltmp33
	.uleb128 .Ltmp34-.Lfunc_begin0  #     jumps to .Ltmp34
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp33-.Lfunc_begin0  # >> Call Site 12 <<
	.uleb128 .Lfunc_end1-.Ltmp33    #   Call between .Ltmp33 and .Lfunc_end1
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end0:
	.p2align	2
                                        # -- End function
	.section	.text._ZN14ITransformableC2Ev,"axG",@progbits,_ZN14ITransformableC2Ev,comdat
	.weak	_ZN14ITransformableC2Ev # -- Begin function _ZN14ITransformableC2Ev
	.p2align	4, 0x90
	.type	_ZN14ITransformableC2Ev,@function
_ZN14ITransformableC2Ev:                # @_ZN14ITransformableC2Ev
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN2sf13TransformableC2Ev@PLT
	leaq	_ZTV14ITransformable+16(%rip), %rax
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$172, %rcx
.Ltmp35:
	movq	%rcx, %rdi
	callq	_ZN2sf7Vector2IjEC2Ev
.Ltmp36:
	jmp	.LBB2_1
.LBB2_1:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB2_2:
	.cfi_def_cfa %rbp, 16
.Ltmp37:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN2sf13TransformableD2Ev@PLT
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end2:
	.size	_ZN14ITransformableC2Ev, .Lfunc_end2-_ZN14ITransformableC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table2:
.Lexception1:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin1-.Lfunc_begin1 # >> Call Site 1 <<
	.uleb128 .Ltmp35-.Lfunc_begin1  #   Call between .Lfunc_begin1 and .Ltmp35
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp35-.Lfunc_begin1  # >> Call Site 2 <<
	.uleb128 .Ltmp36-.Ltmp35        #   Call between .Ltmp35 and .Ltmp36
	.uleb128 .Ltmp37-.Lfunc_begin1  #     jumps to .Ltmp37
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp36-.Lfunc_begin1  # >> Call Site 3 <<
	.uleb128 .Lfunc_end2-.Ltmp36    #   Call between .Ltmp36 and .Lfunc_end2
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end1:
	.p2align	2
                                        # -- End function
	.section	.text._ZN11IRenderableC2Ev,"axG",@progbits,_ZN11IRenderableC2Ev,comdat
	.weak	_ZN11IRenderableC2Ev    # -- Begin function _ZN11IRenderableC2Ev
	.p2align	4, 0x90
	.type	_ZN11IRenderableC2Ev,@function
_ZN11IRenderableC2Ev:                   # @_ZN11IRenderableC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN2sf8DrawableC2Ev
	movq	_ZTV11IRenderable@GOTPCREL(%rip), %rax
	addq	$16, %rax
	movq	-16(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end3:
	.size	_ZN11IRenderableC2Ev, .Lfunc_end3-_ZN11IRenderableC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN15IMouseUpdatableC2Ev,"axG",@progbits,_ZN15IMouseUpdatableC2Ev,comdat
	.weak	_ZN15IMouseUpdatableC2Ev # -- Begin function _ZN15IMouseUpdatableC2Ev
	.p2align	4, 0x90
	.type	_ZN15IMouseUpdatableC2Ev,@function
_ZN15IMouseUpdatableC2Ev:               # @_ZN15IMouseUpdatableC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	_ZTV15IMouseUpdatable@GOTPCREL(%rip), %rax
	addq	$16, %rax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rax, (%rcx)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end4:
	.size	_ZN15IMouseUpdatableC2Ev, .Lfunc_end4-_ZN15IMouseUpdatableC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end5:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev, .Lfunc_end5-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end6:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev, .Lfunc_end6-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev: # @_ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end7:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev, .Lfunc_end7-_ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev:   # @_ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end8:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev, .Lfunc_end8-_ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev: # @_ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end9:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev, .Lfunc_end9-_ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEEC2Ev,"axG",@progbits,_ZNSt6vectorIbSaIbEEC2Ev,comdat
	.weak	_ZNSt6vectorIbSaIbEEC2Ev # -- Begin function _ZNSt6vectorIbSaIbEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEEC2Ev,@function
_ZNSt6vectorIbSaIbEEC2Ev:               # @_ZNSt6vectorIbSaIbEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt13_Bvector_baseISaIbEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end10:
	.size	_ZNSt6vectorIbSaIbEEC2Ev, .Lfunc_end10-_ZNSt6vectorIbSaIbEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8functionIFvhEEC2Ev,"axG",@progbits,_ZNSt8functionIFvhEEC2Ev,comdat
	.weak	_ZNSt8functionIFvhEEC2Ev # -- Begin function _ZNSt8functionIFvhEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt8functionIFvhEEC2Ev,@function
_ZNSt8functionIFvhEEC2Ev:               # @_ZNSt8functionIFvhEEC2Ev
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
.Ltmp38:
	callq	_ZNSt14_Function_baseC2Ev
.Ltmp39:
	jmp	.LBB11_1
.LBB11_1:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB11_2:
	.cfi_def_cfa %rbp, 16
.Ltmp40:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -12(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end11:
	.size	_ZNSt8functionIFvhEEC2Ev, .Lfunc_end11-_ZNSt8functionIFvhEEC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table11:
.Lexception2:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Ltmp38-.Lfunc_begin2  # >> Call Site 1 <<
	.uleb128 .Ltmp39-.Ltmp38        #   Call between .Ltmp38 and .Ltmp39
	.uleb128 .Ltmp40-.Lfunc_begin2  #     jumps to .Ltmp40
	.byte	1                       #   On action: 1
.Lcst_end2:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase0:
	.p2align	2
                                        # -- End function
	.section	.text._ZN2sf7Vector2IfEC2Ev,"axG",@progbits,_ZN2sf7Vector2IfEC2Ev,comdat
	.weak	_ZN2sf7Vector2IfEC2Ev   # -- Begin function _ZN2sf7Vector2IfEC2Ev
	.p2align	4, 0x90
	.type	_ZN2sf7Vector2IfEC2Ev,@function
_ZN2sf7Vector2IfEC2Ev:                  # @_ZN2sf7Vector2IfEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	vxorps	%xmm0, %xmm0, %xmm0
	vmovss	%xmm0, (%rax)
	vmovss	%xmm0, 4(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end12:
	.size	_ZN2sf7Vector2IfEC2Ev, .Lfunc_end12-_ZN2sf7Vector2IfEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf7Vector2IiEC2Ev,"axG",@progbits,_ZN2sf7Vector2IiEC2Ev,comdat
	.weak	_ZN2sf7Vector2IiEC2Ev   # -- Begin function _ZN2sf7Vector2IiEC2Ev
	.p2align	4, 0x90
	.type	_ZN2sf7Vector2IiEC2Ev,@function
_ZN2sf7Vector2IiEC2Ev:                  # @_ZN2sf7Vector2IiEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movl	$0, (%rax)
	movl	$0, 4(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end13:
	.size	_ZN2sf7Vector2IiEC2Ev, .Lfunc_end13-_ZN2sf7Vector2IiEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf7Vector2IfEC2Eff,"axG",@progbits,_ZN2sf7Vector2IfEC2Eff,comdat
	.weak	_ZN2sf7Vector2IfEC2Eff  # -- Begin function _ZN2sf7Vector2IfEC2Eff
	.p2align	4, 0x90
	.type	_ZN2sf7Vector2IfEC2Eff,@function
_ZN2sf7Vector2IfEC2Eff:                 # @_ZN2sf7Vector2IfEC2Eff
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	vmovss	%xmm0, -12(%rbp)
	vmovss	%xmm1, -16(%rbp)
	movq	-8(%rbp), %rax
	vmovss	-12(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, (%rax)
	vmovss	-16(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, 4(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end14:
	.size	_ZN2sf7Vector2IfEC2Eff, .Lfunc_end14-_ZN2sf7Vector2IfEC2Eff
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EEC2Ev,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EEC2Ev # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EEC2Ev,@function
_ZNSt6vectorIP10CollectionSaIS1_EEC2Ev: # @_ZNSt6vectorIP10CollectionSaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end15:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EEC2Ev, .Lfunc_end15-_ZNSt6vectorIP10CollectionSaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN5Plane5SetupEb       # -- Begin function _ZN5Plane5SetupEb
	.p2align	4, 0x90
	.type	_ZN5Plane5SetupEb,@function
_ZN5Plane5SetupEb:                      # @_ZN5Plane5SetupEb
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$384, %rsp              # imm = 0x180
                                        # kill: def $sil killed $sil killed $esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -280(%rbp)
	andb	$1, %sil
	movb	%sil, -281(%rbp)
	movq	-280(%rbp), %rax
	movb	-281(%rbp), %cl
	andb	$1, %cl
	movb	%cl, 1472(%rax)
	movb	$0, 544(%rax)
	movb	$0, 545(%rax)
	movq	$0, 616(%rax)
	movq	$0, 624(%rax)
	movb	$0, 648(%rax)
	movq	%rax, %rdx
	addq	$360, %rdx              # imm = 0x168
	leaq	-144(%rbp), %rdi
	movq	%rdi, -312(%rbp)        # 8-byte Spill
	movq	%rax, -320(%rbp)        # 8-byte Spill
	movq	%rdx, -328(%rbp)        # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
.Ltmp41:
	leaq	.L.str.9(%rip), %rsi
	leaq	-40(%rbp), %rdi
	movq	-312(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
.Ltmp42:
	jmp	.LBB16_1
.LBB16_1:
	leaq	-152(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -336(%rbp)        # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
.Ltmp44:
	leaq	.L.str.10(%rip), %rsi
	leaq	-72(%rbp), %rdi
	movq	-336(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
.Ltmp45:
	jmp	.LBB16_2
.LBB16_2:
.Ltmp47:
	leaq	-40(%rbp), %rsi
	leaq	-72(%rbp), %rdx
	movq	-328(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf6Shader12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_@PLT
.Ltmp48:
	jmp	.LBB16_3
.LBB16_3:
	leaq	-72(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-152(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	leaq	-40(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-144(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	leaq	-184(%rbp), %rdi
	callq	_ZN2sf5ImageC1Ev@PLT
.Ltmp50:
	leaq	-216(%rbp), %rdi
	callq	_ZN2sf5ImageC1Ev@PLT
.Ltmp51:
	jmp	.LBB16_4
.LBB16_4:
	leaq	-224(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -344(%rbp)        # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
.Ltmp53:
	leaq	.L.str.11(%rip), %rsi
	leaq	-104(%rbp), %rdi
	movq	-344(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
.Ltmp54:
	jmp	.LBB16_5
.LBB16_5:
.Ltmp56:
	leaq	-184(%rbp), %rdi
	leaq	-104(%rbp), %rsi
	callq	_ZN2sf5Image12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp57:
	jmp	.LBB16_6
.LBB16_6:
	leaq	-104(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-224(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	leaq	-232(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -352(%rbp)        # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
.Ltmp59:
	leaq	.L.str.12(%rip), %rsi
	leaq	-136(%rbp), %rdi
	movq	-352(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
.Ltmp60:
	jmp	.LBB16_7
.LBB16_7:
.Ltmp62:
	leaq	-216(%rbp), %rdi
	leaq	-136(%rbp), %rsi
	callq	_ZN2sf5Image12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp63:
	jmp	.LBB16_8
.LBB16_8:
	leaq	-136(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-232(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
.Ltmp65:
	leaq	-184(%rbp), %rdi
	callq	_ZN2sf5Image14flipVerticallyEv@PLT
.Ltmp66:
	jmp	.LBB16_9
.LBB16_9:
.Ltmp67:
	leaq	-216(%rbp), %rdi
	callq	_ZN2sf5Image14flipVerticallyEv@PLT
.Ltmp68:
	jmp	.LBB16_10
.LBB16_10:
	movq	-320(%rbp), %rax        # 8-byte Reload
	addq	$464, %rax              # imm = 0x1D0
.Ltmp69:
	leaq	-248(%rbp), %rdi
	movq	%rax, -360(%rbp)        # 8-byte Spill
	callq	_ZN2sf4RectIiEC2Ev
.Ltmp70:
	jmp	.LBB16_11
.LBB16_11:
.Ltmp71:
	leaq	-184(%rbp), %rsi
	leaq	-248(%rbp), %rdx
	movq	-360(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf7Texture13loadFromImageERKNS_5ImageERKNS_4RectIiEE@PLT
.Ltmp72:
	jmp	.LBB16_12
.LBB16_12:
	movq	-320(%rbp), %rax        # 8-byte Reload
	addq	$504, %rax              # imm = 0x1F8
.Ltmp73:
	leaq	-264(%rbp), %rdi
	movq	%rax, -368(%rbp)        # 8-byte Spill
	callq	_ZN2sf4RectIiEC2Ev
.Ltmp74:
	jmp	.LBB16_13
.LBB16_13:
.Ltmp75:
	leaq	-216(%rbp), %rsi
	leaq	-264(%rbp), %rdx
	movq	-368(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf7Texture13loadFromImageERKNS_5ImageERKNS_4RectIiEE@PLT
.Ltmp76:
	jmp	.LBB16_14
.LBB16_14:
	movq	-320(%rbp), %rax        # 8-byte Reload
	addq	$656, %rax              # imm = 0x290
.Ltmp77:
	leaq	-272(%rbp), %rdi
	movl	$150, %ecx
	movl	$255, %r8d
	movl	%ecx, %esi
	movl	%ecx, %edx
	movq	%rax, -376(%rbp)        # 8-byte Spill
	callq	_ZN2sf5ColorC1Ehhhh@PLT
.Ltmp78:
	jmp	.LBB16_15
.LBB16_15:
.Ltmp79:
	leaq	-272(%rbp), %rsi
	movq	-376(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf5Shape12setFillColorERKNS_5ColorE@PLT
.Ltmp80:
	jmp	.LBB16_16
.LBB16_16:
	movq	-320(%rbp), %rax        # 8-byte Reload
	movb	$0, 1024(%rax)
	movq	$0, 1000(%rax)
	movq	$0, 1008(%rax)
	movq	$0, 1016(%rax)
	leaq	-216(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
	leaq	-184(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB16_34
# %bb.17:
	addq	$384, %rsp              # imm = 0x180
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB16_18:
	.cfi_def_cfa %rbp, 16
.Ltmp43:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -296(%rbp)
	movl	%edx, -300(%rbp)
	jmp	.LBB16_22
.LBB16_19:
.Ltmp46:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -296(%rbp)
	movl	%edx, -300(%rbp)
	jmp	.LBB16_21
.LBB16_20:
.Ltmp49:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -296(%rbp)
	movl	%edx, -300(%rbp)
	leaq	-72(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB16_21:
	leaq	-152(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	leaq	-40(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB16_22:
	leaq	-144(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB16_33
.LBB16_23:
.Ltmp52:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -296(%rbp)
	movl	%edx, -300(%rbp)
	jmp	.LBB16_32
.LBB16_24:
.Ltmp55:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -296(%rbp)
	movl	%edx, -300(%rbp)
	jmp	.LBB16_26
.LBB16_25:
.Ltmp58:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -296(%rbp)
	movl	%edx, -300(%rbp)
	leaq	-104(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB16_26:
	leaq	-224(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB16_31
.LBB16_27:
.Ltmp61:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -296(%rbp)
	movl	%edx, -300(%rbp)
	jmp	.LBB16_29
.LBB16_28:
.Ltmp64:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -296(%rbp)
	movl	%edx, -300(%rbp)
	leaq	-136(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB16_29:
	leaq	-232(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB16_31
.LBB16_30:
.Ltmp81:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -296(%rbp)
	movl	%edx, -300(%rbp)
.LBB16_31:
	leaq	-216(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
.LBB16_32:
	leaq	-184(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
.LBB16_33:
	movq	-296(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB16_34:
	callq	__stack_chk_fail@PLT
.Lfunc_end16:
	.size	_ZN5Plane5SetupEb, .Lfunc_end16-_ZN5Plane5SetupEb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table16:
.Lexception3:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Ltmp41-.Lfunc_begin3  # >> Call Site 1 <<
	.uleb128 .Ltmp42-.Ltmp41        #   Call between .Ltmp41 and .Ltmp42
	.uleb128 .Ltmp43-.Lfunc_begin3  #     jumps to .Ltmp43
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp44-.Lfunc_begin3  # >> Call Site 2 <<
	.uleb128 .Ltmp45-.Ltmp44        #   Call between .Ltmp44 and .Ltmp45
	.uleb128 .Ltmp46-.Lfunc_begin3  #     jumps to .Ltmp46
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp47-.Lfunc_begin3  # >> Call Site 3 <<
	.uleb128 .Ltmp48-.Ltmp47        #   Call between .Ltmp47 and .Ltmp48
	.uleb128 .Ltmp49-.Lfunc_begin3  #     jumps to .Ltmp49
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp48-.Lfunc_begin3  # >> Call Site 4 <<
	.uleb128 .Ltmp50-.Ltmp48        #   Call between .Ltmp48 and .Ltmp50
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp50-.Lfunc_begin3  # >> Call Site 5 <<
	.uleb128 .Ltmp51-.Ltmp50        #   Call between .Ltmp50 and .Ltmp51
	.uleb128 .Ltmp52-.Lfunc_begin3  #     jumps to .Ltmp52
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp53-.Lfunc_begin3  # >> Call Site 6 <<
	.uleb128 .Ltmp54-.Ltmp53        #   Call between .Ltmp53 and .Ltmp54
	.uleb128 .Ltmp55-.Lfunc_begin3  #     jumps to .Ltmp55
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp56-.Lfunc_begin3  # >> Call Site 7 <<
	.uleb128 .Ltmp57-.Ltmp56        #   Call between .Ltmp56 and .Ltmp57
	.uleb128 .Ltmp58-.Lfunc_begin3  #     jumps to .Ltmp58
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp59-.Lfunc_begin3  # >> Call Site 8 <<
	.uleb128 .Ltmp60-.Ltmp59        #   Call between .Ltmp59 and .Ltmp60
	.uleb128 .Ltmp61-.Lfunc_begin3  #     jumps to .Ltmp61
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp62-.Lfunc_begin3  # >> Call Site 9 <<
	.uleb128 .Ltmp63-.Ltmp62        #   Call between .Ltmp62 and .Ltmp63
	.uleb128 .Ltmp64-.Lfunc_begin3  #     jumps to .Ltmp64
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp65-.Lfunc_begin3  # >> Call Site 10 <<
	.uleb128 .Ltmp80-.Ltmp65        #   Call between .Ltmp65 and .Ltmp80
	.uleb128 .Ltmp81-.Lfunc_begin3  #     jumps to .Ltmp81
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp80-.Lfunc_begin3  # >> Call Site 11 <<
	.uleb128 .Lfunc_end16-.Ltmp80   #   Call between .Ltmp80 and .Lfunc_end16
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end3:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv,@function
_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv: # @_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end17:
	.size	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv, .Lfunc_end17-_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EEixEm,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EEixEm # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EEixEm,@function
_ZNSt6vectorIP10CollectionSaIS1_EEixEm: # @_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end18:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EEixEm, .Lfunc_end18-_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE5clearEv,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE5clearEv,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE5clearEv # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE5clearEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE5clearEv,@function
_ZNSt6vectorIP10CollectionSaIS1_EE5clearEv: # @_ZNSt6vectorIP10CollectionSaIS1_EE5clearEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end19:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE5clearEv, .Lfunc_end19-_ZNSt6vectorIP10CollectionSaIS1_EE5clearEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_ # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_,@function
_ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_: # @_ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end20:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_, .Lfunc_end20-_ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP10CollectionSaIS1_EEixEm,"axG",@progbits,_ZNKSt6vectorIP10CollectionSaIS1_EEixEm,comdat
	.weak	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm # -- Begin function _ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm,@function
_ZNKSt6vectorIP10CollectionSaIS1_EEixEm: # @_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end21:
	.size	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm, .Lfunc_end21-_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf4TextD2Ev,"axG",@progbits,_ZN2sf4TextD2Ev,comdat
	.weak	_ZN2sf4TextD2Ev         # -- Begin function _ZN2sf4TextD2Ev
	.p2align	4, 0x90
	.type	_ZN2sf4TextD2Ev,@function
_ZN2sf4TextD2Ev:                        # @_ZN2sf4TextD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	_ZTVN2sf4TextE@GOTPCREL(%rip), %rax
	movq	%rax, %rcx
	addq	$56, %rcx
	addq	$16, %rax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdx
	movq	%rax, (%rdx)
	movq	%rcx, 8(%rdx)
	movq	%rdx, %rax
	addq	$296, %rax              # imm = 0x128
	movq	%rax, %rdi
	movq	%rdx, -16(%rbp)         # 8-byte Spill
	callq	_ZN2sf11VertexArrayD2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$256, %rax              # imm = 0x100
	movq	%rax, %rdi
	callq	_ZN2sf11VertexArrayD2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$184, %rax
	movq	%rax, %rdi
	callq	_ZN2sf6StringD2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$8, %rax
	movq	%rax, %rdi
	callq	_ZN2sf13TransformableD2Ev@PLT
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN2sf8DrawableD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end22:
	.size	_ZN2sf4TextD2Ev, .Lfunc_end22-_ZN2sf4TextD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EED2Ev,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EED2Ev # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EED2Ev,@function
_ZNSt6vectorIP10CollectionSaIS1_EED2Ev: # @_ZNSt6vectorIP10CollectionSaIS1_EED2Ev
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception4
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp82:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E
.Ltmp83:
	jmp	.LBB23_1
.LBB23_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB23_2:
	.cfi_def_cfa %rbp, 16
.Ltmp84:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end23:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EED2Ev, .Lfunc_end23-_ZNSt6vectorIP10CollectionSaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table23:
.Lexception4:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Ltmp82-.Lfunc_begin4  # >> Call Site 1 <<
	.uleb128 .Ltmp83-.Ltmp82        #   Call between .Ltmp82 and .Ltmp83
	.uleb128 .Ltmp84-.Lfunc_begin4  #     jumps to .Ltmp84
	.byte	1                       #   On action: 1
.Lcst_end4:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase1:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEED2Ev,"axG",@progbits,_ZNSt6vectorIbSaIbEED2Ev,comdat
	.weak	_ZNSt6vectorIbSaIbEED2Ev # -- Begin function _ZNSt6vectorIbSaIbEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEED2Ev,@function
_ZNSt6vectorIbSaIbEED2Ev:               # @_ZNSt6vectorIbSaIbEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt13_Bvector_baseISaIbEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end24:
	.size	_ZNSt6vectorIbSaIbEED2Ev, .Lfunc_end24-_ZNSt6vectorIbSaIbEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf14RectangleShapeD2Ev,"axG",@progbits,_ZN2sf14RectangleShapeD2Ev,comdat
	.weak	_ZN2sf14RectangleShapeD2Ev # -- Begin function _ZN2sf14RectangleShapeD2Ev
	.p2align	4, 0x90
	.type	_ZN2sf14RectangleShapeD2Ev,@function
_ZN2sf14RectangleShapeD2Ev:             # @_ZN2sf14RectangleShapeD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN2sf5ShapeD2Ev@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end25:
	.size	_ZN2sf14RectangleShapeD2Ev, .Lfunc_end25-_ZN2sf14RectangleShapeD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8functionIFvhEED2Ev,"axG",@progbits,_ZNSt8functionIFvhEED2Ev,comdat
	.weak	_ZNSt8functionIFvhEED2Ev # -- Begin function _ZNSt8functionIFvhEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt8functionIFvhEED2Ev,@function
_ZNSt8functionIFvhEED2Ev:               # @_ZNSt8functionIFvhEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt14_Function_baseD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end26:
	.size	_ZNSt8functionIFvhEED2Ev, .Lfunc_end26-_ZNSt8functionIFvhEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev: # @_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception5
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp85:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E
.Ltmp86:
	jmp	.LBB27_1
.LBB27_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB27_2:
	.cfi_def_cfa %rbp, 16
.Ltmp87:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end27:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev, .Lfunc_end27-_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table27:
.Lexception5:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Ltmp85-.Lfunc_begin5  # >> Call Site 1 <<
	.uleb128 .Ltmp86-.Ltmp85        #   Call between .Ltmp85 and .Ltmp86
	.uleb128 .Ltmp87-.Lfunc_begin5  #     jumps to .Ltmp87
	.byte	1                       #   On action: 1
.Lcst_end5:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase2:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev:   # @_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception6
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp88:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E
.Ltmp89:
	jmp	.LBB28_1
.LBB28_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB28_2:
	.cfi_def_cfa %rbp, 16
.Ltmp90:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end28:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev, .Lfunc_end28-_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table28:
.Lexception6:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Ltmp88-.Lfunc_begin6  # >> Call Site 1 <<
	.uleb128 .Ltmp89-.Ltmp88        #   Call between .Ltmp88 and .Ltmp89
	.uleb128 .Ltmp90-.Lfunc_begin6  #     jumps to .Ltmp90
	.byte	1                       #   On action: 1
.Lcst_end6:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase3:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev: # @_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception7
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp91:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E
.Ltmp92:
	jmp	.LBB29_1
.LBB29_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB29_2:
	.cfi_def_cfa %rbp, 16
.Ltmp93:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end29:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev, .Lfunc_end29-_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table29:
.Lexception7:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Ltmp91-.Lfunc_begin7  # >> Call Site 1 <<
	.uleb128 .Ltmp92-.Ltmp91        #   Call between .Ltmp91 and .Ltmp92
	.uleb128 .Ltmp93-.Lfunc_begin7  #     jumps to .Ltmp93
	.byte	1                       #   On action: 1
.Lcst_end7:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase4:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception8
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp94:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E
.Ltmp95:
	jmp	.LBB30_1
.LBB30_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB30_2:
	.cfi_def_cfa %rbp, 16
.Ltmp96:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end30:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev, .Lfunc_end30-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table30:
.Lexception8:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Ltmp94-.Lfunc_begin8  # >> Call Site 1 <<
	.uleb128 .Ltmp95-.Ltmp94        #   Call between .Ltmp94 and .Ltmp95
	.uleb128 .Ltmp96-.Lfunc_begin8  #     jumps to .Ltmp96
	.byte	1                       #   On action: 1
.Lcst_end8:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase5:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception9
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
.Ltmp97:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E
.Ltmp98:
	jmp	.LBB31_1
.LBB31_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB31_2:
	.cfi_def_cfa %rbp, 16
.Ltmp99:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end31:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev, .Lfunc_end31-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table31:
.Lexception9:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Ltmp97-.Lfunc_begin9  # >> Call Site 1 <<
	.uleb128 .Ltmp98-.Ltmp97        #   Call between .Ltmp97 and .Ltmp98
	.uleb128 .Ltmp99-.Lfunc_begin9  #     jumps to .Ltmp99
	.byte	1                       #   On action: 1
.Lcst_end9:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase6:
	.p2align	2
                                        # -- End function
	.section	.text._ZN11IRenderableD2Ev,"axG",@progbits,_ZN11IRenderableD2Ev,comdat
	.weak	_ZN11IRenderableD2Ev    # -- Begin function _ZN11IRenderableD2Ev
	.p2align	4, 0x90
	.type	_ZN11IRenderableD2Ev,@function
_ZN11IRenderableD2Ev:                   # @_ZN11IRenderableD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN2sf8DrawableD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end32:
	.size	_ZN11IRenderableD2Ev, .Lfunc_end32-_ZN11IRenderableD2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN5PlaneC2Eb           # -- Begin function _ZN5PlaneC2Eb
	.p2align	4, 0x90
	.type	_ZN5PlaneC2Eb,@function
_ZN5PlaneC2Eb:                          # @_ZN5PlaneC2Eb
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception10
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$624, %rsp              # imm = 0x270
                                        # kill: def $sil killed $sil killed $esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -448(%rbp)
	andb	$1, %sil
	movb	%sil, -449(%rbp)
	movq	-448(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -480(%rbp)        # 8-byte Spill
	callq	_ZN14ITransformableC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$184, %rax
	movq	%rax, %rdi
	callq	_ZN11IRenderableC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$192, %rax
	movq	%rax, %rdi
	callq	_ZN15IMouseUpdatableC2Ev
	leaq	_ZTV5Plane+16(%rip), %rax
	movq	-480(%rbp), %rcx        # 8-byte Reload
	movq	%rax, (%rcx)
	leaq	_ZTV5Plane+72(%rip), %rax
	movq	%rax, 184(%rcx)
	leaq	_ZTV5Plane+120(%rip), %rax
	movq	%rax, 192(%rcx)
	addq	$200, %rcx
	movq	%rcx, %rdi
	movq	%rcx, -488(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$224, %rax
	movq	%rax, %rdi
	movq	%rax, -496(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$248, %rax
	movq	%rax, %rdi
	movq	%rax, -504(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EEC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$272, %rax              # imm = 0x110
	movq	%rax, %rdi
	movq	%rax, -512(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EEC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$296, %rax              # imm = 0x128
	movq	%rax, %rdi
	movq	%rax, -520(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EEC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$320, %rax              # imm = 0x140
	movq	%rax, %rdi
	movq	%rax, -528(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIbSaIbEEC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$360, %rax              # imm = 0x168
.Ltmp100:
	movq	%rax, %rdi
	movq	%rax, -536(%rbp)        # 8-byte Spill
	callq	_ZN2sf6ShaderC1Ev@PLT
.Ltmp101:
	jmp	.LBB33_1
.LBB33_1:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$464, %rax              # imm = 0x1D0
.Ltmp103:
	movq	%rax, %rdi
	movq	%rax, -544(%rbp)        # 8-byte Spill
	callq	_ZN2sf7TextureC1Ev@PLT
.Ltmp104:
	jmp	.LBB33_2
.LBB33_2:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$504, %rax              # imm = 0x1F8
.Ltmp106:
	movq	%rax, %rdi
	movq	%rax, -552(%rbp)        # 8-byte Spill
	callq	_ZN2sf7TextureC1Ev@PLT
.Ltmp107:
	jmp	.LBB33_3
.LBB33_3:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$584, %rax              # imm = 0x248
	movq	%rax, %rdi
	movq	%rax, -560(%rbp)        # 8-byte Spill
	callq	_ZNSt8functionIFvhEEC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$632, %rax              # imm = 0x278
.Ltmp109:
	movq	%rax, %rdi
	callq	_ZN2sf7Vector2IfEC2Ev
.Ltmp110:
	jmp	.LBB33_4
.LBB33_4:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$640, %rax              # imm = 0x280
.Ltmp111:
	movq	%rax, %rdi
	callq	_ZN2sf7Vector2IiEC2Ev
.Ltmp112:
	jmp	.LBB33_5
.LBB33_5:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$656, %rax              # imm = 0x290
.Ltmp113:
	leaq	-416(%rbp), %rdi
	vxorps	%xmm0, %xmm0, %xmm0
	vmovss	%xmm0, -564(%rbp)       # 4-byte Spill
	vmovss	-564(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rax, -576(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp114:
	jmp	.LBB33_6
.LBB33_6:
.Ltmp115:
	leaq	-416(%rbp), %rsi
	movq	-576(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf14RectangleShapeC1ERKNS_7Vector2IfEE@PLT
.Ltmp116:
	jmp	.LBB33_7
.LBB33_7:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$1032, %rax             # imm = 0x408
	movq	%rax, %rdi
	movq	%rax, -584(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIbSaIbEEC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	%rax, %rdi
	movq	%rax, -592(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEC2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$1096, %rax             # imm = 0x448
.Ltmp118:
	movq	%rax, %rdi
	callq	_ZN2sf7Vector2IiEC2Ev
.Ltmp119:
	jmp	.LBB33_8
.LBB33_8:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$1104, %rax             # imm = 0x450
.Ltmp120:
	movq	%rax, %rdi
	movq	%rax, -600(%rbp)        # 8-byte Spill
	callq	_ZN2sf4TextC1Ev@PLT
.Ltmp121:
	jmp	.LBB33_9
.LBB33_9:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$1476, %rax             # imm = 0x5C4
.Ltmp123:
	movq	%rax, %rdi
	callq	_ZN2sf4ViewC1Ev@PLT
.Ltmp124:
	jmp	.LBB33_10
.LBB33_10:
	movzbl	-449(%rbp), %eax
.Ltmp125:
	andl	$1, %eax
	movq	-480(%rbp), %rdi        # 8-byte Reload
	movl	%eax, %esi
	callq	_ZN5Plane5SetupEb
.Ltmp126:
	jmp	.LBB33_11
.LBB33_11:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
.Ltmp127:
	movl	$5, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm
.Ltmp128:
	jmp	.LBB33_12
.LBB33_12:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$1032, %rax             # imm = 0x408
.Ltmp129:
	movl	$5, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEE7reserveEm
.Ltmp130:
	jmp	.LBB33_13
.LBB33_13:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$200, %rax
.Ltmp131:
	movl	$5, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm
.Ltmp132:
	jmp	.LBB33_14
.LBB33_14:
	leaq	-424(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -608(%rbp)        # 8-byte Spill
	callq	_ZNSt6localeC1Ev@PLT
.Ltmp133:
	leaq	.L.str(%rip), %rsi
	leaq	-408(%rbp), %rdi
	movq	-608(%rbp), %rdx        # 8-byte Reload
	callq	_ZN2sf6StringC1EPKcRKSt6locale@PLT
.Ltmp134:
	jmp	.LBB33_15
.LBB33_15:
.Ltmp136:
	movq	_ZN6Global4FontE@GOTPCREL(%rip), %rdx
	leaq	-376(%rbp), %rdi
	leaq	-408(%rbp), %rsi
	movl	$12, %ecx
	callq	_ZN2sf4TextC1ERKNS_6StringERKNS_4FontEj@PLT
.Ltmp137:
	jmp	.LBB33_16
.LBB33_16:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$1104, %rax             # imm = 0x450
.Ltmp139:
	leaq	-376(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN2sf4TextaSEOS0_
.Ltmp140:
	jmp	.LBB33_17
.LBB33_17:
	leaq	-376(%rbp), %rdi
	callq	_ZN2sf4TextD2Ev
	leaq	-408(%rbp), %rdi
	callq	_ZN2sf6StringD2Ev
	leaq	-424(%rbp), %rdi
	callq	_ZNSt6localeD1Ev@PLT
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$1104, %rax             # imm = 0x450
.Ltmp142:
	leaq	-432(%rbp), %rdi
	movl	$150, %ecx
	movl	$255, %r8d
	movl	%ecx, %esi
	movl	%ecx, %edx
	movq	%rax, -616(%rbp)        # 8-byte Spill
	callq	_ZN2sf5ColorC1Ehhhh@PLT
.Ltmp143:
	jmp	.LBB33_18
.LBB33_18:
.Ltmp144:
	leaq	-432(%rbp), %rsi
	movq	-616(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf4Text12setFillColorERKNS_5ColorE@PLT
.Ltmp145:
	jmp	.LBB33_19
.LBB33_19:
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$584, %rax              # imm = 0x248
.Ltmp146:
	leaq	-440(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt8functionIFvhEEaSIZN5PlaneC1EbE3$_0EENSt9enable_ifIXsrNS1_9_CallableINSt5decayIT_E4typeESt15__invoke_resultIRSA_JhEEEE5valueERS1_E4typeEOS8_
.Ltmp147:
	jmp	.LBB33_20
.LBB33_20:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB33_40
# %bb.21:
	addq	$624, %rsp              # imm = 0x270
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB33_22:
	.cfi_def_cfa %rbp, 16
.Ltmp102:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -464(%rbp)
	movl	%edx, -468(%rbp)
	jmp	.LBB33_38
.LBB33_23:
.Ltmp105:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -464(%rbp)
	movl	%edx, -468(%rbp)
	jmp	.LBB33_37
.LBB33_24:
.Ltmp108:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -464(%rbp)
	movl	%edx, -468(%rbp)
	jmp	.LBB33_36
.LBB33_25:
.Ltmp117:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -464(%rbp)
	movl	%edx, -468(%rbp)
	jmp	.LBB33_35
.LBB33_26:
.Ltmp122:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -464(%rbp)
	movl	%edx, -468(%rbp)
	jmp	.LBB33_34
.LBB33_27:
.Ltmp148:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -464(%rbp)
	movl	%edx, -468(%rbp)
	jmp	.LBB33_33
.LBB33_28:
.Ltmp135:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -464(%rbp)
	movl	%edx, -468(%rbp)
	jmp	.LBB33_32
.LBB33_29:
.Ltmp138:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -464(%rbp)
	movl	%edx, -468(%rbp)
	jmp	.LBB33_31
.LBB33_30:
.Ltmp141:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -464(%rbp)
	movl	%edx, -468(%rbp)
	leaq	-376(%rbp), %rdi
	callq	_ZN2sf4TextD2Ev
.LBB33_31:
	leaq	-408(%rbp), %rdi
	callq	_ZN2sf6StringD2Ev
.LBB33_32:
	leaq	-424(%rbp), %rdi
	callq	_ZNSt6localeD1Ev@PLT
.LBB33_33:
	movq	-600(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf4TextD2Ev
.LBB33_34:
	movq	-592(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EED2Ev
	movq	-584(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEED2Ev
	movq	-576(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf14RectangleShapeD2Ev
.LBB33_35:
	movq	-560(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt8functionIFvhEED2Ev
	movq	-552(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf7TextureD1Ev@PLT
.LBB33_36:
	movq	-544(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf7TextureD1Ev@PLT
.LBB33_37:
	movq	-536(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf6ShaderD1Ev@PLT
.LBB33_38:
	movq	-528(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEED2Ev
	movq	-520(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev
	movq	-512(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev
	movq	-504(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev
	movq	-496(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev
	movq	-488(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	addq	$184, %rax
	movq	%rax, %rdi
	callq	_ZN11IRenderableD2Ev
	movq	-480(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN14ITransformableD2Ev
# %bb.39:
	movq	-464(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB33_40:
	callq	__stack_chk_fail@PLT
.Lfunc_end33:
	.size	_ZN5PlaneC2Eb, .Lfunc_end33-_ZN5PlaneC2Eb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table33:
.Lexception10:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Lfunc_begin10-.Lfunc_begin10 # >> Call Site 1 <<
	.uleb128 .Ltmp100-.Lfunc_begin10 #   Call between .Lfunc_begin10 and .Ltmp100
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp100-.Lfunc_begin10 # >> Call Site 2 <<
	.uleb128 .Ltmp101-.Ltmp100      #   Call between .Ltmp100 and .Ltmp101
	.uleb128 .Ltmp102-.Lfunc_begin10 #     jumps to .Ltmp102
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp103-.Lfunc_begin10 # >> Call Site 3 <<
	.uleb128 .Ltmp104-.Ltmp103      #   Call between .Ltmp103 and .Ltmp104
	.uleb128 .Ltmp105-.Lfunc_begin10 #     jumps to .Ltmp105
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp106-.Lfunc_begin10 # >> Call Site 4 <<
	.uleb128 .Ltmp107-.Ltmp106      #   Call between .Ltmp106 and .Ltmp107
	.uleb128 .Ltmp108-.Lfunc_begin10 #     jumps to .Ltmp108
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp109-.Lfunc_begin10 # >> Call Site 5 <<
	.uleb128 .Ltmp116-.Ltmp109      #   Call between .Ltmp109 and .Ltmp116
	.uleb128 .Ltmp117-.Lfunc_begin10 #     jumps to .Ltmp117
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp118-.Lfunc_begin10 # >> Call Site 6 <<
	.uleb128 .Ltmp121-.Ltmp118      #   Call between .Ltmp118 and .Ltmp121
	.uleb128 .Ltmp122-.Lfunc_begin10 #     jumps to .Ltmp122
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp123-.Lfunc_begin10 # >> Call Site 7 <<
	.uleb128 .Ltmp132-.Ltmp123      #   Call between .Ltmp123 and .Ltmp132
	.uleb128 .Ltmp148-.Lfunc_begin10 #     jumps to .Ltmp148
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp133-.Lfunc_begin10 # >> Call Site 8 <<
	.uleb128 .Ltmp134-.Ltmp133      #   Call between .Ltmp133 and .Ltmp134
	.uleb128 .Ltmp135-.Lfunc_begin10 #     jumps to .Ltmp135
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp136-.Lfunc_begin10 # >> Call Site 9 <<
	.uleb128 .Ltmp137-.Ltmp136      #   Call between .Ltmp136 and .Ltmp137
	.uleb128 .Ltmp138-.Lfunc_begin10 #     jumps to .Ltmp138
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp139-.Lfunc_begin10 # >> Call Site 10 <<
	.uleb128 .Ltmp140-.Ltmp139      #   Call between .Ltmp139 and .Ltmp140
	.uleb128 .Ltmp141-.Lfunc_begin10 #     jumps to .Ltmp141
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp142-.Lfunc_begin10 # >> Call Site 11 <<
	.uleb128 .Ltmp147-.Ltmp142      #   Call between .Ltmp142 and .Ltmp147
	.uleb128 .Ltmp148-.Lfunc_begin10 #     jumps to .Ltmp148
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp147-.Lfunc_begin10 # >> Call Site 12 <<
	.uleb128 .Lfunc_end33-.Ltmp147  #   Call between .Ltmp147 and .Lfunc_end33
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end10:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm,@function
_ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm: # @_ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv
	movq	-48(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB34_2
# %bb.1:
	leaq	.L.str.18(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB34_2:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv
	cmpq	-16(%rbp), %rax
	jae	.LBB34_4
# %bb.3:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	-32(%rbp), %rdx
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	-72(%rbp), %rdx         # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	-40(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rsi
	movq	16(%rdx), %rdi
	movq	(%rdx), %r8
	subq	%r8, %rdi
	sarq	$3, %rdi
	movq	%rdi, -80(%rbp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	-80(%rbp), %rdx         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-32(%rbp), %rax
	movq	-24(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, 8(%rcx)
	movq	(%rcx), %rax
	movq	-16(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
.LBB34_4:
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end34:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm, .Lfunc_end34-_ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE7reserveEm,"axG",@progbits,_ZNSt6vectorIbSaIbEE7reserveEm,comdat
	.weak	_ZNSt6vectorIbSaIbEE7reserveEm # -- Begin function _ZNSt6vectorIbSaIbEE7reserveEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE7reserveEm,@function
_ZNSt6vectorIbSaIbEE7reserveEm:         # @_ZNSt6vectorIbSaIbEE7reserveEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE8max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB35_2
# %bb.1:
	leaq	.L.str.18(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB35_2:
	movq	-24(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIbSaIbEE8capacityEv
	cmpq	-16(%rbp), %rax
	jae	.LBB35_4
# %bb.3:
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE13_M_reallocateEm
.LBB35_4:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end35:
	.size	_ZNSt6vectorIbSaIbEE7reserveEm, .Lfunc_end35-_ZNSt6vectorIbSaIbEE7reserveEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv
	movq	-48(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB36_2
# %bb.1:
	leaq	.L.str.18(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB36_2:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv
	cmpq	-16(%rbp), %rax
	jae	.LBB36_4
# %bb.3:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	-32(%rbp), %rdx
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	-72(%rbp), %rdx         # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	-40(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rsi
	movq	16(%rdx), %rdi
	movq	(%rdx), %r8
	subq	%r8, %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movq	%rdi, %rax
	cqto
	movl	$24, %edi
	idivq	%rdi
	movq	%rcx, %rdi
	movq	%rax, %rdx
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-32(%rbp), %rax
	imulq	$24, -24(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, 8(%rcx)
	movq	(%rcx), %rax
	imulq	$24, -16(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
.LBB36_4:
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end36:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm, .Lfunc_end36-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf4TextaSEOS0_,"axG",@progbits,_ZN2sf4TextaSEOS0_,comdat
	.weak	_ZN2sf4TextaSEOS0_      # -- Begin function _ZN2sf4TextaSEOS0_
	.p2align	4, 0x90
	.type	_ZN2sf4TextaSEOS0_,@function
_ZN2sf4TextaSEOS0_:                     # @_ZN2sf4TextaSEOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	-16(%rbp), %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZN2sf8DrawableaSERKS0_
	movq	-24(%rbp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	-16(%rbp), %rdx
	addq	$8, %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZN2sf13TransformableaSERKS0_
	movq	-24(%rbp), %rcx         # 8-byte Reload
	addq	$184, %rcx
	movq	-16(%rbp), %rdx
	addq	$184, %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZN2sf6StringaSERKS0_@PLT
	movq	-24(%rbp), %rcx         # 8-byte Reload
	addq	$216, %rcx
	movq	-16(%rbp), %rdx
	addq	$216, %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movl	$36, %edx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	memcpy@PLT
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$256, %rax              # imm = 0x100
	movq	-16(%rbp), %rcx
	addq	$256, %rcx              # imm = 0x100
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN2sf11VertexArrayaSEOS0_
	movq	-24(%rbp), %rcx         # 8-byte Reload
	addq	$296, %rcx              # imm = 0x128
	movq	-16(%rbp), %rdx
	addq	$296, %rdx              # imm = 0x128
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZN2sf11VertexArrayaSEOS0_
	movq	-16(%rbp), %rcx
	movq	336(%rcx), %rdx
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	%rdx, 336(%rsi)
	movq	344(%rcx), %rdx
	movq	%rdx, 344(%rsi)
	movq	352(%rcx), %rdx
	movq	%rdx, 352(%rsi)
	movq	360(%rcx), %rcx
	movq	%rcx, 360(%rsi)
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rsi, %rax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end37:
	.size	_ZN2sf4TextaSEOS0_, .Lfunc_end37-_ZN2sf4TextaSEOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf6StringD2Ev,"axG",@progbits,_ZN2sf6StringD2Ev,comdat
	.weak	_ZN2sf6StringD2Ev       # -- Begin function _ZN2sf6StringD2Ev
	.p2align	4, 0x90
	.type	_ZN2sf6StringD2Ev,@function
_ZN2sf6StringD2Ev:                      # @_ZN2sf6StringD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end38:
	.size	_ZN2sf6StringD2Ev, .Lfunc_end38-_ZN2sf6StringD2Ev
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function _ZNSt8functionIFvhEEaSIZN5PlaneC1EbE3$_0EENSt9enable_ifIXsrNS1_9_CallableINSt5decayIT_E4typeESt15__invoke_resultIRSA_JhEEEE5valueERS1_E4typeEOS8_
	.type	_ZNSt8functionIFvhEEaSIZN5PlaneC1EbE3$_0EENSt9enable_ifIXsrNS1_9_CallableINSt5decayIT_E4typeESt15__invoke_resultIRSA_JhEEEE5valueERS1_E4typeEOS8_,@function
_ZNSt8functionIFvhEEaSIZN5PlaneC1EbE3$_0EENSt9enable_ifIXsrNS1_9_CallableINSt5decayIT_E4typeESt15__invoke_resultIRSA_JhEEEE5valueERS1_E4typeEOS8_: # @"_ZNSt8functionIFvhEEaSIZN5PlaneC1EbE3$_0EENSt9enable_ifIXsrNS1_9_CallableINSt5decayIT_E4typeESt15__invoke_resultIRSA_JhEEEE5valueERS1_E4typeEOS8_"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movq	%rsi, -56(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS2_E4typeE
	leaq	-40(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movq	%rcx, -88(%rbp)         # 8-byte Spill
	callq	_ZNSt8functionIFvhEEC2IZN5PlaneC1EbE3$_0vvEET_
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	-72(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt8functionIFvhEE4swapERS1_
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt8functionIFvhEED2Ev
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB39_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB39_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end39:
	.size	_ZNSt8functionIFvhEEaSIZN5PlaneC1EbE3$_0EENSt9enable_ifIXsrNS1_9_CallableINSt5decayIT_E4typeESt15__invoke_resultIRSA_JhEEEE5valueERS1_E4typeEOS8_, .Lfunc_end39-_ZNSt8functionIFvhEEaSIZN5PlaneC1EbE3$_0EENSt9enable_ifIXsrNS1_9_CallableINSt5decayIT_E4typeESt15__invoke_resultIRSA_JhEEEE5valueERS1_E4typeEOS8_
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5PlaneD2Ev           # -- Begin function _ZN5PlaneD2Ev
	.p2align	4, 0x90
	.type	_ZN5PlaneD2Ev,@function
_ZN5PlaneD2Ev:                          # @_ZN5PlaneD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	leaq	_ZTV5Plane(%rip), %rax
	movq	%rax, %rcx
	addq	$120, %rcx
	movq	%rax, %rdx
	addq	$72, %rdx
	addq	$16, %rax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rsi
	movq	%rax, (%rsi)
	movq	%rdx, 184(%rsi)
	movq	%rcx, 192(%rsi)
	movq	$0, -16(%rbp)
	movq	%rsi, -24(%rbp)         # 8-byte Spill
.LBB40_1:                               # =>This Inner Loop Header: Depth=1
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movq	%rcx, %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB40_6
# %bb.2:                                #   in Loop: Header=BB40_1 Depth=1
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	cmpq	$0, %rax
	movq	%rax, -40(%rbp)         # 8-byte Spill
	je	.LBB40_4
# %bb.3:                                #   in Loop: Header=BB40_1 Depth=1
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*8(%rcx)
.LBB40_4:                               #   in Loop: Header=BB40_1 Depth=1
	jmp	.LBB40_5
.LBB40_5:                               #   in Loop: Header=BB40_1 Depth=1
	movq	-16(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -16(%rbp)
	jmp	.LBB40_1
.LBB40_6:
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$1104, %rax             # imm = 0x450
	movq	%rax, %rdi
	callq	_ZN2sf4TextD2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EED2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$1032, %rax             # imm = 0x408
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEED2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$656, %rax              # imm = 0x290
	movq	%rax, %rdi
	callq	_ZN2sf14RectangleShapeD2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$584, %rax              # imm = 0x248
	movq	%rax, %rdi
	callq	_ZNSt8functionIFvhEED2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$504, %rax              # imm = 0x1F8
	movq	%rax, %rdi
	callq	_ZN2sf7TextureD1Ev@PLT
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$464, %rax              # imm = 0x1D0
	movq	%rax, %rdi
	callq	_ZN2sf7TextureD1Ev@PLT
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$360, %rax              # imm = 0x168
	movq	%rax, %rdi
	callq	_ZN2sf6ShaderD1Ev@PLT
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$320, %rax              # imm = 0x140
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEED2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$296, %rax              # imm = 0x128
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EED2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$272, %rax              # imm = 0x110
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EED2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$248, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EED2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$224, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EED2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$200, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$184, %rax
	movq	%rax, %rdi
	callq	_ZN11IRenderableD2Ev
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN14ITransformableD2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end40:
	.size	_ZN5PlaneD2Ev, .Lfunc_end40-_ZN5PlaneD2Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZThn184_N5PlaneD1Ev    # -- Begin function _ZThn184_N5PlaneD1Ev
	.p2align	4, 0x90
	.type	_ZThn184_N5PlaneD1Ev,@function
_ZThn184_N5PlaneD1Ev:                   # @_ZThn184_N5PlaneD1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$-184, %rax
	movq	%rax, %rdi
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	jmp	_ZN5PlaneD1Ev           # TAILCALL
.Lfunc_end41:
	.size	_ZThn184_N5PlaneD1Ev, .Lfunc_end41-_ZThn184_N5PlaneD1Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5PlaneD0Ev           # -- Begin function _ZN5PlaneD0Ev
	.p2align	4, 0x90
	.type	_ZN5PlaneD0Ev,@function
_ZN5PlaneD0Ev:                          # @_ZN5PlaneD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN5PlaneD1Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end42:
	.size	_ZN5PlaneD0Ev, .Lfunc_end42-_ZN5PlaneD0Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZThn184_N5PlaneD0Ev    # -- Begin function _ZThn184_N5PlaneD0Ev
	.p2align	4, 0x90
	.type	_ZThn184_N5PlaneD0Ev,@function
_ZThn184_N5PlaneD0Ev:                   # @_ZThn184_N5PlaneD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$-184, %rax
	movq	%rax, %rdi
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	jmp	_ZN5PlaneD0Ev           # TAILCALL
.Lfunc_end43:
	.size	_ZThn184_N5PlaneD0Ev, .Lfunc_end43-_ZThn184_N5PlaneD0Ev
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane13AddCollectionEP10Collectionb # -- Begin function _ZN5Plane13AddCollectionEP10Collectionb
	.p2align	4, 0x90
	.type	_ZN5Plane13AddCollectionEP10Collectionb,@function
_ZN5Plane13AddCollectionEP10Collectionb: # @_ZN5Plane13AddCollectionEP10Collectionb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
                                        # kill: def $dl killed $dl killed $edx
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -16(%rbp)
	andb	$1, %dl
	movb	%dl, -25(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rcx
	addq	$1072, %rcx             # imm = 0x430
	leaq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$1032, %rax             # imm = 0x408
	movzbl	-25(%rbp), %r8d
	andl	$1, %r8d
	movq	%rax, %rdi
	movl	%r8d, %esi
	callq	_ZNSt6vectorIbSaIbEE9push_backEb
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
                                        # kill: def $eax killed $eax killed $rax
	decl	%eax
	movzbl	-25(%rbp), %esi
	andl	$1, %esi
                                        # kill: def $ax killed $ax killed $eax
	movzwl	%ax, %r8d
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movl	%esi, -52(%rbp)         # 4-byte Spill
	movl	%r8d, %esi
	movl	-52(%rbp), %edx         # 4-byte Reload
	callq	_ZN5Plane12CreateBufferEtb
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rcx
	jne	.LBB44_2
# %bb.1:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB44_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end44:
	.size	_ZN5Plane13AddCollectionEP10Collectionb, .Lfunc_end44-_ZN5Plane13AddCollectionEP10Collectionb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_ # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_,@function
_ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_: # @_ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB45_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB45_3
.LBB45_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.LBB45_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end45:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_, .Lfunc_end45-_ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE9push_backEb,"axG",@progbits,_ZNSt6vectorIbSaIbEE9push_backEb,comdat
	.weak	_ZNSt6vectorIbSaIbEE9push_backEb # -- Begin function _ZNSt6vectorIbSaIbEE9push_backEb
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE9push_backEb,@function
_ZNSt6vectorIbSaIbEE9push_backEb:       # @_ZNSt6vectorIbSaIbEE9push_backEb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
                                        # kill: def $sil killed $sil killed $esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -64(%rbp)
	andb	$1, %sil
	movb	%sil, -65(%rbp)
	movq	-64(%rbp), %rax
	movq	16(%rax), %rcx
	movq	%rax, %rdx
	movq	%rdx, %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movq	%rcx, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	je	.LBB46_2
# %bb.1:
	xorl	%esi, %esi
	movb	-65(%rbp), %al
	movq	-80(%rbp), %rcx         # 8-byte Reload
	addq	$16, %rcx
	movq	%rcx, %rdi
	movb	%al, -89(%rbp)          # 1-byte Spill
	callq	_ZNSt13_Bit_iteratorppEi
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	leaq	-24(%rbp), %rdi
	callq	_ZNKSt13_Bit_iteratordeEv
	movq	%rax, -56(%rbp)
	movq	%rdx, -48(%rbp)
	movb	-89(%rbp), %r8b         # 1-byte Reload
	andb	$1, %r8b
	leaq	-56(%rbp), %rdi
	movzbl	%r8b, %esi
	callq	_ZNSt14_Bit_referenceaSEb
	jmp	.LBB46_3
.LBB46_2:
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE3endEv
	movq	%rax, -40(%rbp)
	movl	%edx, -32(%rbp)
	movb	-65(%rbp), %cl
	movq	-40(%rbp), %rsi
	movl	-32(%rbp), %edx
	andb	$1, %cl
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movzbl	%cl, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
.LBB46_3:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB46_5
# %bb.4:
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB46_5:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end46:
	.size	_ZNSt6vectorIbSaIbEE9push_backEb, .Lfunc_end46-_ZNSt6vectorIbSaIbEE9push_backEb
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN5Plane12CreateBufferEtb # -- Begin function _ZN5Plane12CreateBufferEtb
	.p2align	4, 0x90
	.type	_ZN5Plane12CreateBufferEtb,@function
_ZN5Plane12CreateBufferEtb:             # @_ZN5Plane12CreateBufferEtb
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception11
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$320, %rsp              # imm = 0x140
                                        # kill: def $dl killed $dl killed $edx
                                        # kill: def $si killed $si killed $esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -208(%rbp)
	movw	%si, -210(%rbp)
	andb	$1, %dl
	movb	%dl, -211(%rbp)
	movq	-208(%rbp), %rax
	movq	%rax, %rcx
	addq	$200, %rcx
	vxorps	%xmm0, %xmm0, %xmm0
	vmovdqa	%xmm0, -96(%rbp)
	movq	$0, -80(%rbp)
	leaq	-96(%rbp), %rdi
	movq	%rdi, -240(%rbp)        # 8-byte Spill
	movq	%rax, -248(%rbp)        # 8-byte Spill
	movq	%rcx, -256(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev
.Ltmp149:
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movq	-240(%rbp), %rsi        # 8-byte Reload
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_
.Ltmp150:
	jmp	.LBB47_1
.LBB47_1:
	leaq	-96(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	movq	-248(%rbp), %rax        # 8-byte Reload
	addq	$200, %rax
	movq	%rax, %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
	movl	$200, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm
	movq	-248(%rbp), %rax        # 8-byte Reload
	addq	$224, %rax
	leaq	-128(%rbp), %rcx
	movl	$3, %esi
	movl	$1, %edx
	movq	%rcx, %rdi
	movq	%rax, -264(%rbp)        # 8-byte Spill
	movq	%rcx, -272(%rbp)        # 8-byte Spill
	callq	_ZN2sf12VertexBufferC1ENS_13PrimitiveTypeENS0_5UsageE@PLT
.Ltmp152:
	movq	-264(%rbp), %rdi        # 8-byte Reload
	movq	-272(%rbp), %rsi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_
.Ltmp153:
	jmp	.LBB47_2
.LBB47_2:
	leaq	-128(%rbp), %rdi
	callq	_ZN2sf12VertexBufferD1Ev@PLT
	movq	-248(%rbp), %rax        # 8-byte Reload
	addq	$248, %rax
	leaq	-72(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, -280(%rbp)        # 8-byte Spill
	movq	%rcx, -288(%rbp)        # 8-byte Spill
	callq	_ZN2sf9TransformC1Ev@PLT
	movq	-280(%rbp), %rdi        # 8-byte Reload
	movq	-288(%rbp), %rsi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_
	movq	-248(%rbp), %rax        # 8-byte Reload
	addq	$272, %rax              # imm = 0x110
	leaq	-160(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, -296(%rbp)        # 8-byte Spill
	movq	%rcx, -304(%rbp)        # 8-byte Spill
	callq	_ZN2sf5ImageC1Ev@PLT
.Ltmp155:
	movq	-296(%rbp), %rdi        # 8-byte Reload
	movq	-304(%rbp), %rsi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_
.Ltmp156:
	jmp	.LBB47_3
.LBB47_3:
	leaq	-160(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
	movq	-248(%rbp), %rax        # 8-byte Reload
	addq	$296, %rax              # imm = 0x128
	leaq	-200(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, -312(%rbp)        # 8-byte Spill
	movq	%rcx, -320(%rbp)        # 8-byte Spill
	callq	_ZN2sf7TextureC1Ev@PLT
.Ltmp158:
	movq	-312(%rbp), %rdi        # 8-byte Reload
	movq	-320(%rbp), %rsi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_
.Ltmp159:
	jmp	.LBB47_4
.LBB47_4:
	leaq	-200(%rbp), %rdi
	callq	_ZN2sf7TextureD1Ev@PLT
	movq	-248(%rbp), %rax        # 8-byte Reload
	addq	$320, %rax              # imm = 0x140
	xorl	%esi, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEE9push_backEb
	movzwl	-210(%rbp), %esi
	movq	-248(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane12UpdateBufferEt
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB47_11
# %bb.5:
	addq	$320, %rsp              # imm = 0x140
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB47_6:
	.cfi_def_cfa %rbp, 16
.Ltmp151:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -224(%rbp)
	movl	%edx, -228(%rbp)
	leaq	-96(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	jmp	.LBB47_10
.LBB47_7:
.Ltmp154:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -224(%rbp)
	movl	%edx, -228(%rbp)
	leaq	-128(%rbp), %rdi
	callq	_ZN2sf12VertexBufferD1Ev@PLT
	jmp	.LBB47_10
.LBB47_8:
.Ltmp157:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -224(%rbp)
	movl	%edx, -228(%rbp)
	leaq	-160(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
	jmp	.LBB47_10
.LBB47_9:
.Ltmp160:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -224(%rbp)
	movl	%edx, -228(%rbp)
	leaq	-200(%rbp), %rdi
	callq	_ZN2sf7TextureD1Ev@PLT
.LBB47_10:
	movq	-224(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB47_11:
	callq	__stack_chk_fail@PLT
.Lfunc_end47:
	.size	_ZN5Plane12CreateBufferEtb, .Lfunc_end47-_ZN5Plane12CreateBufferEtb
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table47:
.Lexception11:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Ltmp149-.Lfunc_begin11 # >> Call Site 1 <<
	.uleb128 .Ltmp150-.Ltmp149      #   Call between .Ltmp149 and .Ltmp150
	.uleb128 .Ltmp151-.Lfunc_begin11 #     jumps to .Ltmp151
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp150-.Lfunc_begin11 # >> Call Site 2 <<
	.uleb128 .Ltmp152-.Ltmp150      #   Call between .Ltmp150 and .Ltmp152
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp152-.Lfunc_begin11 # >> Call Site 3 <<
	.uleb128 .Ltmp153-.Ltmp152      #   Call between .Ltmp152 and .Ltmp153
	.uleb128 .Ltmp154-.Lfunc_begin11 #     jumps to .Ltmp154
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp153-.Lfunc_begin11 # >> Call Site 4 <<
	.uleb128 .Ltmp155-.Ltmp153      #   Call between .Ltmp153 and .Ltmp155
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp155-.Lfunc_begin11 # >> Call Site 5 <<
	.uleb128 .Ltmp156-.Ltmp155      #   Call between .Ltmp155 and .Ltmp156
	.uleb128 .Ltmp157-.Lfunc_begin11 #     jumps to .Ltmp157
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp156-.Lfunc_begin11 # >> Call Site 6 <<
	.uleb128 .Ltmp158-.Ltmp156      #   Call between .Ltmp156 and .Ltmp158
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp158-.Lfunc_begin11 # >> Call Site 7 <<
	.uleb128 .Ltmp159-.Ltmp158      #   Call between .Ltmp158 and .Ltmp159
	.uleb128 .Ltmp160-.Lfunc_begin11 #     jumps to .Ltmp160
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp159-.Lfunc_begin11 # >> Call Site 8 <<
	.uleb128 .Lfunc_end47-.Ltmp159  #   Call between .Ltmp159 and .Lfunc_end47
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end11:
	.p2align	2
                                        # -- End function
	.text
	.globl	_ZN5Plane14GetCollectionsEv # -- Begin function _ZN5Plane14GetCollectionsEv
	.p2align	4, 0x90
	.type	_ZN5Plane14GetCollectionsEv,@function
_ZN5Plane14GetCollectionsEv:            # @_ZN5Plane14GetCollectionsEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$1072, %rax             # imm = 0x430
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end48:
	.size	_ZN5Plane14GetCollectionsEv, .Lfunc_end48-_ZN5Plane14GetCollectionsEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane16DeleteCollectionEmb # -- Begin function _ZN5Plane16DeleteCollectionEmb
	.p2align	4, 0x90
	.type	_ZN5Plane16DeleteCollectionEmb,@function
_ZN5Plane16DeleteCollectionEmb:         # @_ZN5Plane16DeleteCollectionEmb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$432, %rsp              # imm = 0x1B0
                                        # kill: def $dl killed $dl killed $edx
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -288(%rbp)
	movq	%rsi, -296(%rbp)
	andb	$1, %dl
	movb	%dl, -297(%rbp)
	movq	-288(%rbp), %rax
	movq	%rax, %rcx
	addq	$200, %rcx
	movq	%rax, %rsi
	addq	$200, %rsi
	movq	%rsi, %rdi
	movq	%rax, -360(%rbp)        # 8-byte Spill
	movq	%rcx, -368(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv
	movq	%rax, -160(%rbp)
	movq	-296(%rbp), %rsi
	leaq	-160(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl
	movq	%rax, -152(%rbp)
	leaq	-144(%rbp), %rdi
	leaq	-152(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE
	movq	-144(%rbp), %rsi
	movq	-368(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE
	movq	%rax, -312(%rbp)
	movq	-360(%rbp), %rax        # 8-byte Reload
	addq	$224, %rax
	movq	-360(%rbp), %rcx        # 8-byte Reload
	addq	$224, %rcx
	movq	%rcx, %rdi
	movq	%rax, -376(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv
	movq	%rax, -184(%rbp)
	movq	-296(%rbp), %rsi
	leaq	-184(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -176(%rbp)
	leaq	-168(%rbp), %rdi
	leaq	-176(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	movq	-168(%rbp), %rsi
	movq	-376(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	movq	%rax, -320(%rbp)
	movq	-360(%rbp), %rax        # 8-byte Reload
	addq	$248, %rax
	movq	-360(%rbp), %rcx        # 8-byte Reload
	addq	$248, %rcx
	movq	%rcx, %rdi
	movq	%rax, -384(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv
	movq	%rax, -208(%rbp)
	movq	-296(%rbp), %rsi
	leaq	-208(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -200(%rbp)
	leaq	-192(%rbp), %rdi
	leaq	-200(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	movq	-192(%rbp), %rsi
	movq	-384(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	movq	%rax, -328(%rbp)
	movq	-360(%rbp), %rax        # 8-byte Reload
	addq	$272, %rax              # imm = 0x110
	movq	-360(%rbp), %rcx        # 8-byte Reload
	addq	$272, %rcx              # imm = 0x110
	movq	%rcx, %rdi
	movq	%rax, -392(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv
	movq	%rax, -232(%rbp)
	movq	-296(%rbp), %rsi
	leaq	-232(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -224(%rbp)
	leaq	-216(%rbp), %rdi
	leaq	-224(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	movq	-216(%rbp), %rsi
	movq	-392(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	movq	%rax, -336(%rbp)
	movq	-360(%rbp), %rax        # 8-byte Reload
	addq	$296, %rax              # imm = 0x128
	movq	-360(%rbp), %rcx        # 8-byte Reload
	addq	$296, %rcx              # imm = 0x128
	movq	%rcx, %rdi
	movq	%rax, -400(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv
	movq	%rax, -256(%rbp)
	movq	-296(%rbp), %rsi
	leaq	-256(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -248(%rbp)
	leaq	-240(%rbp), %rdi
	leaq	-248(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	movq	-240(%rbp), %rsi
	movq	-400(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	movq	%rax, -344(%rbp)
	movq	-360(%rbp), %rax        # 8-byte Reload
	addq	$320, %rax              # imm = 0x140
	movq	-360(%rbp), %rcx        # 8-byte Reload
	addq	$320, %rcx              # imm = 0x140
	movq	%rcx, %rdi
	movq	%rax, -408(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIbSaIbEE5beginEv
	movq	%rax, -56(%rbp)
	movl	%edx, -48(%rbp)
	movq	-296(%rbp), %rsi
	leaq	-56(%rbp), %rdi
	callq	_ZStplRKSt13_Bit_iteratorl
	movq	%rax, -40(%rbp)
	movl	%edx, -32(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
	movq	-24(%rbp), %rsi
	movl	-16(%rbp), %edx
	movq	-408(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator
	movq	%rax, -72(%rbp)
	movl	%edx, -64(%rbp)
	movq	-360(%rbp), %rax        # 8-byte Reload
	addq	$1032, %rax             # imm = 0x408
	movq	-360(%rbp), %rcx        # 8-byte Reload
	addq	$1032, %rcx             # imm = 0x408
	movq	%rcx, %rdi
	movq	%rax, -416(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIbSaIbEE5beginEv
	movq	%rax, -120(%rbp)
	movl	%edx, -112(%rbp)
	movq	-296(%rbp), %rsi
	leaq	-120(%rbp), %rdi
	callq	_ZStplRKSt13_Bit_iteratorl
	movq	%rax, -104(%rbp)
	movl	%edx, -96(%rbp)
	leaq	-88(%rbp), %rdi
	leaq	-104(%rbp), %rsi
	callq	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
	movq	-88(%rbp), %rsi
	movl	-80(%rbp), %edx
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator
	movq	%rax, -136(%rbp)
	movl	%edx, -128(%rbp)
	testb	$1, -297(%rbp)
	je	.LBB49_4
# %bb.1:
	movq	-360(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	cmpq	$0, %rax
	movq	%rax, -424(%rbp)        # 8-byte Spill
	je	.LBB49_3
# %bb.2:
	movq	-424(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*8(%rcx)
.LBB49_3:
	jmp	.LBB49_4
.LBB49_4:
	movq	-360(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	%rax, %rdi
	movq	%rax, -432(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv
	movq	%rax, -280(%rbp)
	movq	-296(%rbp), %rsi
	leaq	-280(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -272(%rbp)
	leaq	-264(%rbp), %rdi
	leaq	-272(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	movq	-264(%rbp), %rsi
	movq	-432(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	movq	%rax, -352(%rbp)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB49_6
# %bb.5:
	addq	$432, %rsp              # imm = 0x1B0
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB49_6:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end49:
	.size	_ZN5Plane16DeleteCollectionEmb, .Lfunc_end49-_ZN5Plane16DeleteCollectionEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv
	movq	%rax, -24(%rbp)
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv
	movq	%rax, -32(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_
	leaq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rsi
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jne	.LBB50_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB50_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end50:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE, .Lfunc_end50-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB51_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB51_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end51:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv, .Lfunc_end51-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rcx,%rcx,2), %rcx
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB52_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB52_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end52:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl, .Lfunc_end52-_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE,@function
_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE: # @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end53:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE, .Lfunc_end53-_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv
	movq	%rax, -32(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	leaq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rsi
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jne	.LBB54_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB54_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end54:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE, .Lfunc_end54-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB55_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB55_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end55:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv, .Lfunc_end55-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	shlq	$5, %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB56_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB56_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end56:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl, .Lfunc_end56-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end57:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE, .Lfunc_end57-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv
	movq	%rax, -32(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	leaq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rsi
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jne	.LBB58_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB58_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end58:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE, .Lfunc_end58-_ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB59_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB59_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end59:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv, .Lfunc_end59-_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	shlq	$6, %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB60_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB60_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end60:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl, .Lfunc_end60-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end61:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE, .Lfunc_end61-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE: # @_ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv
	movq	%rax, -32(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	leaq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rsi
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jne	.LBB62_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB62_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end62:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE, .Lfunc_end62-_ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv: # @_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB63_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB63_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end63:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv, .Lfunc_end63-_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	shlq	$5, %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB64_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB64_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end64:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl, .Lfunc_end64-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end65:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE, .Lfunc_end65-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE: # @_ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv
	movq	%rax, -32(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	leaq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rsi
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jne	.LBB66_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB66_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end66:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE, .Lfunc_end66-_ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv: # @_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB67_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB67_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end67:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv, .Lfunc_end67-_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB68_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB68_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end68:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl, .Lfunc_end68-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end69:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE, .Lfunc_end69-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator,"axG",@progbits,_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator,comdat
	.weak	_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator # -- Begin function _ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator,@function
_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator: # @_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -40(%rbp)
	movl	%edx, -32(%rbp)
	movq	%rdi, -64(%rbp)
	movq	-64(%rbp), %rdi
	leaq	-40(%rbp), %rax
	movq	%rdi, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNKSt19_Bit_const_iterator13_M_const_castEv
	movq	%rax, -56(%rbp)
	movl	%edx, -48(%rbp)
	movq	-56(%rbp), %rsi
	movl	-48(%rbp), %edx
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -76(%rbp)         # 4-byte Spill
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB70_2
# %bb.1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	-76(%rbp), %edx         # 4-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB70_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end70:
	.size	_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator, .Lfunc_end70-_ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplRKSt13_Bit_iteratorl,"axG",@progbits,_ZStplRKSt13_Bit_iteratorl,comdat
	.weak	_ZStplRKSt13_Bit_iteratorl # -- Begin function _ZStplRKSt13_Bit_iteratorl
	.p2align	4, 0x90
	.type	_ZStplRKSt13_Bit_iteratorl,@function
_ZStplRKSt13_Bit_iteratorl:             # @_ZStplRKSt13_Bit_iteratorl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	vmovdqu	(%rax), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movq	-48(%rbp), %rsi
	leaq	-32(%rbp), %rdi
	callq	_ZNSt13_Bit_iteratorpLEl
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rcx
	movq	%fs:40, %rsi
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rsi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	jne	.LBB71_2
# %bb.1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	-52(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB71_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end71:
	.size	_ZStplRKSt13_Bit_iteratorl, .Lfunc_end71-_ZStplRKSt13_Bit_iteratorl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE5beginEv,"axG",@progbits,_ZNSt6vectorIbSaIbEE5beginEv,comdat
	.weak	_ZNSt6vectorIbSaIbEE5beginEv # -- Begin function _ZNSt6vectorIbSaIbEE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE5beginEv,@function
_ZNSt6vectorIbSaIbEE5beginEv:           # @_ZNSt6vectorIbSaIbEE5beginEv
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception12
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rsi
.Ltmp161:
	leaq	-24(%rbp), %rdi
	xorl	%edx, %edx
	callq	_ZNSt13_Bit_iteratorC2EPmj
.Ltmp162:
	jmp	.LBB72_1
.LBB72_1:
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -36(%rbp)         # 4-byte Spill
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB72_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	-36(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB72_3:
	.cfi_def_cfa %rbp, 16
.Ltmp163:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB72_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end72:
	.size	_ZNSt6vectorIbSaIbEE5beginEv, .Lfunc_end72-_ZNSt6vectorIbSaIbEE5beginEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table72:
.Lexception12:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Ltmp161-.Lfunc_begin12 # >> Call Site 1 <<
	.uleb128 .Ltmp162-.Ltmp161      #   Call between .Ltmp161 and .Ltmp162
	.uleb128 .Ltmp163-.Lfunc_begin12 #     jumps to .Ltmp163
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp162-.Lfunc_begin12 # >> Call Site 2 <<
	.uleb128 .Lfunc_end72-.Ltmp162  #   Call between .Ltmp162 and .Lfunc_end72
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end12:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase7:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator,"axG",@progbits,_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator,comdat
	.weak	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator # -- Begin function _ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
	.p2align	4, 0x90
	.type	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator,@function
_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator: # @_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rsi
	movq	-16(%rbp), %rcx
	movl	8(%rcx), %edx
	movq	%rax, %rdi
	callq	_ZNSt18_Bit_iterator_baseC2EPmj
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end73:
	.size	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator, .Lfunc_end73-_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE,@function
_ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE: # @_ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv
	movq	%rax, -32(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	leaq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -56(%rbp)
	movq	-56(%rbp), %rsi
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jne	.LBB74_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB74_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end74:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE, .Lfunc_end74-_ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv,@function
_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv: # @_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB75_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB75_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end75:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv, .Lfunc_end75-_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB76_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB76_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end76:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl, .Lfunc_end76-_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE,@function
_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE: # @_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end77:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE, .Lfunc_end77-_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2IPS2_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISB_SA_EE7__valueES7_E6__typeEEE
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN5Plane22TranslateInnerPositionERKN2sf7Vector2IiEE # -- Begin function _ZN5Plane22TranslateInnerPositionERKN2sf7Vector2IiEE
	.p2align	4, 0x90
	.type	_ZN5Plane22TranslateInnerPositionERKN2sf7Vector2IiEE,@function
_ZN5Plane22TranslateInnerPositionERKN2sf7Vector2IiEE: # @_ZN5Plane22TranslateInnerPositionERKN2sf7Vector2IiEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	addq	$1096, %rax             # imm = 0x448
	movq	%rax, %rdi
	callq	_ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end78:
	.size	_ZN5Plane22TranslateInnerPositionERKN2sf7Vector2IiEE, .Lfunc_end78-_ZN5Plane22TranslateInnerPositionERKN2sf7Vector2IiEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_,"axG",@progbits,_ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_,comdat
	.weak	_ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_ # -- Begin function _ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_
	.p2align	4, 0x90
	.type	_ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_,@function
_ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_:  # @_ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	movl	(%rax), %ecx
	movq	-8(%rbp), %rax
	addl	(%rax), %ecx
	movl	%ecx, (%rax)
	movq	-16(%rbp), %rax
	movl	4(%rax), %ecx
	movq	-8(%rbp), %rax
	addl	4(%rax), %ecx
	movl	%ecx, 4(%rax)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end79:
	.size	_ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_, .Lfunc_end79-_ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN5Plane16SetInnerPositionEN2sf7Vector2IiEE # -- Begin function _ZN5Plane16SetInnerPositionEN2sf7Vector2IiEE
	.p2align	4, 0x90
	.type	_ZN5Plane16SetInnerPositionEN2sf7Vector2IiEE,@function
_ZN5Plane16SetInnerPositionEN2sf7Vector2IiEE: # @_ZN5Plane16SetInnerPositionEN2sf7Vector2IiEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, 1096(%rax)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB80_2
# %bb.1:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB80_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end80:
	.size	_ZN5Plane16SetInnerPositionEN2sf7Vector2IiEE, .Lfunc_end80-_ZN5Plane16SetInnerPositionEN2sf7Vector2IiEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane16GetInnerPositionEv # -- Begin function _ZN5Plane16GetInnerPositionEv
	.p2align	4, 0x90
	.type	_ZN5Plane16GetInnerPositionEv,@function
_ZN5Plane16GetInnerPositionEv:          # @_ZN5Plane16GetInnerPositionEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	1096(%rax), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB81_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB81_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end81:
	.size	_ZN5Plane16GetInnerPositionEv, .Lfunc_end81-_ZN5Plane16GetInnerPositionEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane14DeleteContentsEb # -- Begin function _ZN5Plane14DeleteContentsEb
	.p2align	4, 0x90
	.type	_ZN5Plane14DeleteContentsEb,@function
_ZN5Plane14DeleteContentsEb:            # @_ZN5Plane14DeleteContentsEb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
                                        # kill: def $sil killed $sil killed $esi
	movq	%rdi, -8(%rbp)
	andb	$1, %sil
	movb	%sil, -9(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, -24(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
.LBB82_1:                               # =>This Inner Loop Header: Depth=1
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx         # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movq	%rcx, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	-40(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB82_4
# %bb.2:                                #   in Loop: Header=BB82_1 Depth=1
	xorl	%eax, %eax
	movl	%eax, %esi
	movb	-9(%rbp), %cl
	andb	$1, %cl
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movzbl	%cl, %edx
	callq	_ZN5Plane16DeleteCollectionEmb
# %bb.3:                                #   in Loop: Header=BB82_1 Depth=1
	movq	-24(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -24(%rbp)
	jmp	.LBB82_1
.LBB82_4:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end82:
	.size	_ZN5Plane14DeleteContentsEb, .Lfunc_end82-_ZN5Plane14DeleteContentsEb
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane17UpdateVAOPositionEm # -- Begin function _ZN5Plane17UpdateVAOPositionEm
	.p2align	4, 0x90
	.type	_ZN5Plane17UpdateVAOPositionEm,@function
_ZN5Plane17UpdateVAOPositionEm:         # @_ZN5Plane17UpdateVAOPositionEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end83:
	.size	_ZN5Plane17UpdateVAOPositionEm, .Lfunc_end83-_ZN5Plane17UpdateVAOPositionEm
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane9UpdateVAOEm   # -- Begin function _ZN5Plane9UpdateVAOEm
	.p2align	4, 0x90
	.type	_ZN5Plane9UpdateVAOEm,@function
_ZN5Plane9UpdateVAOEm:                  # @_ZN5Plane9UpdateVAOEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %esi
	callq	_ZN5Plane12UpdateBufferEt
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end84:
	.size	_ZN5Plane9UpdateVAOEm, .Lfunc_end84-_ZN5Plane9UpdateVAOEm
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function _ZN5Plane12UpdateBufferEt
.LCPI85_0:
	.quad	4890909195324358656     # double 9.2233720368547758E+18
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI85_1:
	.long	1073741824              # float 2
	.text
	.globl	_ZN5Plane12UpdateBufferEt
	.p2align	4, 0x90
	.type	_ZN5Plane12UpdateBufferEt,@function
_ZN5Plane12UpdateBufferEt:              # @_ZN5Plane12UpdateBufferEt
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception13
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$2848, %rsp             # imm = 0xB20
                                        # kill: def $si killed $si killed $esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -1600(%rbp)
	movw	%si, -1602(%rbp)
	movq	-1600(%rbp), %rax
	movq	%rax, %rcx
	addq	$200, %rcx
	movzwl	-1602(%rbp), %edx
	movl	%edx, %esi
	movq	%rcx, %rdi
	movq	%rax, -1888(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$1032, %rax             # imm = 0x408
	movzwl	-1602(%rbp), %edx
	movl	%edx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEEixEm
	movq	%rax, -872(%rbp)
	movq	%rdx, -864(%rbp)
	leaq	-872(%rbp), %rdi
	callq	_ZNKSt14_Bit_referencecvbEv
	testb	$1, %al
	jne	.LBB85_1
	jmp	.LBB85_2
.LBB85_1:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$200, %rax
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movq	-1888(%rbp), %rdx       # 8-byte Reload
	addq	$1072, %rdx             # imm = 0x430
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rdx, %rdi
	movq	%rax, -1896(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZN14ITransformable7getSizeEv@PLT
	movq	(%rax), %rax
	movq	%rax, -880(%rbp)
	movq	-880(%rbp), %rdx
	movq	-1888(%rbp), %rdi       # 8-byte Reload
	movq	-1896(%rbp), %rsi       # 8-byte Reload
	callq	_ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE
.LBB85_2:
	leaq	-904(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev
	leaq	-928(%rbp), %rdi
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEC2Ev
	leaq	-1000(%rbp), %rdi
	callq	_ZNSt6vectorItSaItEEC2Ev
	movq	$0, -1616(%rbp)
.LBB85_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB85_6 Depth 2
                                        #       Child Loop BB85_52 Depth 3
                                        #         Child Loop BB85_66 Depth 4
	movq	-1616(%rbp), %rax
	movq	-1888(%rbp), %rcx       # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movzwl	-1602(%rbp), %edx
	movl	%edx, %esi
	movq	%rcx, %rdi
	movq	%rax, -1904(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp164:
	callq	_ZN10Collection9GetStacksEv@PLT
.Ltmp165:
	movq	%rax, -1912(%rbp)       # 8-byte Spill
	jmp	.LBB85_4
.LBB85_4:                               #   in Loop: Header=BB85_3 Depth=1
	movq	-1912(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv
	movq	-1904(%rbp), %rcx       # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB85_83
# %bb.5:                                #   in Loop: Header=BB85_3 Depth=1
	movq	$0, -1640(%rbp)
.LBB85_6:                               #   Parent Loop BB85_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB85_52 Depth 3
                                        #         Child Loop BB85_66 Depth 4
	movq	-1640(%rbp), %rax
	movq	-1888(%rbp), %rcx       # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movzwl	-1602(%rbp), %edx
	movl	%edx, %esi
	movq	%rcx, %rdi
	movq	%rax, -1920(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp274:
	callq	_ZN10Collection9GetStacksEv@PLT
.Ltmp275:
	movq	%rax, -1928(%rbp)       # 8-byte Spill
	jmp	.LBB85_7
.LBB85_7:                               #   in Loop: Header=BB85_6 Depth=2
	movq	-1616(%rbp), %rsi
	movq	-1928(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp276:
	callq	_ZN5Stack9GetBlocksEv@PLT
.Ltmp277:
	movq	%rax, -1936(%rbp)       # 8-byte Spill
	jmp	.LBB85_8
.LBB85_8:                               #   in Loop: Header=BB85_6 Depth=2
	movq	-1936(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	movq	-1920(%rbp), %rcx       # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB85_81
# %bb.9:                                #   in Loop: Header=BB85_6 Depth=2
	vxorps	%xmm0, %xmm0, %xmm0
	vmovdqa	%xmm0, -1024(%rbp)
	movq	$0, -1008(%rbp)
	leaq	-1024(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -1944(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev
.Ltmp278:
	leaq	-976(%rbp), %rdi
	movq	-1944(%rbp), %rsi       # 8-byte Reload
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_
.Ltmp279:
	jmp	.LBB85_10
.LBB85_10:                              #   in Loop: Header=BB85_6 Depth=2
	leaq	-1024(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	movw	$0, -1026(%rbp)
	movq	_ZN6Global11BlockBorderE@GOTPCREL(%rip), %rax
	movzbl	(%rax), %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%ecx, %xmm0, %xmm0
	vmovss	%xmm0, -1644(%rbp)
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp281:
	callq	_ZN10Collection9GetStacksEv@PLT
.Ltmp282:
	movq	%rax, -1952(%rbp)       # 8-byte Spill
	jmp	.LBB85_11
.LBB85_11:                              #   in Loop: Header=BB85_6 Depth=2
	movq	-1616(%rbp), %rsi
	movq	-1952(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp283:
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
.Ltmp284:
	movq	%rax, -1960(%rbp)       # 8-byte Spill
	jmp	.LBB85_12
.LBB85_12:                              #   in Loop: Header=BB85_6 Depth=2
	movq	-1640(%rbp), %rax
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rcx
	movzbl	(%rcx), %edx
	movl	%edx, %ecx
	imulq	%rcx, %rax
	movq	%rax, %rcx
	shrq	%rcx
	movl	%eax, %edx
	andl	$1, %edx
	movl	%edx, %esi
	orq	%rcx, %rsi
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rsi, %xmm0, %xmm0
	vaddss	%xmm0, %xmm0, %xmm0
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rax, %xmm1, %xmm1
	testq	%rax, %rax
	vmovss	%xmm1, -1964(%rbp)      # 4-byte Spill
	vmovss	%xmm0, -1968(%rbp)      # 4-byte Spill
	js	.LBB85_229
# %bb.228:                              #   in Loop: Header=BB85_6 Depth=2
	vmovss	-1964(%rbp), %xmm0      # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, -1968(%rbp)      # 4-byte Spill
.LBB85_229:                             #   in Loop: Header=BB85_6 Depth=2
.Ltmp285:
	vmovss	-1968(%rbp), %xmm0      # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	leaq	-1048(%rbp), %rdi
	vxorps	%xmm1, %xmm1, %xmm1
	vmovss	%xmm0, -1972(%rbp)      # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	vmovss	-1972(%rbp), %xmm1      # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp286:
	jmp	.LBB85_13
.LBB85_13:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp287:
	leaq	-1048(%rbp), %rsi
	movq	-1960(%rbp), %rdi       # 8-byte Reload
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
.Ltmp288:
	vmovaps	%xmm0, -2000(%rbp)      # 16-byte Spill
	jmp	.LBB85_14
.LBB85_14:                              #   in Loop: Header=BB85_6 Depth=2
	vmovaps	-2000(%rbp), %xmm0      # 16-byte Reload
	vmovlpd	%xmm0, -1040(%rbp)
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp289:
	callq	_ZN10Collection9GetStacksEv@PLT
.Ltmp290:
	movq	%rax, -2008(%rbp)       # 8-byte Spill
	jmp	.LBB85_15
.LBB85_15:                              #   in Loop: Header=BB85_6 Depth=2
	movq	-1616(%rbp), %rsi
	movq	-2008(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp291:
	callq	_ZN5Stack9GetBlocksEv@PLT
.Ltmp292:
	movq	%rax, -2016(%rbp)       # 8-byte Spill
	jmp	.LBB85_16
.LBB85_16:                              #   in Loop: Header=BB85_6 Depth=2
	movq	-1640(%rbp), %rsi
	movq	-2016(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp293:
	callq	_ZN5Block8GetWidthEv@PLT
.Ltmp294:
	movl	%eax, -2020(%rbp)       # 4-byte Spill
	jmp	.LBB85_17
.LBB85_17:                              #   in Loop: Header=BB85_6 Depth=2
	movl	-2020(%rbp), %eax       # 4-byte Reload
	movl	%eax, -1648(%rbp)
	movq	-1888(%rbp), %rcx       # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movzwl	-1602(%rbp), %edx
	movl	%edx, %esi
	movq	%rcx, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp295:
	callq	_ZN10Collection9GetStacksEv@PLT
.Ltmp296:
	movq	%rax, -2032(%rbp)       # 8-byte Spill
	jmp	.LBB85_18
.LBB85_18:                              #   in Loop: Header=BB85_6 Depth=2
	movq	-1616(%rbp), %rsi
	movq	-2032(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp297:
	callq	_ZN5Stack9GetBlocksEv@PLT
.Ltmp298:
	movq	%rax, -2040(%rbp)       # 8-byte Spill
	jmp	.LBB85_19
.LBB85_19:                              #   in Loop: Header=BB85_6 Depth=2
	movq	-1640(%rbp), %rsi
	movq	-2040(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp299:
	callq	_ZN5Block14GetModCategoryEv@PLT
.Ltmp300:
	movq	%rax, -2048(%rbp)       # 8-byte Spill
	jmp	.LBB85_20
.LBB85_20:                              #   in Loop: Header=BB85_6 Depth=2
	movq	-2048(%rbp), %rax       # 8-byte Reload
	movq	(%rax), %rcx
	movq	(%rcx), %rcx
.Ltmp301:
	movq	%rax, %rdi
	callq	*%rcx
.Ltmp302:
	movl	%eax, -2052(%rbp)       # 4-byte Spill
	jmp	.LBB85_21
.LBB85_21:                              #   in Loop: Header=BB85_6 Depth=2
	movl	-2052(%rbp), %eax       # 4-byte Reload
	movl	%eax, -1056(%rbp)
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
.Ltmp303:
	leaq	-1096(%rbp), %rdi
	vxorps	%xmm0, %xmm0, %xmm0
	vmovss	%xmm0, -2056(%rbp)      # 4-byte Spill
	vmovss	-2056(%rbp), %xmm1      # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rax, -2064(%rbp)       # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp304:
	jmp	.LBB85_22
.LBB85_22:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp305:
	leaq	-1040(%rbp), %rdi
	leaq	-1096(%rbp), %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
.Ltmp306:
	vmovaps	%xmm0, -2080(%rbp)      # 16-byte Spill
	jmp	.LBB85_23
.LBB85_23:                              #   in Loop: Header=BB85_6 Depth=2
	vmovaps	-2080(%rbp), %xmm0      # 16-byte Reload
	vmovlpd	%xmm0, -1088(%rbp)
.Ltmp307:
	leaq	-1104(%rbp), %rdi
	vxorps	%xmm1, %xmm1, %xmm1
	vmovaps	%xmm1, %xmm0
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp308:
	jmp	.LBB85_24
.LBB85_24:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp309:
	leaq	-1080(%rbp), %rdi
	leaq	-1088(%rbp), %rsi
	leaq	-1056(%rbp), %rdx
	leaq	-1104(%rbp), %rcx
	callq	_ZN2sf6VertexC1ERKNS_7Vector2IfEERKNS_5ColorES4_@PLT
.Ltmp310:
	jmp	.LBB85_25
.LBB85_25:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp311:
	leaq	-1080(%rbp), %rsi
	movq	-2064(%rbp), %rdi       # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
.Ltmp312:
	jmp	.LBB85_26
.LBB85_26:                              #   in Loop: Header=BB85_6 Depth=2
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
	movl	-1648(%rbp), %ecx
	movl	%ecx, %edx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rdx, %xmm0, %xmm0
.Ltmp313:
	leaq	-1144(%rbp), %rdi
	vxorps	%xmm1, %xmm1, %xmm1
	movq	%rax, -2088(%rbp)       # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp314:
	jmp	.LBB85_27
.LBB85_27:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp315:
	leaq	-1040(%rbp), %rdi
	leaq	-1144(%rbp), %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
.Ltmp316:
	vmovaps	%xmm0, -2112(%rbp)      # 16-byte Spill
	jmp	.LBB85_28
.LBB85_28:                              #   in Loop: Header=BB85_6 Depth=2
	vmovaps	-2112(%rbp), %xmm0      # 16-byte Reload
	vmovlpd	%xmm0, -1136(%rbp)
.Ltmp317:
	leaq	-1152(%rbp), %rdi
	vxorps	%xmm1, %xmm1, %xmm1
	vmovaps	%xmm1, %xmm0
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp318:
	jmp	.LBB85_29
.LBB85_29:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp319:
	leaq	-1128(%rbp), %rdi
	leaq	-1136(%rbp), %rsi
	leaq	-1056(%rbp), %rdx
	leaq	-1152(%rbp), %rcx
	callq	_ZN2sf6VertexC1ERKNS_7Vector2IfEERKNS_5ColorES4_@PLT
.Ltmp320:
	jmp	.LBB85_30
.LBB85_30:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp321:
	leaq	-1128(%rbp), %rsi
	movq	-2088(%rbp), %rdi       # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
.Ltmp322:
	jmp	.LBB85_31
.LBB85_31:                              #   in Loop: Header=BB85_6 Depth=2
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
	movl	-1648(%rbp), %ecx
	movl	%ecx, %edx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rdx, %xmm0, %xmm0
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rdx
	movzbl	(%rdx), %ecx
                                        # implicit-def: $xmm1
	vcvtsi2ss	%ecx, %xmm1, %xmm1
.Ltmp323:
	leaq	-1192(%rbp), %rdi
	movq	%rax, -2120(%rbp)       # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp324:
	jmp	.LBB85_32
.LBB85_32:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp325:
	leaq	-1040(%rbp), %rdi
	leaq	-1192(%rbp), %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
.Ltmp326:
	vmovaps	%xmm0, -2144(%rbp)      # 16-byte Spill
	jmp	.LBB85_33
.LBB85_33:                              #   in Loop: Header=BB85_6 Depth=2
	vmovaps	-2144(%rbp), %xmm0      # 16-byte Reload
	vmovlpd	%xmm0, -1184(%rbp)
.Ltmp327:
	leaq	-1200(%rbp), %rdi
	vxorps	%xmm1, %xmm1, %xmm1
	vmovaps	%xmm1, %xmm0
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp328:
	jmp	.LBB85_34
.LBB85_34:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp329:
	leaq	-1176(%rbp), %rdi
	leaq	-1184(%rbp), %rsi
	leaq	-1056(%rbp), %rdx
	leaq	-1200(%rbp), %rcx
	callq	_ZN2sf6VertexC1ERKNS_7Vector2IfEERKNS_5ColorES4_@PLT
.Ltmp330:
	jmp	.LBB85_35
.LBB85_35:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp331:
	leaq	-1176(%rbp), %rsi
	movq	-2120(%rbp), %rdi       # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
.Ltmp332:
	jmp	.LBB85_36
.LBB85_36:                              #   in Loop: Header=BB85_6 Depth=2
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
.Ltmp333:
	leaq	-1240(%rbp), %rdi
	vxorps	%xmm0, %xmm0, %xmm0
	vmovss	%xmm0, -2148(%rbp)      # 4-byte Spill
	vmovss	-2148(%rbp), %xmm1      # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rax, -2160(%rbp)       # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp334:
	jmp	.LBB85_37
.LBB85_37:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp335:
	leaq	-1040(%rbp), %rdi
	leaq	-1240(%rbp), %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
.Ltmp336:
	vmovaps	%xmm0, -2176(%rbp)      # 16-byte Spill
	jmp	.LBB85_38
.LBB85_38:                              #   in Loop: Header=BB85_6 Depth=2
	vmovaps	-2176(%rbp), %xmm0      # 16-byte Reload
	vmovlpd	%xmm0, -1232(%rbp)
.Ltmp337:
	leaq	-1248(%rbp), %rdi
	vxorps	%xmm1, %xmm1, %xmm1
	vmovaps	%xmm1, %xmm0
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp338:
	jmp	.LBB85_39
.LBB85_39:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp339:
	leaq	-1224(%rbp), %rdi
	leaq	-1232(%rbp), %rsi
	leaq	-1056(%rbp), %rdx
	leaq	-1248(%rbp), %rcx
	callq	_ZN2sf6VertexC1ERKNS_7Vector2IfEERKNS_5ColorES4_@PLT
.Ltmp340:
	jmp	.LBB85_40
.LBB85_40:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp341:
	leaq	-1224(%rbp), %rsi
	movq	-2160(%rbp), %rdi       # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
.Ltmp342:
	jmp	.LBB85_41
.LBB85_41:                              #   in Loop: Header=BB85_6 Depth=2
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
	movl	-1648(%rbp), %ecx
	movl	%ecx, %edx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rdx, %xmm0, %xmm0
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rdx
	movzbl	(%rdx), %ecx
                                        # implicit-def: $xmm1
	vcvtsi2ss	%ecx, %xmm1, %xmm1
.Ltmp343:
	leaq	-1288(%rbp), %rdi
	movq	%rax, -2184(%rbp)       # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp344:
	jmp	.LBB85_42
.LBB85_42:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp345:
	leaq	-1040(%rbp), %rdi
	leaq	-1288(%rbp), %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
.Ltmp346:
	vmovaps	%xmm0, -2208(%rbp)      # 16-byte Spill
	jmp	.LBB85_43
.LBB85_43:                              #   in Loop: Header=BB85_6 Depth=2
	vmovaps	-2208(%rbp), %xmm0      # 16-byte Reload
	vmovlpd	%xmm0, -1280(%rbp)
.Ltmp347:
	leaq	-1296(%rbp), %rdi
	vxorps	%xmm1, %xmm1, %xmm1
	vmovaps	%xmm1, %xmm0
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp348:
	jmp	.LBB85_44
.LBB85_44:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp349:
	leaq	-1272(%rbp), %rdi
	leaq	-1280(%rbp), %rsi
	leaq	-1056(%rbp), %rdx
	leaq	-1296(%rbp), %rcx
	callq	_ZN2sf6VertexC1ERKNS_7Vector2IfEERKNS_5ColorES4_@PLT
.Ltmp350:
	jmp	.LBB85_45
.LBB85_45:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp351:
	leaq	-1272(%rbp), %rsi
	movq	-2184(%rbp), %rdi       # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
.Ltmp352:
	jmp	.LBB85_46
.LBB85_46:                              #   in Loop: Header=BB85_6 Depth=2
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rcx
	movzbl	(%rcx), %edx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%edx, %xmm0, %xmm1
.Ltmp353:
	leaq	-1336(%rbp), %rdi
	vxorps	%xmm0, %xmm0, %xmm0
	movq	%rax, -2216(%rbp)       # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp354:
	jmp	.LBB85_47
.LBB85_47:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp355:
	leaq	-1040(%rbp), %rdi
	leaq	-1336(%rbp), %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
.Ltmp356:
	vmovaps	%xmm0, -2240(%rbp)      # 16-byte Spill
	jmp	.LBB85_48
.LBB85_48:                              #   in Loop: Header=BB85_6 Depth=2
	vmovaps	-2240(%rbp), %xmm0      # 16-byte Reload
	vmovlpd	%xmm0, -1328(%rbp)
.Ltmp357:
	leaq	-1344(%rbp), %rdi
	vxorps	%xmm1, %xmm1, %xmm1
	vmovaps	%xmm1, %xmm0
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp358:
	jmp	.LBB85_49
.LBB85_49:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp359:
	leaq	-1320(%rbp), %rdi
	leaq	-1328(%rbp), %rsi
	leaq	-1056(%rbp), %rdx
	leaq	-1344(%rbp), %rcx
	callq	_ZN2sf6VertexC1ERKNS_7Vector2IfEERKNS_5ColorES4_@PLT
.Ltmp360:
	jmp	.LBB85_50
.LBB85_50:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp361:
	leaq	-1320(%rbp), %rsi
	movq	-2216(%rbp), %rdi       # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
.Ltmp362:
	jmp	.LBB85_51
.LBB85_51:                              #   in Loop: Header=BB85_6 Depth=2
	movq	$0, -1656(%rbp)
.LBB85_52:                              #   Parent Loop BB85_3 Depth=1
                                        #     Parent Loop BB85_6 Depth=2
                                        # =>    This Loop Header: Depth=3
                                        #         Child Loop BB85_66 Depth 4
	movq	-1656(%rbp), %rax
	movq	-1888(%rbp), %rcx       # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movzwl	-1602(%rbp), %edx
	movl	%edx, %esi
	movq	%rcx, %rdi
	movq	%rax, -2248(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp363:
	callq	_ZN10Collection9GetStacksEv@PLT
.Ltmp364:
	movq	%rax, -2256(%rbp)       # 8-byte Spill
	jmp	.LBB85_53
.LBB85_53:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-1616(%rbp), %rsi
	movq	-2256(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp365:
	callq	_ZN5Stack9GetBlocksEv@PLT
.Ltmp366:
	movq	%rax, -2264(%rbp)       # 8-byte Spill
	jmp	.LBB85_54
.LBB85_54:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-1640(%rbp), %rsi
	movq	-2264(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp367:
	callq	_ZN5Block12GetArgumentsEv@PLT
.Ltmp368:
	movq	%rax, -2272(%rbp)       # 8-byte Spill
	jmp	.LBB85_55
.LBB85_55:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-2272(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv
	movq	-2248(%rbp), %rcx       # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB85_78
# %bb.56:                               #   in Loop: Header=BB85_52 Depth=3
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp371:
	callq	_ZN10Collection9GetStacksEv@PLT
.Ltmp372:
	movq	%rax, -2280(%rbp)       # 8-byte Spill
	jmp	.LBB85_57
.LBB85_57:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-1616(%rbp), %rsi
	movq	-2280(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp373:
	callq	_ZN5Stack9GetBlocksEv@PLT
.Ltmp374:
	movq	%rax, -2288(%rbp)       # 8-byte Spill
	jmp	.LBB85_58
.LBB85_58:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-1640(%rbp), %rsi
	movq	-2288(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
.Ltmp375:
	callq	_ZN5Block12GetArgumentsEv@PLT
.Ltmp376:
	movq	%rax, -2296(%rbp)       # 8-byte Spill
	jmp	.LBB85_59
.LBB85_59:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-1656(%rbp), %rsi
	movq	-2296(%rbp), %rdi       # 8-byte Reload
	callq	_ZNKSt6vectorIP8ArgumentSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, -1664(%rbp)
	movw	-1026(%rbp), %cx
	incw	%cx
	movw	%cx, -1026(%rbp)
	movq	-1664(%rbp), %rdi
.Ltmp377:
	callq	_ZN8Argument14GetVertexArrayEv@PLT
.Ltmp378:
	movq	%rax, -2304(%rbp)       # 8-byte Spill
	jmp	.LBB85_60
.LBB85_60:                              #   in Loop: Header=BB85_52 Depth=3
.Ltmp379:
	leaq	-904(%rbp), %rdi
	movq	-2304(%rbp), %rsi       # 8-byte Reload
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_
.Ltmp380:
	jmp	.LBB85_61
.LBB85_61:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-1664(%rbp), %rdi
.Ltmp381:
	callq	_ZN8Argument20GetVertexArrayCoordsEv@PLT
.Ltmp382:
	movq	%rax, -2312(%rbp)       # 8-byte Spill
	jmp	.LBB85_62
.LBB85_62:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-2312(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1352(%rbp)
.Ltmp383:
	leaq	-928(%rbp), %rdi
	leaq	-1352(%rbp), %rsi
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_
.Ltmp384:
	jmp	.LBB85_63
.LBB85_63:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-1664(%rbp), %rdi
.Ltmp385:
	callq	_ZN8Argument21GetVertexArrayTextureEv@PLT
.Ltmp386:
	movq	%rax, -2320(%rbp)       # 8-byte Spill
	jmp	.LBB85_64
.LBB85_64:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-2320(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1360(%rbp)
.Ltmp387:
	leaq	-952(%rbp), %rdi
	leaq	-1360(%rbp), %rsi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_
.Ltmp388:
	jmp	.LBB85_65
.LBB85_65:                              #   in Loop: Header=BB85_52 Depth=3
	movq	$0, -1672(%rbp)
.LBB85_66:                              #   Parent Loop BB85_3 Depth=1
                                        #     Parent Loop BB85_6 Depth=2
                                        #       Parent Loop BB85_52 Depth=3
                                        # =>      This Inner Loop Header: Depth=4
	movq	-1672(%rbp), %rax
	leaq	-904(%rbp), %rdi
	movq	%rax, -2328(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv
.Ltmp389:
	movq	%rax, %rdi
	callq	_ZNK2sf11VertexArray14getVertexCountEv@PLT
.Ltmp390:
	movq	%rax, -2336(%rbp)       # 8-byte Spill
	jmp	.LBB85_67
.LBB85_67:                              #   in Loop: Header=BB85_66 Depth=4
	movq	-2328(%rbp), %rax       # 8-byte Reload
	movq	-2336(%rbp), %rcx       # 8-byte Reload
	cmpq	%rcx, %rax
	jae	.LBB85_75
# %bb.68:                               #   in Loop: Header=BB85_66 Depth=4
	vmovss	-1644(%rbp), %xmm0      # xmm0 = mem[0],zero,zero,zero
	vmovss	-1040(%rbp), %xmm1      # xmm1 = mem[0],zero,zero,zero
	vmovss	-1036(%rbp), %xmm2      # xmm2 = mem[0],zero,zero,zero
	vaddss	%xmm1, %xmm0, %xmm0
	movq	_ZN6Global11BlockBorderE@GOTPCREL(%rip), %rax
	movzbl	(%rax), %ecx
                                        # implicit-def: $xmm1
	vcvtsi2ss	%ecx, %xmm1, %xmm1
	vmovss	.LCPI85_1(%rip), %xmm3  # xmm3 = mem[0],zero,zero,zero
	vdivss	%xmm3, %xmm1, %xmm1
	vaddss	%xmm1, %xmm2, %xmm1
.Ltmp393:
	leaq	-1368(%rbp), %rdi
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp394:
	jmp	.LBB85_69
.LBB85_69:                              #   in Loop: Header=BB85_66 Depth=4
	leaq	-904(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv
	movq	-1672(%rbp), %rsi
.Ltmp395:
	movq	%rax, %rdi
	callq	_ZN2sf11VertexArrayixEm@PLT
.Ltmp396:
	movq	%rax, -2344(%rbp)       # 8-byte Spill
	jmp	.LBB85_70
.LBB85_70:                              #   in Loop: Header=BB85_66 Depth=4
.Ltmp397:
	leaq	-1368(%rbp), %rsi
	movq	-2344(%rbp), %rdi       # 8-byte Reload
	callq	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
.Ltmp398:
	jmp	.LBB85_71
.LBB85_71:                              #   in Loop: Header=BB85_66 Depth=4
	jmp	.LBB85_72
.LBB85_72:                              #   in Loop: Header=BB85_66 Depth=4
	movq	-1672(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1672(%rbp)
	jmp	.LBB85_66
.LBB85_73:
.Ltmp399:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -1624(%rbp)
	movl	%edx, -1628(%rbp)
	jmp	.LBB85_225
.LBB85_74:
.Ltmp280:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -1624(%rbp)
	movl	%edx, -1628(%rbp)
	leaq	-1024(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	jmp	.LBB85_225
.LBB85_75:                              #   in Loop: Header=BB85_52 Depth=3
	movq	-1664(%rbp), %rax
	movq	(%rax), %rcx
	movq	24(%rcx), %rcx
.Ltmp391:
	movq	%rax, %rdi
	callq	*%rcx
.Ltmp392:
	movl	%eax, -2348(%rbp)       # 4-byte Spill
	jmp	.LBB85_76
.LBB85_76:                              #   in Loop: Header=BB85_52 Depth=3
	movl	-2348(%rbp), %eax       # 4-byte Reload
	movl	%eax, %ecx
	movl	%ecx, %edx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rdx, %xmm0, %xmm0
	vmovss	-1644(%rbp), %xmm1      # xmm1 = mem[0],zero,zero,zero
	vaddss	%xmm0, %xmm1, %xmm0
	vmovss	%xmm0, -1644(%rbp)
	movq	_ZN6Global11BlockBorderE@GOTPCREL(%rip), %rdx
	movzbl	(%rdx), %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%ecx, %xmm0, %xmm0
	vaddss	-1644(%rbp), %xmm0, %xmm0
	vmovss	%xmm0, -1644(%rbp)
# %bb.77:                               #   in Loop: Header=BB85_52 Depth=3
	movq	-1656(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1656(%rbp)
	jmp	.LBB85_52
.LBB85_78:                              #   in Loop: Header=BB85_6 Depth=2
.Ltmp369:
	leaq	-1000(%rbp), %rdi
	leaq	-1026(%rbp), %rsi
	callq	_ZNSt6vectorItSaItEE9push_backERKt
.Ltmp370:
	jmp	.LBB85_79
.LBB85_79:                              #   in Loop: Header=BB85_6 Depth=2
	jmp	.LBB85_80
.LBB85_80:                              #   in Loop: Header=BB85_6 Depth=2
	movq	-1640(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1640(%rbp)
	jmp	.LBB85_6
.LBB85_81:                              #   in Loop: Header=BB85_3 Depth=1
	jmp	.LBB85_82
.LBB85_82:                              #   in Loop: Header=BB85_3 Depth=1
	movq	-1616(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1616(%rbp)
	jmp	.LBB85_3
.LBB85_83:
	movl	$1, -1676(%rbp)
	movl	$0, -1680(%rbp)
	movq	$0, -1688(%rbp)
.LBB85_84:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB85_92 Depth 2
	movq	-1688(%rbp), %rax
	leaq	-952(%rbp), %rdi
	movq	%rax, -2360(%rbp)       # 8-byte Spill
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	movq	-2360(%rbp), %rcx       # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB85_103
# %bb.85:                               #   in Loop: Header=BB85_84 Depth=1
	leaq	-952(%rbp), %rdi
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	subq	-1688(%rbp), %rax
	subq	$1, %rax
	movq	%rax, -1696(%rbp)
	movq	-1696(%rbp), %rsi
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	cmpq	$0, (%rax)
	jne	.LBB85_87
# %bb.86:                               #   in Loop: Header=BB85_84 Depth=1
	jmp	.LBB85_102
.LBB85_87:                              #   in Loop: Header=BB85_84 Depth=1
	movq	-1696(%rbp), %rsi
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	movq	(%rax), %rdi
.Ltmp262:
	callq	_ZNK2sf5Image7getSizeEv@PLT
.Ltmp263:
	movq	%rax, -2368(%rbp)       # 8-byte Spill
	jmp	.LBB85_88
.LBB85_88:                              #   in Loop: Header=BB85_84 Depth=1
	movq	-2368(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1704(%rbp)
	movl	-1704(%rbp), %ecx
	cmpl	-1680(%rbp), %ecx
	jbe	.LBB85_91
# %bb.89:                               #   in Loop: Header=BB85_84 Depth=1
	movq	-1696(%rbp), %rsi
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	movq	(%rax), %rdi
.Ltmp264:
	callq	_ZNK2sf5Image7getSizeEv@PLT
.Ltmp265:
	movq	%rax, -2376(%rbp)       # 8-byte Spill
	jmp	.LBB85_90
.LBB85_90:                              #   in Loop: Header=BB85_84 Depth=1
	movq	-2376(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1712(%rbp)
	movl	-1712(%rbp), %ecx
	movl	%ecx, -1680(%rbp)
.LBB85_91:                              #   in Loop: Header=BB85_84 Depth=1
	movq	$0, -1720(%rbp)
.LBB85_92:                              #   Parent Loop BB85_84 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-1720(%rbp), %rax
	movq	-1696(%rbp), %rsi
	leaq	-904(%rbp), %rdi
	movq	%rax, -2384(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
.Ltmp266:
	movq	%rax, %rdi
	callq	_ZNK2sf11VertexArray14getVertexCountEv@PLT
.Ltmp267:
	movq	%rax, -2392(%rbp)       # 8-byte Spill
	jmp	.LBB85_93
.LBB85_93:                              #   in Loop: Header=BB85_92 Depth=2
	movq	-2384(%rbp), %rax       # 8-byte Reload
	movq	-2392(%rbp), %rcx       # 8-byte Reload
	cmpq	%rcx, %rax
	jae	.LBB85_100
# %bb.94:                               #   in Loop: Header=BB85_92 Depth=2
	movq	-1696(%rbp), %rsi
	leaq	-928(%rbp), %rdi
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm
	movq	(%rax), %rdi
	movq	-1720(%rbp), %rsi
.Ltmp270:
	callq	_ZNKSt6vectorIbSaIbEE2atEm
.Ltmp271:
	movb	%al, -2393(%rbp)        # 1-byte Spill
	jmp	.LBB85_95
.LBB85_95:                              #   in Loop: Header=BB85_92 Depth=2
	movb	-2393(%rbp), %al        # 1-byte Reload
	testb	$1, %al
	jne	.LBB85_96
	jmp	.LBB85_98
.LBB85_96:                              #   in Loop: Header=BB85_92 Depth=2
	movl	-1676(%rbp), %eax
	movl	%eax, %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rcx, %xmm0, %xmm0
	movq	-1696(%rbp), %rsi
	leaq	-904(%rbp), %rdi
	vmovss	%xmm0, -2400(%rbp)      # 4-byte Spill
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
	movq	-1720(%rbp), %rsi
.Ltmp272:
	movq	%rax, %rdi
	callq	_ZN2sf11VertexArrayixEm@PLT
.Ltmp273:
	movq	%rax, -2408(%rbp)       # 8-byte Spill
	jmp	.LBB85_97
.LBB85_97:                              #   in Loop: Header=BB85_92 Depth=2
	vmovss	-2400(%rbp), %xmm0      # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	movq	-2408(%rbp), %rax       # 8-byte Reload
	vaddss	16(%rax), %xmm0, %xmm1
	vmovss	%xmm1, 16(%rax)
.LBB85_98:                              #   in Loop: Header=BB85_92 Depth=2
	jmp	.LBB85_99
.LBB85_99:                              #   in Loop: Header=BB85_92 Depth=2
	movq	-1720(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1720(%rbp)
	jmp	.LBB85_92
.LBB85_100:                             #   in Loop: Header=BB85_84 Depth=1
	movq	-1696(%rbp), %rsi
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	movq	(%rax), %rdi
.Ltmp268:
	callq	_ZNK2sf5Image7getSizeEv@PLT
.Ltmp269:
	movq	%rax, -2416(%rbp)       # 8-byte Spill
	jmp	.LBB85_101
.LBB85_101:                             #   in Loop: Header=BB85_84 Depth=1
	movq	-2416(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1728(%rbp)
	movl	-1724(%rbp), %ecx
	addl	-1676(%rbp), %ecx
	movl	%ecx, -1676(%rbp)
.LBB85_102:                             #   in Loop: Header=BB85_84 Depth=1
	movq	-1688(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1688(%rbp)
	jmp	.LBB85_84
.LBB85_103:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$1032, %rax             # imm = 0x408
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
.Ltmp166:
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEEixEm
.Ltmp167:
	movq	%rdx, -2424(%rbp)       # 8-byte Spill
	movq	%rax, -2432(%rbp)       # 8-byte Spill
	jmp	.LBB85_104
.LBB85_104:
	movq	-2432(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1384(%rbp)
	movq	-2424(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1376(%rbp)
	leaq	-1384(%rbp), %rdi
	callq	_ZNKSt14_Bit_referencecvbEv
	testb	$1, %al
	jne	.LBB85_105
	jmp	.LBB85_115
.LBB85_105:
	movb	$0, -1729(%rbp)
.LBB85_106:                             # =>This Inner Loop Header: Depth=1
	movzbl	-1729(%rbp), %eax
	cmpl	$6, %eax
	jge	.LBB85_109
# %bb.107:                              #   in Loop: Header=BB85_106 Depth=1
	movl	-1676(%rbp), %eax
	movl	%eax, %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rcx, %xmm0, %xmm0
	movq	-1888(%rbp), %rcx       # 8-byte Reload
	addq	$200, %rcx
	movzwl	-1602(%rbp), %eax
	movl	%eax, %esi
	movq	%rcx, %rdi
	vmovss	%xmm0, -2436(%rbp)      # 4-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movzbl	-1729(%rbp), %edx
	addl	$60, %edx
	movslq	%edx, %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	vmovss	-2436(%rbp), %xmm0      # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vaddss	16(%rax), %xmm0, %xmm0
	vmovss	%xmm0, 16(%rax)
# %bb.108:                              #   in Loop: Header=BB85_106 Depth=1
	movb	-1729(%rbp), %al
	addb	$1, %al
	movb	%al, -1729(%rbp)
	jmp	.LBB85_106
.LBB85_109:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$464, %rax              # imm = 0x1D0
.Ltmp168:
	movq	%rax, %rdi
	callq	_ZNK2sf7Texture7getSizeEv@PLT
.Ltmp169:
	movq	%rax, -2448(%rbp)       # 8-byte Spill
	jmp	.LBB85_110
.LBB85_110:
	movq	-2448(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1744(%rbp)
	movl	-1740(%rbp), %ecx
	movl	-1676(%rbp), %edx
	addl	%ecx, %edx
	movl	%edx, -1676(%rbp)
	movq	-1888(%rbp), %rsi       # 8-byte Reload
	addq	$464, %rsi              # imm = 0x1D0
.Ltmp170:
	movq	%rsi, %rdi
	callq	_ZNK2sf7Texture7getSizeEv@PLT
.Ltmp171:
	movq	%rax, -2456(%rbp)       # 8-byte Spill
	jmp	.LBB85_111
.LBB85_111:
	movq	-2456(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1752(%rbp)
	movl	-1752(%rbp), %ecx
	cmpl	-1680(%rbp), %ecx
	jbe	.LBB85_114
# %bb.112:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$464, %rax              # imm = 0x1D0
.Ltmp172:
	movq	%rax, %rdi
	callq	_ZNK2sf7Texture7getSizeEv@PLT
.Ltmp173:
	movq	%rax, -2464(%rbp)       # 8-byte Spill
	jmp	.LBB85_113
.LBB85_113:
	movq	-2464(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1760(%rbp)
	movl	-1760(%rbp), %ecx
	movl	%ecx, -1680(%rbp)
.LBB85_114:
	jmp	.LBB85_115
.LBB85_115:
	movb	$8, -1761(%rbp)
.Ltmp174:
	leaq	-1392(%rbp), %rdi
	xorl	%eax, %eax
	movl	%eax, %esi
	movl	%eax, %edx
	callq	_ZN2sf7Vector2IjEC2Ejj
.Ltmp175:
	jmp	.LBB85_116
.LBB85_116:
	movq	$0, -1776(%rbp)
.LBB85_117:                             # =>This Inner Loop Header: Depth=1
	cmpl	$0, -1392(%rbp)
	movb	$1, %al
	movb	%al, -2465(%rbp)        # 1-byte Spill
	je	.LBB85_119
# %bb.118:                              #   in Loop: Header=BB85_117 Depth=1
	cmpl	$0, -1388(%rbp)
	sete	%al
	movb	%al, -2465(%rbp)        # 1-byte Spill
.LBB85_119:                             #   in Loop: Header=BB85_117 Depth=1
	movb	-2465(%rbp), %al        # 1-byte Reload
	testb	$1, %al
	jne	.LBB85_120
	jmp	.LBB85_126
.LBB85_120:                             #   in Loop: Header=BB85_117 Depth=1
	movzbl	-1761(%rbp), %esi
.Ltmp260:
	movl	$2, %edi
	callq	_ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
.Ltmp261:
	vmovsd	%xmm0, -2480(%rbp)      # 8-byte Spill
	jmp	.LBB85_121
.LBB85_121:                             #   in Loop: Header=BB85_117 Depth=1
	vmovsd	.LCPI85_0(%rip), %xmm0  # xmm0 = mem[0],zero
	vmovsd	-2480(%rbp), %xmm1      # 8-byte Reload
                                        # xmm1 = mem[0],zero
	vsubsd	%xmm0, %xmm1, %xmm2
	vcvttsd2si	%xmm2, %rax
	movabsq	$-9223372036854775808, %rcx # imm = 0x8000000000000000
	xorq	%rcx, %rax
	vcvttsd2si	%xmm1, %rcx
	vucomisd	%xmm0, %xmm1
	cmovbq	%rcx, %rax
	movq	%rax, -1776(%rbp)
	movl	-1680(%rbp), %edx
	movl	%edx, %eax
	cmpq	-1776(%rbp), %rax
	jae	.LBB85_123
# %bb.122:                              #   in Loop: Header=BB85_117 Depth=1
	movq	-1776(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, -1392(%rbp)
.LBB85_123:                             #   in Loop: Header=BB85_117 Depth=1
	movl	-1676(%rbp), %eax
	movl	%eax, %ecx
	cmpq	-1776(%rbp), %rcx
	jae	.LBB85_125
# %bb.124:                              #   in Loop: Header=BB85_117 Depth=1
	movq	-1776(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, -1388(%rbp)
.LBB85_125:                             #   in Loop: Header=BB85_117 Depth=1
	movb	-1761(%rbp), %al
	addb	$1, %al
	movb	%al, -1761(%rbp)
	jmp	.LBB85_117
.LBB85_126:
	movl	-1776(%rbp), %eax
	movl	%eax, -1680(%rbp)
	movl	-1776(%rbp), %eax
	movl	%eax, -1676(%rbp)
	movq	-1888(%rbp), %rcx       # 8-byte Reload
	addq	$1032, %rcx             # imm = 0x408
	movzwl	-1602(%rbp), %eax
	movl	%eax, %esi
.Ltmp176:
	movq	%rcx, %rdi
	callq	_ZNSt6vectorIbSaIbEEixEm
.Ltmp177:
	movq	%rdx, -2488(%rbp)       # 8-byte Spill
	movq	%rax, -2496(%rbp)       # 8-byte Spill
	jmp	.LBB85_127
.LBB85_127:
	movq	-2496(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1408(%rbp)
	movq	-2488(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1400(%rbp)
	leaq	-1408(%rbp), %rdi
	callq	_ZNKSt14_Bit_referencecvbEv
	testb	$1, %al
	jne	.LBB85_128
	jmp	.LBB85_134
.LBB85_128:
	movb	$0, -1777(%rbp)
.LBB85_129:                             # =>This Inner Loop Header: Depth=1
	movzbl	-1777(%rbp), %eax
	cmpl	$66, %eax
	jge	.LBB85_133
# %bb.130:                              #   in Loop: Header=BB85_129 Depth=1
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$200, %rax
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	movq	%rax, -2504(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movzbl	-1777(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	vmovss	12(%rax), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movl	-1680(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rax, %xmm1, %xmm1
	vdivss	%xmm1, %xmm0, %xmm0
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	-2504(%rbp), %rdi       # 8-byte Reload
	vmovss	%xmm0, -2508(%rbp)      # 4-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movzbl	-1777(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	vmovss	16(%rax), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movl	-1676(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rax, %xmm1, %xmm1
	vdivss	%xmm1, %xmm0, %xmm1
.Ltmp258:
	leaq	-1416(%rbp), %rdi
	vmovss	-2508(%rbp), %xmm0      # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp259:
	jmp	.LBB85_131
.LBB85_131:                             #   in Loop: Header=BB85_129 Depth=1
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$200, %rax
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movzbl	-1777(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	movq	-1416(%rbp), %rdx
	movq	%rdx, 12(%rax)
# %bb.132:                              #   in Loop: Header=BB85_129 Depth=1
	movb	-1777(%rbp), %al
	addb	$1, %al
	movb	%al, -1777(%rbp)
	jmp	.LBB85_129
.LBB85_133:
	jmp	.LBB85_134
.LBB85_134:
	movq	$0, -1792(%rbp)
.LBB85_135:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB85_137 Depth 2
	movq	-1792(%rbp), %rax
	leaq	-952(%rbp), %rdi
	movq	%rax, -2520(%rbp)       # 8-byte Spill
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	movq	-2520(%rbp), %rcx       # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB85_147
# %bb.136:                              #   in Loop: Header=BB85_135 Depth=1
	movq	$0, -1800(%rbp)
.LBB85_137:                             #   Parent Loop BB85_135 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-1800(%rbp), %rax
	movq	-1792(%rbp), %rsi
	leaq	-904(%rbp), %rdi
	movq	%rax, -2528(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
.Ltmp248:
	movq	%rax, %rdi
	callq	_ZNK2sf11VertexArray14getVertexCountEv@PLT
.Ltmp249:
	movq	%rax, -2536(%rbp)       # 8-byte Spill
	jmp	.LBB85_138
.LBB85_138:                             #   in Loop: Header=BB85_137 Depth=2
	movq	-2528(%rbp), %rax       # 8-byte Reload
	movq	-2536(%rbp), %rcx       # 8-byte Reload
	cmpq	%rcx, %rax
	jae	.LBB85_145
# %bb.139:                              #   in Loop: Header=BB85_137 Depth=2
	movq	-1792(%rbp), %rsi
	leaq	-904(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
	movq	-1800(%rbp), %rsi
.Ltmp250:
	movq	%rax, %rdi
	callq	_ZN2sf11VertexArrayixEm@PLT
.Ltmp251:
	movq	%rax, -2544(%rbp)       # 8-byte Spill
	jmp	.LBB85_140
.LBB85_140:                             #   in Loop: Header=BB85_137 Depth=2
	movq	-2544(%rbp), %rax       # 8-byte Reload
	vmovss	12(%rax), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movl	-1680(%rbp), %ecx
	movl	%ecx, %edx
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rdx, %xmm1, %xmm1
	vdivss	%xmm1, %xmm0, %xmm0
	movq	-1792(%rbp), %rsi
	leaq	-904(%rbp), %rdi
	vmovss	%xmm0, -2548(%rbp)      # 4-byte Spill
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
	movq	-1800(%rbp), %rsi
.Ltmp252:
	movq	%rax, %rdi
	callq	_ZN2sf11VertexArrayixEm@PLT
.Ltmp253:
	movq	%rax, -2560(%rbp)       # 8-byte Spill
	jmp	.LBB85_141
.LBB85_141:                             #   in Loop: Header=BB85_137 Depth=2
	movq	-2560(%rbp), %rax       # 8-byte Reload
	vmovss	16(%rax), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movl	-1676(%rbp), %ecx
	movl	%ecx, %edx
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rdx, %xmm1, %xmm1
	vdivss	%xmm1, %xmm0, %xmm1
.Ltmp254:
	leaq	-1424(%rbp), %rdi
	vmovss	-2548(%rbp), %xmm0      # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp255:
	jmp	.LBB85_142
.LBB85_142:                             #   in Loop: Header=BB85_137 Depth=2
	movq	-1792(%rbp), %rsi
	leaq	-904(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
	movq	-1800(%rbp), %rsi
.Ltmp256:
	movq	%rax, %rdi
	callq	_ZN2sf11VertexArrayixEm@PLT
.Ltmp257:
	movq	%rax, -2568(%rbp)       # 8-byte Spill
	jmp	.LBB85_143
.LBB85_143:                             #   in Loop: Header=BB85_137 Depth=2
	movq	-1424(%rbp), %rax
	movq	-2568(%rbp), %rcx       # 8-byte Reload
	movq	%rax, 12(%rcx)
# %bb.144:                              #   in Loop: Header=BB85_137 Depth=2
	movq	-1800(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1800(%rbp)
	jmp	.LBB85_137
.LBB85_145:                             #   in Loop: Header=BB85_135 Depth=1
	jmp	.LBB85_146
.LBB85_146:                             #   in Loop: Header=BB85_135 Depth=1
	movq	-1792(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1792(%rbp)
	jmp	.LBB85_135
.LBB85_147:
	movq	$0, -1808(%rbp)
.LBB85_148:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB85_150 Depth 2
	movq	-1808(%rbp), %rax
	leaq	-976(%rbp), %rdi
	movq	%rax, -2576(%rbp)       # 8-byte Spill
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	movq	-2576(%rbp), %rcx       # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB85_156
# %bb.149:                              #   in Loop: Header=BB85_148 Depth=1
	movb	$0, -1809(%rbp)
.LBB85_150:                             #   Parent Loop BB85_148 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	-1809(%rbp), %eax
	cmpl	$6, %eax
	jge	.LBB85_154
# %bb.151:                              #   in Loop: Header=BB85_150 Depth=2
	movq	-1808(%rbp), %rsi
	leaq	-976(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -2584(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movzbl	-1809(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	vmovss	12(%rax), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movl	-1680(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rax, %xmm1, %xmm1
	vdivss	%xmm1, %xmm0, %xmm0
	movq	-1808(%rbp), %rsi
	movq	-2584(%rbp), %rdi       # 8-byte Reload
	vmovss	%xmm0, -2588(%rbp)      # 4-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movzbl	-1809(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	vmovss	16(%rax), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movl	-1676(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rax, %xmm1, %xmm1
	vdivss	%xmm1, %xmm0, %xmm1
.Ltmp246:
	leaq	-1432(%rbp), %rdi
	vmovss	-2588(%rbp), %xmm0      # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
.Ltmp247:
	jmp	.LBB85_152
.LBB85_152:                             #   in Loop: Header=BB85_150 Depth=2
	movq	-1808(%rbp), %rsi
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movzbl	-1809(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	movq	-1432(%rbp), %rdx
	movq	%rdx, 12(%rax)
# %bb.153:                              #   in Loop: Header=BB85_150 Depth=2
	movb	-1809(%rbp), %al
	addb	$1, %al
	movb	%al, -1809(%rbp)
	jmp	.LBB85_150
.LBB85_154:                             #   in Loop: Header=BB85_148 Depth=1
	jmp	.LBB85_155
.LBB85_155:                             #   in Loop: Header=BB85_148 Depth=1
	movq	-1808(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1808(%rbp)
	jmp	.LBB85_148
.LBB85_156:
	cmpl	$0, -1680(%rbp)
	jbe	.LBB85_199
# %bb.157:
	cmpl	$0, -1676(%rbp)
	jbe	.LBB85_199
# %bb.158:
.Ltmp180:
	leaq	-536(%rbp), %rdi
	callq	_ZN2sf13RenderTextureC1Ev@PLT
.Ltmp181:
	jmp	.LBB85_159
.LBB85_159:
	movl	-1680(%rbp), %esi
	movl	-1676(%rbp), %edx
.Ltmp182:
	movq	%rsp, %rax
	movl	$0, 8(%rax)
	movl	$0, (%rax)
	leaq	-856(%rbp), %rdi
	xorl	%ecx, %ecx
	movl	$1, %r8d
	movl	%esi, -2592(%rbp)       # 4-byte Spill
	movl	%ecx, %esi
	movl	%edx, -2596(%rbp)       # 4-byte Spill
	movl	%ecx, %edx
	movl	%r8d, -2600(%rbp)       # 4-byte Spill
	movl	-2600(%rbp), %r9d       # 4-byte Reload
	callq	_ZN2sf15ContextSettingsC2Ejjjjjjb
.Ltmp183:
	jmp	.LBB85_160
.LBB85_160:
.Ltmp184:
	leaq	-536(%rbp), %rdi
	leaq	-856(%rbp), %rcx
	movl	-2592(%rbp), %esi       # 4-byte Reload
	movl	-2596(%rbp), %edx       # 4-byte Reload
	callq	_ZN2sf13RenderTexture6createEjjRKNS_15ContextSettingsE@PLT
.Ltmp185:
	jmp	.LBB85_161
.LBB85_161:
	leaq	-536(%rbp), %rdi
.Ltmp186:
	leaq	-1440(%rbp), %rax
	xorl	%ecx, %ecx
	movq	%rdi, -2608(%rbp)       # 8-byte Spill
	movq	%rax, %rdi
	movl	%ecx, %esi
	movl	%ecx, %edx
	movl	%ecx, -2612(%rbp)       # 4-byte Spill
	movl	-2612(%rbp), %r8d       # 4-byte Reload
	callq	_ZN2sf5ColorC1Ehhhh@PLT
.Ltmp187:
	jmp	.LBB85_162
.LBB85_162:
.Ltmp188:
	leaq	-1440(%rbp), %rsi
	movq	-2608(%rbp), %rdi       # 8-byte Reload
	callq	_ZN2sf12RenderTarget5clearERKNS_5ColorE@PLT
.Ltmp189:
	jmp	.LBB85_163
.LBB85_163:
.Ltmp190:
	leaq	-1480(%rbp), %rdi
	callq	_ZN2sf7TextureC1Ev@PLT
.Ltmp191:
	jmp	.LBB85_164
.LBB85_164:
.Ltmp193:
	leaq	-824(%rbp), %rdi
	callq	_ZN2sf6SpriteC1Ev@PLT
.Ltmp194:
	jmp	.LBB85_165
.LBB85_165:
	movl	-1676(%rbp), %eax
	movl	%eax, %ecx
	movq	%rcx, -1824(%rbp)
	movq	$0, -1832(%rbp)
.LBB85_166:                             # =>This Inner Loop Header: Depth=1
	movq	-1832(%rbp), %rax
	leaq	-952(%rbp), %rdi
	movq	%rax, -2624(%rbp)       # 8-byte Spill
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	movq	-2624(%rbp), %rcx       # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB85_180
# %bb.167:                              #   in Loop: Header=BB85_166 Depth=1
	leaq	-952(%rbp), %rdi
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	subq	-1832(%rbp), %rax
	subq	$1, %rax
	movq	%rax, -1840(%rbp)
	movq	-1840(%rbp), %rsi
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	cmpq	$0, (%rax)
	jne	.LBB85_171
# %bb.168:                              #   in Loop: Header=BB85_166 Depth=1
	jmp	.LBB85_178
.LBB85_169:
.Ltmp192:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -1624(%rbp)
	movl	%edx, -1628(%rbp)
	jmp	.LBB85_198
.LBB85_170:
.Ltmp195:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -1624(%rbp)
	movl	%edx, -1628(%rbp)
	jmp	.LBB85_197
.LBB85_171:                             #   in Loop: Header=BB85_166 Depth=1
	movq	-1840(%rbp), %rsi
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	movq	(%rax), %rsi
.Ltmp233:
	leaq	-1496(%rbp), %rdi
	movq	%rsi, -2632(%rbp)       # 8-byte Spill
	callq	_ZN2sf4RectIiEC2Ev
.Ltmp234:
	jmp	.LBB85_172
.LBB85_172:                             #   in Loop: Header=BB85_166 Depth=1
.Ltmp235:
	leaq	-1480(%rbp), %rdi
	leaq	-1496(%rbp), %rdx
	movq	-2632(%rbp), %rsi       # 8-byte Reload
	callq	_ZN2sf7Texture13loadFromImageERKNS_5ImageERKNS_4RectIiEE@PLT
.Ltmp236:
	jmp	.LBB85_173
.LBB85_173:                             #   in Loop: Header=BB85_166 Depth=1
	movq	-1840(%rbp), %rsi
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	movq	(%rax), %rdi
.Ltmp237:
	callq	_ZNK2sf5Image7getSizeEv@PLT
.Ltmp238:
	movq	%rax, -2640(%rbp)       # 8-byte Spill
	jmp	.LBB85_174
.LBB85_174:                             #   in Loop: Header=BB85_166 Depth=1
	movq	-2640(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1848(%rbp)
	movl	-1844(%rbp), %ecx
	movl	%ecx, %edx
	movq	-1824(%rbp), %rsi
	subq	%rdx, %rsi
	movq	%rsi, -1824(%rbp)
.Ltmp239:
	leaq	-824(%rbp), %rdi
	leaq	-1480(%rbp), %rsi
	movl	$1, %edx
	callq	_ZN2sf6Sprite10setTextureERKNS_7TextureEb@PLT
.Ltmp240:
	jmp	.LBB85_175
.LBB85_175:                             #   in Loop: Header=BB85_166 Depth=1
	leaq	-816(%rbp), %rdi
                                        # implicit-def: $xmm0
	vcvtsi2ssq	-1824(%rbp), %xmm0, %xmm1
.Ltmp241:
	vxorps	%xmm0, %xmm0, %xmm0
	callq	_ZN2sf13Transformable11setPositionEff@PLT
.Ltmp242:
	jmp	.LBB85_176
.LBB85_176:                             #   in Loop: Header=BB85_166 Depth=1
.Ltmp243:
	movq	_ZN2sf12RenderStates7DefaultE@GOTPCREL(%rip), %rdx
	leaq	-536(%rbp), %rdi
	leaq	-824(%rbp), %rsi
	callq	_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@PLT
.Ltmp244:
	jmp	.LBB85_177
.LBB85_177:                             #   in Loop: Header=BB85_166 Depth=1
	jmp	.LBB85_178
.LBB85_178:                             #   in Loop: Header=BB85_166 Depth=1
	movq	-1832(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1832(%rbp)
	jmp	.LBB85_166
.LBB85_179:
.Ltmp245:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -1624(%rbp)
	movl	%edx, -1628(%rbp)
	jmp	.LBB85_196
.LBB85_180:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$1032, %rax             # imm = 0x408
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
.Ltmp196:
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEEixEm
.Ltmp197:
	movq	%rdx, -2648(%rbp)       # 8-byte Spill
	movq	%rax, -2656(%rbp)       # 8-byte Spill
	jmp	.LBB85_181
.LBB85_181:
	movq	-2656(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1512(%rbp)
	movq	-2648(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1504(%rbp)
	leaq	-1512(%rbp), %rdi
	callq	_ZNKSt14_Bit_referencecvbEv
	testb	$1, %al
	jne	.LBB85_182
	jmp	.LBB85_187
.LBB85_182:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$464, %rax              # imm = 0x1D0
.Ltmp198:
	movq	%rax, %rdi
	callq	_ZNK2sf7Texture7getSizeEv@PLT
.Ltmp199:
	movq	%rax, -2664(%rbp)       # 8-byte Spill
	jmp	.LBB85_183
.LBB85_183:
	movq	-2664(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1856(%rbp)
	movl	-1852(%rbp), %ecx
	movl	%ecx, %edx
	movq	-1824(%rbp), %rsi
	subq	%rdx, %rsi
	movq	%rsi, -1824(%rbp)
	movq	-1888(%rbp), %rdx       # 8-byte Reload
	addq	$464, %rdx              # imm = 0x1D0
.Ltmp200:
	leaq	-824(%rbp), %rdi
	movl	$1, %ecx
	movq	%rdx, %rsi
	movl	%ecx, %edx
	callq	_ZN2sf6Sprite10setTextureERKNS_7TextureEb@PLT
.Ltmp201:
	jmp	.LBB85_184
.LBB85_184:
	leaq	-816(%rbp), %rdi
                                        # implicit-def: $xmm0
	vcvtsi2ssq	-1824(%rbp), %xmm0, %xmm1
.Ltmp202:
	vxorps	%xmm0, %xmm0, %xmm0
	callq	_ZN2sf13Transformable11setPositionEff@PLT
.Ltmp203:
	jmp	.LBB85_185
.LBB85_185:
.Ltmp204:
	movq	_ZN2sf12RenderStates7DefaultE@GOTPCREL(%rip), %rdx
	leaq	-536(%rbp), %rdi
	leaq	-824(%rbp), %rsi
	callq	_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@PLT
.Ltmp205:
	jmp	.LBB85_186
.LBB85_186:
	jmp	.LBB85_187
.LBB85_187:
.Ltmp206:
	leaq	-536(%rbp), %rdi
	callq	_ZNK2sf13RenderTexture10getTextureEv@PLT
.Ltmp207:
	movq	%rax, -2672(%rbp)       # 8-byte Spill
	jmp	.LBB85_188
.LBB85_188:
.Ltmp208:
	leaq	-1544(%rbp), %rdi
	movq	-2672(%rbp), %rsi       # 8-byte Reload
	callq	_ZNK2sf7Texture11copyToImageEv@PLT
.Ltmp209:
	jmp	.LBB85_189
.LBB85_189:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$272, %rax              # imm = 0x110
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm
.Ltmp210:
	leaq	-1544(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN2sf5ImageaSERKS0_
.Ltmp211:
	jmp	.LBB85_190
.LBB85_190:
	leaq	-1544(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$272, %rax              # imm = 0x110
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm
.Ltmp213:
	movq	_ZN2sf5Color5WhiteE@GOTPCREL(%rip), %rcx
	xorl	%edx, %edx
	movq	%rax, %rdi
	movl	%edx, %esi
	callq	_ZN2sf5Image8setPixelEjjRKNS_5ColorE@PLT
.Ltmp214:
	jmp	.LBB85_191
.LBB85_191:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$296, %rax              # imm = 0x128
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm
	movq	-1888(%rbp), %rdx       # 8-byte Reload
	addq	$272, %rdx              # imm = 0x110
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rdx, %rdi
	movq	%rax, -2680(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm
.Ltmp215:
	leaq	-1560(%rbp), %rdi
	movq	%rax, -2688(%rbp)       # 8-byte Spill
	callq	_ZN2sf4RectIiEC2Ev
.Ltmp216:
	jmp	.LBB85_192
.LBB85_192:
.Ltmp217:
	leaq	-1560(%rbp), %rdx
	movq	-2680(%rbp), %rdi       # 8-byte Reload
	movq	-2688(%rbp), %rsi       # 8-byte Reload
	callq	_ZN2sf7Texture13loadFromImageERKNS_5ImageERKNS_4RectIiEE@PLT
.Ltmp218:
	jmp	.LBB85_193
.LBB85_193:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$320, %rax              # imm = 0x140
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
.Ltmp219:
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEEixEm
.Ltmp220:
	movq	%rdx, -2696(%rbp)       # 8-byte Spill
	movq	%rax, -2704(%rbp)       # 8-byte Spill
	jmp	.LBB85_194
.LBB85_194:
	movq	-2704(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1576(%rbp)
	movq	-2696(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1568(%rbp)
	leaq	-1576(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNSt14_Bit_referenceaSEb
	leaq	-824(%rbp), %rdi
	movq	%rax, -2712(%rbp)       # 8-byte Spill
	callq	_ZN2sf6SpriteD2Ev
	leaq	-1480(%rbp), %rdi
	callq	_ZN2sf7TextureD1Ev@PLT
	leaq	-536(%rbp), %rdi
	callq	_ZN2sf13RenderTextureD1Ev@PLT
	jmp	.LBB85_201
.LBB85_195:
.Ltmp212:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -1624(%rbp)
	movl	%edx, -1628(%rbp)
	leaq	-1544(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
.LBB85_196:
	leaq	-824(%rbp), %rdi
	callq	_ZN2sf6SpriteD2Ev
.LBB85_197:
	leaq	-1480(%rbp), %rdi
	callq	_ZN2sf7TextureD1Ev@PLT
.LBB85_198:
	leaq	-536(%rbp), %rdi
	callq	_ZN2sf13RenderTextureD1Ev@PLT
	jmp	.LBB85_225
.LBB85_199:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$320, %rax              # imm = 0x140
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
.Ltmp178:
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEEixEm
.Ltmp179:
	movq	%rdx, -2720(%rbp)       # 8-byte Spill
	movq	%rax, -2728(%rbp)       # 8-byte Spill
	jmp	.LBB85_200
.LBB85_200:
	xorl	%esi, %esi
	movq	-2728(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1592(%rbp)
	movq	-2720(%rbp), %rax       # 8-byte Reload
	movq	%rax, -1584(%rbp)
	leaq	-1592(%rbp), %rdi
	callq	_ZNSt14_Bit_referenceaSEb
.LBB85_201:
	movl	$0, -1860(%rbp)
	movq	$0, -1872(%rbp)
.LBB85_202:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB85_204 Depth 2
                                        #     Child Loop BB85_209 Depth 2
                                        #       Child Loop BB85_211 Depth 3
	movq	-1872(%rbp), %rax
	leaq	-1000(%rbp), %rdi
	movq	%rax, -2736(%rbp)       # 8-byte Spill
	callq	_ZNKSt6vectorItSaItEE4sizeEv
	movq	-2736(%rbp), %rcx       # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB85_221
# %bb.203:                              #   in Loop: Header=BB85_202 Depth=1
	movb	$0, -1873(%rbp)
.LBB85_204:                             #   Parent Loop BB85_202 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	-1873(%rbp), %eax
	cmpl	$6, %eax
	jge	.LBB85_208
# %bb.205:                              #   in Loop: Header=BB85_204 Depth=2
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$200, %rax
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movq	-1872(%rbp), %rsi
	leaq	-976(%rbp), %rdi
	movq	%rax, -2744(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movzbl	-1873(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
.Ltmp231:
	movq	-2744(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_
.Ltmp232:
	jmp	.LBB85_206
.LBB85_206:                             #   in Loop: Header=BB85_204 Depth=2
	jmp	.LBB85_207
.LBB85_207:                             #   in Loop: Header=BB85_204 Depth=2
	movb	-1873(%rbp), %al
	addb	$1, %al
	movb	%al, -1873(%rbp)
	jmp	.LBB85_204
.LBB85_208:                             #   in Loop: Header=BB85_202 Depth=1
	movw	$0, -1876(%rbp)
.LBB85_209:                             #   Parent Loop BB85_202 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB85_211 Depth 3
	movzwl	-1876(%rbp), %eax
	movq	-1872(%rbp), %rsi
	leaq	-1000(%rbp), %rdi
	movl	%eax, -2748(%rbp)       # 4-byte Spill
	callq	_ZNSt6vectorItSaItEEixEm
	movzwl	(%rax), %ecx
	movl	-2748(%rbp), %edx       # 4-byte Reload
	cmpl	%ecx, %edx
	jge	.LBB85_219
# %bb.210:                              #   in Loop: Header=BB85_209 Depth=2
	movw	$0, -1878(%rbp)
.LBB85_211:                             #   Parent Loop BB85_202 Depth=1
                                        #     Parent Loop BB85_209 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movzwl	-1878(%rbp), %eax
	movl	%eax, %ecx
	movl	-1860(%rbp), %eax
	movl	%eax, %esi
	leaq	-904(%rbp), %rdi
	movq	%rcx, -2760(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
.Ltmp225:
	movq	%rax, %rdi
	callq	_ZNK2sf11VertexArray14getVertexCountEv@PLT
.Ltmp226:
	movq	%rax, -2768(%rbp)       # 8-byte Spill
	jmp	.LBB85_212
.LBB85_212:                             #   in Loop: Header=BB85_211 Depth=3
	movq	-2760(%rbp), %rax       # 8-byte Reload
	movq	-2768(%rbp), %rcx       # 8-byte Reload
	cmpq	%rcx, %rax
	jae	.LBB85_217
# %bb.213:                              #   in Loop: Header=BB85_211 Depth=3
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$200, %rax
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movl	-1860(%rbp), %ecx
	movl	%ecx, %esi
	leaq	-904(%rbp), %rdi
	movq	%rax, -2776(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
	movzwl	-1878(%rbp), %ecx
	movl	%ecx, %esi
.Ltmp227:
	movq	%rax, %rdi
	callq	_ZN2sf11VertexArrayixEm@PLT
.Ltmp228:
	movq	%rax, -2784(%rbp)       # 8-byte Spill
	jmp	.LBB85_214
.LBB85_214:                             #   in Loop: Header=BB85_211 Depth=3
.Ltmp229:
	movq	-2776(%rbp), %rdi       # 8-byte Reload
	movq	-2784(%rbp), %rsi       # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_
.Ltmp230:
	jmp	.LBB85_215
.LBB85_215:                             #   in Loop: Header=BB85_211 Depth=3
	jmp	.LBB85_216
.LBB85_216:                             #   in Loop: Header=BB85_211 Depth=3
	movw	-1878(%rbp), %ax
	addw	$1, %ax
	movw	%ax, -1878(%rbp)
	jmp	.LBB85_211
.LBB85_217:                             #   in Loop: Header=BB85_209 Depth=2
	movl	-1860(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -1860(%rbp)
# %bb.218:                              #   in Loop: Header=BB85_209 Depth=2
	movw	-1876(%rbp), %ax
	addw	$1, %ax
	movw	%ax, -1876(%rbp)
	jmp	.LBB85_209
.LBB85_219:                             #   in Loop: Header=BB85_202 Depth=1
	jmp	.LBB85_220
.LBB85_220:                             #   in Loop: Header=BB85_202 Depth=1
	movq	-1872(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -1872(%rbp)
	jmp	.LBB85_202
.LBB85_221:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$224, %rax
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm
	movq	-1888(%rbp), %rdx       # 8-byte Reload
	addq	$200, %rdx
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rdx, %rdi
	movq	%rax, -2792(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
.Ltmp221:
	movq	-2792(%rbp), %rdi       # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf12VertexBuffer6createEm@PLT
.Ltmp222:
	jmp	.LBB85_222
.LBB85_222:
	movq	-1888(%rbp), %rax       # 8-byte Reload
	addq	$224, %rax
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm
	movq	-1888(%rbp), %rdx       # 8-byte Reload
	addq	$200, %rdx
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rdx, %rdi
	movq	%rax, -2800(%rbp)       # 8-byte Spill
	movq	%rdx, -2808(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	xorl	%ecx, %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	movl	%ecx, -2812(%rbp)       # 4-byte Spill
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	movzwl	-1602(%rbp), %ecx
	movl	%ecx, %esi
	movq	-2808(%rbp), %rdi       # 8-byte Reload
	movq	%rax, -2824(%rbp)       # 8-byte Spill
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
.Ltmp223:
	movq	-2800(%rbp), %rdi       # 8-byte Reload
	movq	-2824(%rbp), %rsi       # 8-byte Reload
	movq	%rax, %rdx
	movl	-2812(%rbp), %ecx       # 4-byte Reload
	callq	_ZN2sf12VertexBuffer6updateEPKNS_6VertexEmj@PLT
.Ltmp224:
	jmp	.LBB85_223
.LBB85_223:
	leaq	-1000(%rbp), %rdi
	callq	_ZNSt6vectorItSaItEED2Ev
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev
	leaq	-928(%rbp), %rdi
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev
	leaq	-904(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB85_227
# %bb.224:
	addq	$2848, %rsp             # imm = 0xB20
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB85_225:
	.cfi_def_cfa %rbp, 16
	leaq	-1000(%rbp), %rdi
	callq	_ZNSt6vectorItSaItEED2Ev
	leaq	-976(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EED2Ev
	leaq	-952(%rbp), %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev
	leaq	-928(%rbp), %rdi
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev
	leaq	-904(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev
# %bb.226:
	movq	-1624(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB85_227:
	callq	__stack_chk_fail@PLT
.Lfunc_end85:
	.size	_ZN5Plane12UpdateBufferEt, .Lfunc_end85-_ZN5Plane12UpdateBufferEt
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table85:
.Lexception13:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13 # >> Call Site 1 <<
	.uleb128 .Ltmp164-.Lfunc_begin13 #   Call between .Lfunc_begin13 and .Ltmp164
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp164-.Lfunc_begin13 # >> Call Site 2 <<
	.uleb128 .Ltmp277-.Ltmp164      #   Call between .Ltmp164 and .Ltmp277
	.uleb128 .Ltmp399-.Lfunc_begin13 #     jumps to .Ltmp399
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp278-.Lfunc_begin13 # >> Call Site 3 <<
	.uleb128 .Ltmp279-.Ltmp278      #   Call between .Ltmp278 and .Ltmp279
	.uleb128 .Ltmp280-.Lfunc_begin13 #     jumps to .Ltmp280
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp281-.Lfunc_begin13 # >> Call Site 4 <<
	.uleb128 .Ltmp181-.Ltmp281      #   Call between .Ltmp281 and .Ltmp181
	.uleb128 .Ltmp399-.Lfunc_begin13 #     jumps to .Ltmp399
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp182-.Lfunc_begin13 # >> Call Site 5 <<
	.uleb128 .Ltmp191-.Ltmp182      #   Call between .Ltmp182 and .Ltmp191
	.uleb128 .Ltmp192-.Lfunc_begin13 #     jumps to .Ltmp192
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp193-.Lfunc_begin13 # >> Call Site 6 <<
	.uleb128 .Ltmp194-.Ltmp193      #   Call between .Ltmp193 and .Ltmp194
	.uleb128 .Ltmp195-.Lfunc_begin13 #     jumps to .Ltmp195
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp233-.Lfunc_begin13 # >> Call Site 7 <<
	.uleb128 .Ltmp209-.Ltmp233      #   Call between .Ltmp233 and .Ltmp209
	.uleb128 .Ltmp245-.Lfunc_begin13 #     jumps to .Ltmp245
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp210-.Lfunc_begin13 # >> Call Site 8 <<
	.uleb128 .Ltmp211-.Ltmp210      #   Call between .Ltmp210 and .Ltmp211
	.uleb128 .Ltmp212-.Lfunc_begin13 #     jumps to .Ltmp212
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp213-.Lfunc_begin13 # >> Call Site 9 <<
	.uleb128 .Ltmp220-.Ltmp213      #   Call between .Ltmp213 and .Ltmp220
	.uleb128 .Ltmp245-.Lfunc_begin13 #     jumps to .Ltmp245
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp178-.Lfunc_begin13 # >> Call Site 10 <<
	.uleb128 .Ltmp224-.Ltmp178      #   Call between .Ltmp178 and .Ltmp224
	.uleb128 .Ltmp399-.Lfunc_begin13 #     jumps to .Ltmp399
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp224-.Lfunc_begin13 # >> Call Site 11 <<
	.uleb128 .Lfunc_end85-.Ltmp224  #   Call between .Ltmp224 and .Lfunc_end85
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end13:
	.p2align	2
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function _ZN5Plane11frameUpdateEd
.LCPI86_0:
	.long	1084227584              # float 5
.LCPI86_1:
	.long	3247439872              # float -18
	.text
	.globl	_ZN5Plane11frameUpdateEd
	.p2align	4, 0x90
	.type	_ZN5Plane11frameUpdateEd,@function
_ZN5Plane11frameUpdateEd:               # @_ZN5Plane11frameUpdateEd
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception14
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$384, %rsp              # imm = 0x180
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -184(%rbp)
	vmovsd	%xmm0, -192(%rbp)
	movq	-184(%rbp), %rax
	testb	$1, 1472(%rax)
	movq	%rax, -256(%rbp)        # 8-byte Spill
	jne	.LBB86_7
# %bb.1:
	movq	-256(%rbp), %rax        # 8-byte Reload
	addq	$1104, %rax             # imm = 0x450
	movq	-256(%rbp), %rcx        # 8-byte Reload
	addq	$1112, %rcx             # imm = 0x458
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -264(%rbp)        # 8-byte Spill
	movq	%rcx, -272(%rbp)        # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	vmovss	.LCPI86_0(%rip), %xmm1  # xmm1 = mem[0],zero,zero,zero
	vaddss	%xmm1, %xmm0, %xmm0
	movq	-256(%rbp), %rdi        # 8-byte Reload
	vmovss	%xmm0, -276(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	movq	-256(%rbp), %rdi        # 8-byte Reload
	vmovss	%xmm0, -280(%rbp)       # 4-byte Spill
	callq	_ZN14ITransformable7getSizeEv@PLT
	movl	4(%rax), %edx
	movl	%edx, %eax
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rax, %xmm0, %xmm0
	vmovss	-280(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vaddss	%xmm0, %xmm1, %xmm0
	vmovss	.LCPI86_1(%rip), %xmm1  # xmm1 = mem[0],zero,zero,zero
	vaddss	%xmm1, %xmm0, %xmm1
	movq	-272(%rbp), %rdi        # 8-byte Reload
	vmovss	-276(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf13Transformable11setPositionEff@PLT
	movq	-256(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane16GetInnerPositionEv
	movq	%rax, -200(%rbp)
	movl	-200(%rbp), %edx
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movl	%edx, -284(%rbp)        # 4-byte Spill
	callq	_ZN5Plane16GetInnerPositionEv
	movq	%rax, -208(%rbp)
	movl	-204(%rbp), %ecx
	leaq	.L.str.1(%rip), %rsi
	xorl	%edx, %edx
                                        # kill: def $dl killed $dl killed $edx
	leaq	-32(%rbp), %rax
	movq	%rax, %rdi
	movl	-284(%rbp), %r8d        # 4-byte Reload
	movb	%dl, -285(%rbp)         # 1-byte Spill
	movl	%r8d, %edx
	movb	-285(%rbp), %r9b        # 1-byte Reload
	movq	%rax, -296(%rbp)        # 8-byte Spill
	movb	%r9b, %al
	callq	sprintf@PLT
	leaq	-136(%rbp), %rsi
	movq	%rsi, %rdi
	movl	%eax, -300(%rbp)        # 4-byte Spill
	movq	%rsi, -312(%rbp)        # 8-byte Spill
	callq	_ZNSt6localeC1Ev@PLT
.Ltmp400:
	leaq	-64(%rbp), %rdi
	movq	-296(%rbp), %rsi        # 8-byte Reload
	movq	-312(%rbp), %rdx        # 8-byte Reload
	callq	_ZN2sf6StringC1EPKcRKSt6locale@PLT
.Ltmp401:
	jmp	.LBB86_2
.LBB86_2:
.Ltmp403:
	leaq	-64(%rbp), %rsi
	movq	-264(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf4Text9setStringERKNS_6StringE@PLT
.Ltmp404:
	jmp	.LBB86_3
.LBB86_3:
	leaq	-64(%rbp), %rdi
	callq	_ZN2sf6StringD2Ev
	leaq	-136(%rbp), %rdi
	callq	_ZNSt6localeD1Ev@PLT
	jmp	.LBB86_7
.LBB86_4:
.Ltmp402:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -216(%rbp)
	movl	%edx, -220(%rbp)
	jmp	.LBB86_6
.LBB86_5:
.Ltmp405:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -216(%rbp)
	movl	%edx, -220(%rbp)
	leaq	-64(%rbp), %rdi
	callq	_ZN2sf6StringD2Ev
.LBB86_6:
	leaq	-136(%rbp), %rdi
	callq	_ZNSt6localeD1Ev@PLT
	jmp	.LBB86_18
.LBB86_7:
	movq	-256(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB86_9
# %bb.8:
	movq	-256(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane18DraggingCollectionEv
	testb	$1, %al
	jne	.LBB86_9
	jmp	.LBB86_10
.LBB86_9:
	movq	-256(%rbp), %rax        # 8-byte Reload
	movq	616(%rax), %rdi
	addq	$632, %rax              # imm = 0x278
	movq	-256(%rbp), %rcx        # 8-byte Reload
	addq	$640, %rcx              # imm = 0x280
	movq	_ZN6Global13MousePositionE@GOTPCREL(%rip), %rdx
	movq	%rdi, -320(%rbp)        # 8-byte Spill
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movq	%rax, -328(%rbp)        # 8-byte Spill
	callq	_ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_
	movq	%rax, -160(%rbp)
	leaq	-152(%rbp), %rax
	leaq	-160(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -336(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE
	movq	-328(%rbp), %rdi        # 8-byte Reload
	movq	-336(%rbp), %rsi        # 8-byte Reload
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -144(%rbp)
	movq	-320(%rbp), %rdi        # 8-byte Reload
	leaq	-144(%rbp), %rsi
	callq	_ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE@PLT
.LBB86_10:
	movq	-256(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB86_11
	jmp	.LBB86_12
.LBB86_11:
	movq	-256(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane19DraggingStackUpdateEv
.LBB86_12:
	movq	$0, -232(%rbp)
.LBB86_13:                              # =>This Inner Loop Header: Depth=1
	movq	-232(%rbp), %rax
	movq	-256(%rbp), %rcx        # 8-byte Reload
	addq	$248, %rcx
	movq	%rcx, %rdi
	movq	%rax, -344(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	movq	-344(%rbp), %rcx        # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB86_16
# %bb.14:                               #   in Loop: Header=BB86_13 Depth=1
	leaq	-128(%rbp), %rdi
	callq	_ZN2sf9TransformC1Ev@PLT
	movq	-256(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane16GetInnerPositionEv
	movq	%rax, -240(%rbp)
	imull	$-1, -240(%rbp), %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%ecx, %xmm0, %xmm0
	movq	-256(%rbp), %rdi        # 8-byte Reload
	vmovss	%xmm0, -348(%rbp)       # 4-byte Spill
	callq	_ZN5Plane16GetInnerPositionEv
	movq	%rax, -248(%rbp)
	imull	$-1, -244(%rbp), %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%ecx, %xmm0, %xmm1
	leaq	-168(%rbp), %rdi
	vmovss	-348(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-128(%rbp), %rdi
	leaq	-168(%rbp), %rsi
	callq	_ZN2sf9Transform9translateERKNS_7Vector2IfEE@PLT
	movq	-256(%rbp), %rdx        # 8-byte Reload
	movq	%rdx, %rdi
	movq	%rax, -360(%rbp)        # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	(%rax), %rax
	movq	%rax, -176(%rbp)
	movq	-360(%rbp), %rdi        # 8-byte Reload
	leaq	-176(%rbp), %rsi
	callq	_ZN2sf9Transform9translateERKNS_7Vector2IfEE@PLT
	movq	-256(%rbp), %rdx        # 8-byte Reload
	addq	$1072, %rdx             # imm = 0x430
	movq	-232(%rbp), %rsi
	movq	%rdx, %rdi
	movq	%rax, -368(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	-368(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf9Transform9translateERKNS_7Vector2IfEE@PLT
	movq	-256(%rbp), %rdx        # 8-byte Reload
	addq	$248, %rdx
	movq	-232(%rbp), %rsi
	movq	%rdx, %rdi
	movq	%rax, -376(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm
	movq	-376(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rdi
	movq	%rdx, %rsi
	movl	$64, %edx
	callq	memcpy@PLT
# %bb.15:                               #   in Loop: Header=BB86_13 Depth=1
	movq	-232(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -232(%rbp)
	jmp	.LBB86_13
.LBB86_16:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB86_19
# %bb.17:
	addq	$384, %rsp              # imm = 0x180
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB86_18:
	.cfi_def_cfa %rbp, 16
	movq	-216(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB86_19:
	callq	__stack_chk_fail@PLT
.Lfunc_end86:
	.size	_ZN5Plane11frameUpdateEd, .Lfunc_end86-_ZN5Plane11frameUpdateEd
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table86:
.Lexception14:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14 # >> Call Site 1 <<
	.uleb128 .Ltmp400-.Lfunc_begin14 #   Call between .Lfunc_begin14 and .Ltmp400
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp400-.Lfunc_begin14 # >> Call Site 2 <<
	.uleb128 .Ltmp401-.Ltmp400      #   Call between .Ltmp400 and .Ltmp401
	.uleb128 .Ltmp402-.Lfunc_begin14 #     jumps to .Ltmp402
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp403-.Lfunc_begin14 # >> Call Site 3 <<
	.uleb128 .Ltmp404-.Ltmp403      #   Call between .Ltmp403 and .Ltmp404
	.uleb128 .Ltmp405-.Lfunc_begin14 #     jumps to .Ltmp405
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp404-.Lfunc_begin14 # >> Call Site 4 <<
	.uleb128 .Lfunc_end86-.Ltmp404  #   Call between .Ltmp404 and .Lfunc_end86
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end14:
	.p2align	2
                                        # -- End function
	.text
	.globl	_ZN5Plane13DraggingStackEv # -- Begin function _ZN5Plane13DraggingStackEv
	.p2align	4, 0x90
	.type	_ZN5Plane13DraggingStackEv,@function
_ZN5Plane13DraggingStackEv:             # @_ZN5Plane13DraggingStackEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	cmpq	$0, 616(%rcx)
	movq	%rcx, -16(%rbp)         # 8-byte Spill
	movb	%al, -17(%rbp)          # 1-byte Spill
	je	.LBB87_2
# %bb.1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	cmpq	$0, 624(%rax)
	setne	%cl
	movb	%cl, -17(%rbp)          # 1-byte Spill
.LBB87_2:
	movb	-17(%rbp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end87:
	.size	_ZN5Plane13DraggingStackEv, .Lfunc_end87-_ZN5Plane13DraggingStackEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane18DraggingCollectionEv # -- Begin function _ZN5Plane18DraggingCollectionEv
	.p2align	4, 0x90
	.type	_ZN5Plane18DraggingCollectionEv,@function
_ZN5Plane18DraggingCollectionEv:        # @_ZN5Plane18DraggingCollectionEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	cmpq	$0, 616(%rcx)
	movq	%rcx, -16(%rbp)         # 8-byte Spill
	movb	%al, -17(%rbp)          # 1-byte Spill
	je	.LBB88_2
# %bb.1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	cmpq	$0, 624(%rax)
	sete	%cl
	movb	%cl, -17(%rbp)          # 1-byte Spill
.LBB88_2:
	movb	-17(%rbp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end88:
	.size	_ZN5Plane18DraggingCollectionEv, .Lfunc_end88-_ZN5Plane18DraggingCollectionEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_,"axG",@progbits,_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_,comdat
	.weak	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_ # -- Begin function _ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	.p2align	4, 0x90
	.type	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_,@function
_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_:   # @_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	vmovss	4(%rax), %xmm1          # xmm1 = mem[0],zero,zero,zero
	vmovss	(%rcx), %xmm2           # xmm2 = mem[0],zero,zero,zero
	vmovss	4(%rcx), %xmm3          # xmm3 = mem[0],zero,zero,zero
	vaddss	%xmm2, %xmm0, %xmm0
	vaddss	%xmm3, %xmm1, %xmm1
	leaq	-16(%rbp), %rdi
	callq	_ZN2sf7Vector2IfEC2Eff
	vmovsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	vmovaps	%xmm0, -48(%rbp)        # 16-byte Spill
	jne	.LBB89_2
# %bb.1:
	vmovaps	-48(%rbp), %xmm0        # 16-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB89_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end89:
	.size	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_, .Lfunc_end89-_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_,"axG",@progbits,_ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_,comdat
	.weak	_ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_ # -- Begin function _ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_
	.p2align	4, 0x90
	.type	_ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_,@function
_ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_:   # @_ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	movl	(%rax), %edx
	movl	4(%rax), %r8d
	movl	(%rcx), %r9d
	movl	4(%rcx), %r10d
	subl	%r9d, %edx
	subl	%r10d, %r8d
	leaq	-16(%rbp), %rdi
	movl	%edx, %esi
	movl	%r8d, %edx
	callq	_ZN2sf7Vector2IiEC2Eii
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rcx
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jne	.LBB90_2
# %bb.1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB90_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end90:
	.size	_ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_, .Lfunc_end90-_ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE,"axG",@progbits,_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE,comdat
	.weak	_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE # -- Begin function _ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE
	.p2align	4, 0x90
	.type	_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE,@function
_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE:     # @_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rcx), %xmm0, %xmm0
	vmovss	%xmm0, (%rax)
	movq	-16(%rbp), %rcx
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rcx), %xmm0, %xmm0
	vmovss	%xmm0, 4(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end91:
	.size	_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE, .Lfunc_end91-_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function _ZN5Plane19DraggingStackUpdateEv
.LCPI92_0:
	.long	1106247680              # float 30
.LCPI92_1:
	.long	1073741824              # float 2
	.text
	.globl	_ZN5Plane19DraggingStackUpdateEv
	.p2align	4, 0x90
	.type	_ZN5Plane19DraggingStackUpdateEv,@function
_ZN5Plane19DraggingStackUpdateEv:       # @_ZN5Plane19DraggingStackUpdateEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$352, %rsp              # imm = 0x160
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -120(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -192(%rbp)        # 8-byte Spill
	callq	_ZN5Plane9ClearSnapEv
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rax
	movq	%rax, -128(%rbp)
	movq	-192(%rbp), %rax        # 8-byte Reload
	movq	624(%rax), %rcx
	movq	%rcx, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	movq	-192(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	movq	-192(%rbp), %rcx        # 8-byte Reload
	movq	616(%rcx), %rdx
	movq	%rdx, %rdi
	movq	%rax, -200(%rbp)        # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	vmovss	-16(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rcx
	movq	%rcx, %rdi
	movq	%rax, -208(%rbp)        # 8-byte Spill
	vmovss	%xmm0, -212(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-212(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vucomiss	(%rax), %xmm0
	jb	.LBB92_5
# %bb.1:
	vmovss	-16(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rdi
	vmovss	%xmm0, -216(%rbp)       # 4-byte Spill
	callq	_ZN14ITransformable7getSizeEv@PLT
	movl	(%rax), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rax, %xmm0, %xmm0
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rax
	movq	%rax, %rdi
	vmovss	%xmm0, -220(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-220(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vaddss	(%rax), %xmm0, %xmm0
	vmovss	-216(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vucomiss	%xmm1, %xmm0
	jbe	.LBB92_5
# %bb.2:
	vmovss	-12(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rax
	movq	%rax, %rdi
	vmovss	%xmm0, -224(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-224(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vucomiss	4(%rax), %xmm0
	jb	.LBB92_5
# %bb.3:
	vmovss	-12(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rdi
	vmovss	%xmm0, -228(%rbp)       # 4-byte Spill
	callq	_ZN14ITransformable7getSizeEv@PLT
	movl	4(%rax), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rax, %xmm0, %xmm0
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rax
	movq	%rax, %rdi
	vmovss	%xmm0, -232(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-232(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vaddss	4(%rax), %xmm0, %xmm0
	vmovss	-228(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vucomiss	%xmm1, %xmm0
	jbe	.LBB92_5
# %bb.4:
	jmp	.LBB92_46
.LBB92_5:
	movq	-128(%rbp), %rdi
	callq	_ZN5Plane14GetCollectionsEv
	movq	%rax, -136(%rbp)
	movq	-136(%rbp), %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	%rax, -144(%rbp)
	cmpq	$0, -144(%rbp)
	jne	.LBB92_7
# %bb.6:
	jmp	.LBB92_46
.LBB92_7:
	movq	-192(%rbp), %rax        # 8-byte Reload
	cmpq	%rax, -128(%rbp)
	jne	.LBB92_11
# %bb.8:
	movq	-192(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB92_10
# %bb.9:
	movq	-192(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane18DraggingCollectionEv
	testb	$1, %al
	jne	.LBB92_10
	jmp	.LBB92_11
.LBB92_10:
	movq	-144(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -144(%rbp)
.LBB92_11:
	movq	$0, -152(%rbp)
.LBB92_12:                              # =>This Inner Loop Header: Depth=1
	movq	-152(%rbp), %rax
	cmpq	-144(%rbp), %rax
	jae	.LBB92_46
# %bb.13:                               #   in Loop: Header=BB92_12 Depth=1
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZN14ITransformable7getSizeEv@PLT
	movq	(%rax), %rax
	movq	%rax, -24(%rbp)
	leaq	-32(%rbp), %rdi
	movl	$60, %ecx
	movl	%ecx, %esi
	movl	%ecx, %edx
	callq	_ZN2sf7Vector2IjEC2Ejj
	leaq	-24(%rbp), %rdi
	leaq	-32(%rbp), %rsi
	callq	_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	movq	%rax, -240(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	(%rax), %rax
	movq	%rax, -40(%rbp)
	movq	-128(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	leaq	-40(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	vmovss	.LCPI92_0(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	leaq	-48(%rbp), %rdi
	vmovss	%xmm0, -244(%rbp)       # 4-byte Spill
	vmovss	-244(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rax, -256(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-40(%rbp), %rdi
	leaq	-48(%rbp), %rsi
	callq	_ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_
	vmovss	-16(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vucomiss	-40(%rbp), %xmm0
	jbe	.LBB92_44
# %bb.14:                               #   in Loop: Header=BB92_12 Depth=1
	vmovss	-16(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	-40(%rbp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	movl	-24(%rbp), %eax
	movl	%eax, %ecx
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rcx, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB92_44
# %bb.15:                               #   in Loop: Header=BB92_12 Depth=1
	vmovss	-12(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vucomiss	-36(%rbp), %xmm0
	jbe	.LBB92_44
# %bb.16:                               #   in Loop: Header=BB92_12 Depth=1
	vmovss	-12(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	-36(%rbp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	movl	-20(%rbp), %eax
	movl	%eax, %ecx
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rcx, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB92_44
# %bb.17:
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv
	subq	$1, %rax
	movq	%rax, -160(%rbp)
.LBB92_18:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB92_20 Depth 2
	cmpq	$0, -160(%rbp)
	jl	.LBB92_43
# %bb.19:                               #   in Loop: Header=BB92_18 Depth=1
	leaq	-56(%rbp), %rdi
	callq	_ZN2sf7Vector2IjEC2Ev
	movq	$0, -168(%rbp)
.LBB92_20:                              #   Parent Loop BB92_18 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-168(%rbp), %rax
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	movq	%rax, -264(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-160(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	movq	-264(%rbp), %rcx        # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB92_25
# %bb.21:                               #   in Loop: Header=BB92_20 Depth=2
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-160(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-168(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Block8GetWidthEv@PLT
	cmpl	-56(%rbp), %eax
	jbe	.LBB92_23
# %bb.22:                               #   in Loop: Header=BB92_20 Depth=2
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-160(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-168(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Block8GetWidthEv@PLT
	movl	%eax, -56(%rbp)
.LBB92_23:                              #   in Loop: Header=BB92_20 Depth=2
	jmp	.LBB92_24
.LBB92_24:                              #   in Loop: Header=BB92_20 Depth=2
	movq	-168(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -168(%rbp)
	jmp	.LBB92_20
.LBB92_25:                              #   in Loop: Header=BB92_18 Depth=1
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-160(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rcx
	movzbl	(%rcx), %edx
	movl	%edx, %ecx
	imulq	%rcx, %rax
                                        # kill: def $eax killed $eax killed $rax
	movl	%eax, -52(%rbp)
	leaq	-64(%rbp), %rdi
	movl	$60, %eax
	movl	%eax, %esi
	movl	%eax, %edx
	callq	_ZN2sf7Vector2IjEC2Ejj
	leaq	-56(%rbp), %rdi
	leaq	-64(%rbp), %rsi
	callq	_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	movq	%rax, -272(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-160(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	(%rax), %rax
	movq	%rax, -72(%rbp)
	leaq	-72(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	vmovss	-16(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vucomiss	-72(%rbp), %xmm0
	jbe	.LBB92_41
# %bb.26:                               #   in Loop: Header=BB92_18 Depth=1
	vmovss	-16(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	-72(%rbp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	movl	-56(%rbp), %eax
	movl	%eax, %ecx
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rcx, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB92_41
# %bb.27:                               #   in Loop: Header=BB92_18 Depth=1
	vmovss	-12(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vucomiss	-68(%rbp), %xmm0
	jbe	.LBB92_41
# %bb.28:                               #   in Loop: Header=BB92_18 Depth=1
	vmovss	-12(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	-68(%rbp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	movl	-52(%rbp), %eax
	movl	%eax, %ecx
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rcx, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB92_41
# %bb.29:
	movq	$0, -176(%rbp)
.LBB92_30:                              # =>This Inner Loop Header: Depth=1
	movq	-176(%rbp), %rax
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	movq	%rax, -280(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-160(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	addq	$1, %rax
	movq	-280(%rbp), %rcx        # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB92_40
# %bb.31:                               #   in Loop: Header=BB92_30 Depth=1
	movq	$0, -184(%rbp)
	cmpq	$0, -176(%rbp)
	jbe	.LBB92_33
# %bb.32:                               #   in Loop: Header=BB92_30 Depth=1
	movq	-176(%rbp), %rax
	subq	$1, %rax
	movq	%rax, -184(%rbp)
.LBB92_33:                              #   in Loop: Header=BB92_30 Depth=1
	vmovss	.LCPI92_1(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rsi
	vmovss	%xmm0, -284(%rbp)       # 4-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-160(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-184(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Block8GetWidthEv@PLT
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rcx
	movzbl	(%rcx), %edx
	leaq	-80(%rbp), %rsi
	movq	%rsi, %rdi
	movq	%rsi, -296(%rbp)        # 8-byte Spill
	movl	%eax, %esi
	movq	%rcx, -304(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IjEC2Ejj
	leaq	-88(%rbp), %rcx
	movl	$60, %esi
	xorl	%edx, %edx
	movq	%rcx, %rdi
	movq	%rcx, -312(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IjEC2Ejj
	movq	-296(%rbp), %rdi        # 8-byte Reload
	movq	-312(%rbp), %rsi        # 8-byte Reload
	callq	_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_
	movq	-72(%rbp), %rcx
	movq	%rcx, -96(%rbp)
	leaq	-104(%rbp), %rcx
	vxorps	%xmm0, %xmm0, %xmm0
	vmovss	.LCPI92_0(%rip), %xmm1  # xmm1 = mem[0],zero,zero,zero
	movq	%rcx, %rdi
	movq	%rax, -320(%rbp)        # 8-byte Spill
	movq	%rcx, -328(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-96(%rbp), %rdi
	movq	-328(%rbp), %rsi        # 8-byte Reload
	callq	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	movq	-176(%rbp), %rcx
	movq	-304(%rbp), %rsi        # 8-byte Reload
	movzbl	(%rsi), %edx
	movl	%edx, %edi
	imulq	%rdi, %rcx
	movq	%rcx, %rdi
	shrq	%rdi
	movl	%ecx, %edx
	andl	$1, %edx
	movl	%edx, %r8d
	orq	%rdi, %r8
                                        # implicit-def: $xmm0
	vcvtsi2ss	%r8, %xmm0, %xmm0
	vaddss	%xmm0, %xmm0, %xmm0
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rcx, %xmm1, %xmm1
	testq	%rcx, %rcx
	vmovss	%xmm1, -332(%rbp)       # 4-byte Spill
	vmovss	%xmm0, -336(%rbp)       # 4-byte Spill
	js	.LBB92_50
# %bb.49:                               #   in Loop: Header=BB92_30 Depth=1
	vmovss	-332(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, -336(%rbp)       # 4-byte Spill
.LBB92_50:                              #   in Loop: Header=BB92_30 Depth=1
	vmovss	-336(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vmovss	-92(%rbp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vaddss	%xmm0, %xmm1, %xmm0
	vmovss	%xmm0, -92(%rbp)
	movq	-304(%rbp), %rax        # 8-byte Reload
	movzbl	(%rax), %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%ecx, %xmm0, %xmm0
	vmovss	-284(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vdivss	%xmm1, %xmm0, %xmm1
	leaq	-112(%rbp), %rdi
	vxorps	%xmm0, %xmm0, %xmm0
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-96(%rbp), %rdi
	leaq	-112(%rbp), %rsi
	callq	_ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_
	vmovss	-16(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vucomiss	-96(%rbp), %xmm0
	jb	.LBB92_38
# %bb.34:                               #   in Loop: Header=BB92_30 Depth=1
	vmovss	-16(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	-96(%rbp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	movl	-80(%rbp), %eax
	movl	%eax, %ecx
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rcx, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB92_38
# %bb.35:                               #   in Loop: Header=BB92_30 Depth=1
	vmovss	-12(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vucomiss	-92(%rbp), %xmm0
	jb	.LBB92_38
# %bb.36:                               #   in Loop: Header=BB92_30 Depth=1
	vmovss	-12(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	-92(%rbp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	movl	-76(%rbp), %eax
	movl	%eax, %ecx
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rcx, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB92_38
# %bb.37:
	movq	-152(%rbp), %rsi
	movq	-176(%rbp), %rdx
	movq	-136(%rbp), %rdi
	movq	-152(%rbp), %rax
	movq	%rsi, -344(%rbp)        # 8-byte Spill
	movq	%rax, %rsi
	movq	%rdx, -352(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-160(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rcx
	movq	-192(%rbp), %rdi        # 8-byte Reload
	movq	-344(%rbp), %rsi        # 8-byte Reload
	movq	-352(%rbp), %rdx        # 8-byte Reload
	callq	_ZN5Plane7SetSnapEmmP5Stack
	jmp	.LBB92_46
.LBB92_38:                              #   in Loop: Header=BB92_30 Depth=1
	jmp	.LBB92_39
.LBB92_39:                              #   in Loop: Header=BB92_30 Depth=1
	movq	-176(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -176(%rbp)
	jmp	.LBB92_30
.LBB92_40:
	jmp	.LBB92_43
.LBB92_41:                              #   in Loop: Header=BB92_18 Depth=1
	jmp	.LBB92_42
.LBB92_42:                              #   in Loop: Header=BB92_18 Depth=1
	movq	-160(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -160(%rbp)
	jmp	.LBB92_18
.LBB92_43:
	jmp	.LBB92_46
.LBB92_44:                              #   in Loop: Header=BB92_12 Depth=1
	jmp	.LBB92_45
.LBB92_45:                              #   in Loop: Header=BB92_12 Depth=1
	movq	-152(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -152(%rbp)
	jmp	.LBB92_12
.LBB92_46:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB92_48
# %bb.47:
	addq	$352, %rsp              # imm = 0x160
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB92_48:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end92:
	.size	_ZN5Plane19DraggingStackUpdateEv, .Lfunc_end92-_ZN5Plane19DraggingStackUpdateEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv,@function
_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv: # @_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$6, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end93:
	.size	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv, .Lfunc_end93-_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm: # @_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$6, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end94:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm, .Lfunc_end94-_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZThn184_N5Plane11frameUpdateEd # -- Begin function _ZThn184_N5Plane11frameUpdateEd
	.p2align	4, 0x90
	.type	_ZThn184_N5Plane11frameUpdateEd,@function
_ZThn184_N5Plane11frameUpdateEd:        # @_ZThn184_N5Plane11frameUpdateEd
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	vmovsd	%xmm0, -16(%rbp)
	movq	-8(%rbp), %rax
	addq	$-184, %rax
	vmovsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%rax, %rdi
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	jmp	_ZN5Plane11frameUpdateEd # TAILCALL
.Lfunc_end95:
	.size	_ZThn184_N5Plane11frameUpdateEd, .Lfunc_end95-_ZThn184_N5Plane11frameUpdateEd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function _ZN5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE
.LCPI96_0:
	.long	1084227584              # float 5
	.text
	.globl	_ZN5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE
	.p2align	4, 0x90
	.type	_ZN5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE,@function
_ZN5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE: # @_ZN5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception15
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$672, %rsp              # imm = 0x2A0
                                        # kill: def $sil killed $sil killed $esi
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -256(%rbp)
	andb	$1, %sil
	movb	%sil, -257(%rbp)
	movq	%rdx, -272(%rbp)
	movq	%rcx, -280(%rbp)
	movq	-256(%rbp), %rax
	movq	%rax, %rcx
	addq	$1072, %rcx             # imm = 0x430
	movq	%rcx, %rdi
	movq	%rax, -416(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	%rax, -288(%rbp)
	cmpq	$0, -288(%rbp)
	jne	.LBB96_2
# %bb.1:
	movb	$0, -241(%rbp)
	jmp	.LBB96_88
.LBB96_2:
	movq	-416(%rbp), %rax        # 8-byte Reload
	cmpq	_ZN5Plane12ToolbarPlaneE(%rip), %rax
	jne	.LBB96_4
# %bb.3:
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB96_6
.LBB96_4:
	movq	-416(%rbp), %rax        # 8-byte Reload
	cmpq	_ZN5Plane12PrimaryPlaneE(%rip), %rax
	jne	.LBB96_7
# %bb.5:
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rdi
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB96_6
	jmp	.LBB96_7
.LBB96_6:
	movb	$0, -241(%rbp)
	jmp	.LBB96_88
.LBB96_7:
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB96_9
# %bb.8:
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane18DraggingCollectionEv
	testb	$1, %al
	jne	.LBB96_9
	jmp	.LBB96_10
.LBB96_9:
	movq	-288(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -288(%rbp)
.LBB96_10:
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB96_11
	jmp	.LBB96_19
.LBB96_11:
	testb	$1, -257(%rbp)
	jne	.LBB96_14
# %bb.12:
	movq	-416(%rbp), %rax        # 8-byte Reload
	testb	$1, 648(%rax)
	jne	.LBB96_14
# %bb.13:
	movq	-272(%rbp), %rsi
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane6UnDragERKN2sf7Vector2IiEE
	jmp	.LBB96_18
.LBB96_14:
	testb	$1, -257(%rbp)
	je	.LBB96_17
# %bb.15:
	movq	-416(%rbp), %rax        # 8-byte Reload
	testb	$1, 648(%rax)
	je	.LBB96_17
# %bb.16:
	movq	-272(%rbp), %rsi
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane6UnDragERKN2sf7Vector2IiEE
.LBB96_17:
	jmp	.LBB96_18
.LBB96_18:
	jmp	.LBB96_19
.LBB96_19:
	movq	$0, -296(%rbp)
.LBB96_20:                              # =>This Inner Loop Header: Depth=1
	movq	-296(%rbp), %rax
	cmpq	-288(%rbp), %rax
	jae	.LBB96_87
# %bb.21:                               #   in Loop: Header=BB96_20 Depth=1
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13CalculateZoomEv
	vmovlpd	%xmm0, -304(%rbp)
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane15CalculateOffsetEv
	vmovlpd	%xmm0, -312(%rbp)
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -424(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN14ITransformable7getSizeEv@PLT
	movl	(%rax), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rax, %xmm0, %xmm0
	vmovss	-304(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	vmulss	%xmm1, %xmm0, %xmm0
	vcvttss2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-296(%rbp), %rsi
	movq	-424(%rbp), %rdi        # 8-byte Reload
	movl	%eax, -428(%rbp)        # 4-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN14ITransformable7getSizeEv@PLT
	movl	4(%rax), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rax, %xmm0, %xmm0
	vmovss	-300(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	vmulss	%xmm1, %xmm0, %xmm0
	vcvttss2si	%xmm0, %rax
                                        # kill: def $eax killed $eax killed $rax
	leaq	-112(%rbp), %rdi
	movl	-428(%rbp), %esi        # 4-byte Reload
	movl	%eax, %edx
	callq	_ZN2sf7Vector2IjEC2Ejj
	movq	-416(%rbp), %rdi        # 8-byte Reload
	addq	$1072, %rdi             # imm = 0x430
	movq	-296(%rbp), %rsi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	movq	-416(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	vmovss	%xmm0, -432(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-432(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vaddss	(%rax), %xmm0, %xmm0
	movq	-416(%rbp), %rdi        # 8-byte Reload
	vmovss	%xmm0, -436(%rbp)       # 4-byte Spill
	callq	_ZN5Plane16GetInnerPositionEv
	movq	%rax, -320(%rbp)
                                        # implicit-def: $xmm0
	vcvtsi2ssl	-320(%rbp), %xmm0, %xmm0
	vmovss	-436(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vsubss	%xmm0, %xmm1, %xmm0
	vsubss	-312(%rbp), %xmm0, %xmm0
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	vmovss	%xmm0, -440(%rbp)       # 4-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	movq	-416(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	vmovss	%xmm0, -444(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-444(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vaddss	4(%rax), %xmm0, %xmm0
	movq	-416(%rbp), %rdi        # 8-byte Reload
	vmovss	%xmm0, -448(%rbp)       # 4-byte Spill
	callq	_ZN5Plane16GetInnerPositionEv
	movq	%rax, -328(%rbp)
                                        # implicit-def: $xmm0
	vcvtsi2ssl	-324(%rbp), %xmm0, %xmm0
	vmovss	-448(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vsubss	%xmm0, %xmm1, %xmm0
	vsubss	-308(%rbp), %xmm0, %xmm1
	leaq	-120(%rbp), %rdi
	vmovss	-440(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.2(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	vmovss	-312(%rbp), %xmm0       # xmm0 = mem[0],zero,zero,zero
	movq	%rax, %rdi
	callq	_ZNSolsEf@PLT
	movq	%rax, %rdi
	leaq	.L.str.3(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	vmovss	-308(%rbp), %xmm0       # xmm0 = mem[0],zero,zero,zero
	movq	%rax, %rdi
	callq	_ZNSolsEf@PLT
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSolsEPFRSoS_E@PLT
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.4(%rip), %rsi
	movq	%rax, -456(%rbp)        # 8-byte Spill
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	vmovss	-304(%rbp), %xmm0       # xmm0 = mem[0],zero,zero,zero
	movq	%rax, %rdi
	callq	_ZNSolsEf@PLT
	movq	%rax, %rdi
	leaq	.L.str.3(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	vmovss	-300(%rbp), %xmm0       # xmm0 = mem[0],zero,zero,zero
	movq	%rax, %rdi
	callq	_ZNSolsEf@PLT
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSolsEPFRSoS_E@PLT
	movq	-272(%rbp), %rsi
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rsi), %xmm0, %xmm0
	vucomiss	-120(%rbp), %xmm0
	jbe	.LBB96_85
# %bb.22:                               #   in Loop: Header=BB96_20 Depth=1
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	vmovss	-120(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	movl	-112(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rax, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB96_85
# %bb.23:                               #   in Loop: Header=BB96_20 Depth=1
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	vucomiss	-116(%rbp), %xmm0
	jbe	.LBB96_85
# %bb.24:                               #   in Loop: Header=BB96_20 Depth=1
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	vmovss	-116(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	movl	-108(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rax, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB96_85
# %bb.25:
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.5(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	vmovss	-312(%rbp), %xmm0       # xmm0 = mem[0],zero,zero,zero
	movq	%rax, %rdi
	callq	_ZNSolsEf@PLT
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSolsEPFRSoS_E@PLT
	movq	-416(%rbp), %rcx        # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -464(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv
	subq	$1, %rax
	movq	%rax, -336(%rbp)
.LBB96_26:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB96_28 Depth 2
	cmpq	$0, -336(%rbp)
	jl	.LBB96_84
# %bb.27:                               #   in Loop: Header=BB96_26 Depth=1
	leaq	-128(%rbp), %rdi
	callq	_ZN2sf7Vector2IjEC2Ev
	movq	$0, -344(%rbp)
.LBB96_28:                              #   Parent Loop BB96_26 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	-344(%rbp), %rax
	movq	-416(%rbp), %rcx        # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -472(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	movq	-472(%rbp), %rcx        # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB96_33
# %bb.29:                               #   in Loop: Header=BB96_28 Depth=2
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-344(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Block8GetWidthEv@PLT
	cmpl	-128(%rbp), %eax
	jbe	.LBB96_31
# %bb.30:                               #   in Loop: Header=BB96_28 Depth=2
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-344(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Block8GetWidthEv@PLT
	movl	%eax, -128(%rbp)
.LBB96_31:                              #   in Loop: Header=BB96_28 Depth=2
	jmp	.LBB96_32
.LBB96_32:                              #   in Loop: Header=BB96_28 Depth=2
	movq	-344(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -344(%rbp)
	jmp	.LBB96_28
.LBB96_33:                              #   in Loop: Header=BB96_26 Depth=1
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rcx
	movzbl	(%rcx), %edx
                                        # kill: def $eax killed $eax killed $rax
	imull	%edx, %eax
	movl	%eax, -124(%rbp)
	movl	-128(%rbp), %eax
	movl	-124(%rbp), %edx
	movl	%eax, %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rcx, %xmm0, %xmm0
	vmovss	-304(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	vmovss	-300(%rbp), %xmm2       # xmm2 = mem[0],zero,zero,zero
	vmulss	%xmm1, %xmm0, %xmm0
	vcvttss2si	%xmm0, %rcx
                                        # kill: def $ecx killed $ecx killed $rcx
	movl	%edx, %esi
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rsi, %xmm0, %xmm0
	vmulss	%xmm2, %xmm0, %xmm0
	vcvttss2si	%xmm0, %rsi
                                        # kill: def $esi killed $esi killed $rsi
	leaq	-136(%rbp), %rdi
	movl	%esi, -476(%rbp)        # 4-byte Spill
	movl	%ecx, %esi
	movl	-476(%rbp), %edx        # 4-byte Reload
	callq	_ZN2sf7Vector2IjEC2Ejj
	movq	-136(%rbp), %rdi
	movq	%rdi, -128(%rbp)
	movq	-416(%rbp), %rdi        # 8-byte Reload
	addq	$1072, %rdi             # imm = 0x430
	movq	-296(%rbp), %rsi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	vmulss	-304(%rbp), %xmm0, %xmm0
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	vmovss	%xmm0, -480(%rbp)       # 4-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	vmulss	-300(%rbp), %xmm0, %xmm1
	leaq	-144(%rbp), %rdi
	vmovss	-480(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-144(%rbp), %rdi
	leaq	-120(%rbp), %rsi
	callq	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	movq	-272(%rbp), %rsi
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rsi), %xmm0, %xmm0
	vucomiss	-144(%rbp), %xmm0
	jbe	.LBB96_82
# %bb.34:                               #   in Loop: Header=BB96_26 Depth=1
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	vmovss	-144(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	movl	-128(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rax, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB96_82
# %bb.35:                               #   in Loop: Header=BB96_26 Depth=1
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	vucomiss	-140(%rbp), %xmm0
	jbe	.LBB96_82
# %bb.36:                               #   in Loop: Header=BB96_26 Depth=1
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	vmovss	-140(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	movl	-124(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rax, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB96_82
# %bb.37:
	movq	$0, -352(%rbp)
.LBB96_38:                              # =>This Inner Loop Header: Depth=1
	movq	-352(%rbp), %rax
	movq	-416(%rbp), %rcx        # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -488(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	movq	-488(%rbp), %rcx        # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB96_81
# %bb.39:                               #   in Loop: Header=BB96_38 Depth=1
	leaq	-152(%rbp), %rdi
	callq	_ZN2sf7Vector2IjEC2Ev
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-352(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Block8GetWidthEv@PLT
	movl	%eax, -152(%rbp)
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rcx
	movzbl	(%rcx), %eax
	movl	%eax, -148(%rbp)
	movl	-152(%rbp), %eax
	movl	-148(%rbp), %edx
	movl	%eax, %esi
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rsi, %xmm0, %xmm0
	vmovss	-304(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	vmovss	-300(%rbp), %xmm2       # xmm2 = mem[0],zero,zero,zero
	vmulss	%xmm1, %xmm0, %xmm0
	vcvttss2si	%xmm0, %rsi
                                        # kill: def $esi killed $esi killed $rsi
	movl	%edx, %edi
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rdi, %xmm0, %xmm0
	vmulss	%xmm2, %xmm0, %xmm0
	vcvttss2si	%xmm0, %rdi
                                        # kill: def $edi killed $edi killed $rdi
	leaq	-160(%rbp), %r8
	movl	%edi, -492(%rbp)        # 4-byte Spill
	movq	%r8, %rdi
	movl	-492(%rbp), %edx        # 4-byte Reload
	movq	%rcx, -504(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IjEC2Ejj
	movq	-160(%rbp), %rcx
	movq	%rcx, -152(%rbp)
	movq	-144(%rbp), %rcx
	movq	%rcx, -168(%rbp)
	movq	-504(%rbp), %rcx        # 8-byte Reload
	movzbl	(%rcx), %eax
	movl	%eax, %edi
	movq	-352(%rbp), %r8
	imulq	%r8, %rdi
	movq	%rdi, %r8
	shrq	%r8
	movl	%edi, %eax
	andl	$1, %eax
	movl	%eax, %r9d
	orq	%r8, %r9
                                        # implicit-def: $xmm0
	vcvtsi2ss	%r9, %xmm0, %xmm0
	vaddss	%xmm0, %xmm0, %xmm0
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rdi, %xmm1, %xmm1
	testq	%rdi, %rdi
	vmovss	%xmm1, -508(%rbp)       # 4-byte Spill
	vmovss	%xmm0, -512(%rbp)       # 4-byte Spill
	js	.LBB96_93
# %bb.92:                               #   in Loop: Header=BB96_38 Depth=1
	vmovss	-508(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, -512(%rbp)       # 4-byte Spill
.LBB96_93:                              #   in Loop: Header=BB96_38 Depth=1
	vmovss	-512(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vaddss	-164(%rbp), %xmm0, %xmm0
	vmovss	%xmm0, -164(%rbp)
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	vucomiss	-168(%rbp), %xmm0
	jb	.LBB96_79
# %bb.40:                               #   in Loop: Header=BB96_38 Depth=1
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	vmovss	-168(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	movl	-152(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rax, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB96_79
# %bb.41:                               #   in Loop: Header=BB96_38 Depth=1
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	vucomiss	-164(%rbp), %xmm0
	jb	.LBB96_79
# %bb.42:                               #   in Loop: Header=BB96_38 Depth=1
	movq	-272(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	vmovss	-164(%rbp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	movl	-148(%rbp), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm2
	vcvtsi2ss	%rax, %xmm2, %xmm2
	vaddss	%xmm2, %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB96_79
# %bb.43:
	testb	$1, -257(%rbp)
	je	.LBB96_78
# %bb.44:
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB96_78
# %bb.45:
	movq	-280(%rbp), %rax
	cmpl	$0, (%rax)
	jne	.LBB96_69
# %bb.46:
	movq	-352(%rbp), %rsi
	leaq	-72(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -520(%rbp)        # 8-byte Spill
	callq	_ZNSt7__cxx119to_stringEm
.Ltmp412:
	leaq	.L.str.6(%rip), %rsi
	leaq	-40(%rbp), %rdi
	movq	-520(%rbp), %rdx        # 8-byte Reload
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp413:
	jmp	.LBB96_47
.LBB96_47:
.Ltmp415:
	leaq	-40(%rbp), %rdi
	callq	_ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp416:
	jmp	.LBB96_48
.LBB96_48:
	leaq	-40(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-72(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	callq	_ZN14ContextHandler7DisableEv@PLT
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane8UnSelectEv
	movl	$216, %edi
	callq	_Znwm@PLT
	movq	%rax, %rcx
	movq	%rax, %rdx
.Ltmp418:
	movq	%rax, %rdi
	movq	%rcx, -528(%rbp)        # 8-byte Spill
	movq	%rdx, -536(%rbp)        # 8-byte Spill
	callq	_ZN10CollectionC1Ev@PLT
.Ltmp419:
	jmp	.LBB96_49
.LBB96_49:
	movq	-536(%rbp), %rax        # 8-byte Reload
	movq	%rax, -376(%rbp)
	movq	-416(%rbp), %rcx        # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, -384(%rbp)
	cmpq	$0, -352(%rbp)
	jbe	.LBB96_65
# %bb.50:
	movl	$208, %edi
	callq	_Znwm@PLT
	movq	%rax, %rcx
	movq	%rax, %rdx
.Ltmp421:
	movq	%rax, %rdi
	movq	%rcx, -544(%rbp)        # 8-byte Spill
	movq	%rdx, -552(%rbp)        # 8-byte Spill
	callq	_ZN5StackC1Ev@PLT
.Ltmp422:
	jmp	.LBB96_51
.LBB96_51:
	movq	-552(%rbp), %rax        # 8-byte Reload
	movq	%rax, -392(%rbp)
	movq	-392(%rbp), %rcx
	movq	-384(%rbp), %rdx
	movq	%rdx, %rdi
	movq	%rcx, -560(%rbp)        # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	-560(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE@PLT
	movq	$0, -400(%rbp)
.LBB96_52:                              # =>This Inner Loop Header: Depth=1
	movq	-400(%rbp), %rax
	cmpq	-352(%rbp), %rax
	jae	.LBB96_60
# %bb.53:                               #   in Loop: Header=BB96_52 Depth=1
	movq	-392(%rbp), %rdi
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rdi, -568(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-336(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-400(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rsi
	movq	-568(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Stack8AddBlockEP5Block@PLT
# %bb.54:                               #   in Loop: Header=BB96_52 Depth=1
	movq	-400(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -400(%rbp)
	jmp	.LBB96_52
.LBB96_55:
.Ltmp414:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -360(%rbp)
	movl	%edx, -364(%rbp)
	jmp	.LBB96_57
.LBB96_56:
.Ltmp417:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -360(%rbp)
	movl	%edx, -364(%rbp)
	leaq	-40(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB96_57:
	leaq	-72(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	jmp	.LBB96_90
.LBB96_58:
.Ltmp420:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -360(%rbp)
	movl	%edx, -364(%rbp)
	movq	-528(%rbp), %rdi        # 8-byte Reload
	callq	_ZdlPv@PLT
	jmp	.LBB96_90
.LBB96_59:
.Ltmp423:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -360(%rbp)
	movl	%edx, -364(%rbp)
	movq	-544(%rbp), %rdi        # 8-byte Reload
	callq	_ZdlPv@PLT
	jmp	.LBB96_90
.LBB96_60:
	movq	$0, -408(%rbp)
.LBB96_61:                              # =>This Inner Loop Header: Depth=1
	movq	-408(%rbp), %rax
	cmpq	-352(%rbp), %rax
	jae	.LBB96_64
# %bb.62:                               #   in Loop: Header=BB96_61 Depth=1
	xorl	%eax, %eax
	movl	%eax, %esi
	movq	-384(%rbp), %rdi
	callq	_ZN5Stack11RemoveBlockEm@PLT
# %bb.63:                               #   in Loop: Header=BB96_61 Depth=1
	movq	-408(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -408(%rbp)
	jmp	.LBB96_61
.LBB96_64:
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	movq	-392(%rbp), %rsi
	callq	_ZN10Collection8AddStackEP5Stack@PLT
.LBB96_65:
	movq	-376(%rbp), %rdi
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rdi, -576(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	-352(%rbp), %rcx
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rdx
	movzbl	(%rdx), %r8d
	movl	%r8d, %edx
	imulq	%rdx, %rcx
	movq	%rcx, %rdx
	shrq	%rdx
	movl	%ecx, %r8d
	andl	$1, %r8d
	movl	%r8d, %esi
	orq	%rdx, %rsi
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rsi, %xmm0, %xmm0
	vaddss	%xmm0, %xmm0, %xmm0
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rcx, %xmm1, %xmm1
	testq	%rcx, %rcx
	movq	%rax, -584(%rbp)        # 8-byte Spill
	vmovss	%xmm1, -588(%rbp)       # 4-byte Spill
	vmovss	%xmm0, -592(%rbp)       # 4-byte Spill
	js	.LBB96_95
# %bb.94:
	vmovss	-588(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, -592(%rbp)       # 4-byte Spill
.LBB96_95:
	vmovss	-592(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	leaq	-192(%rbp), %rax
	vxorps	%xmm1, %xmm1, %xmm1
	movq	%rax, %rdi
	vmovss	%xmm0, -596(%rbp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	vmovss	-596(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rax, -608(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
	movq	-584(%rbp), %rdi        # 8-byte Reload
	movq	-608(%rbp), %rsi        # 8-byte Reload
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -184(%rbp)
	movq	-384(%rbp), %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	(%rax), %rax
	movq	%rax, -200(%rbp)
	leaq	-184(%rbp), %rdi
	leaq	-200(%rbp), %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -176(%rbp)
	movq	-576(%rbp), %rdi        # 8-byte Reload
	leaq	-176(%rbp), %rsi
	callq	_ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE@PLT
	movq	-376(%rbp), %rax
	movq	-384(%rbp), %rdi
	movq	%rax, -616(%rbp)        # 8-byte Spill
	callq	_ZN5Stack14GetWidestBlockEv@PLT
                                        # kill: def $eax killed $eax killed $rax
	movq	-384(%rbp), %rdi
	movl	%eax, -620(%rbp)        # 4-byte Spill
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rcx
	movzbl	(%rcx), %edx
	movl	%edx, %ecx
	imulq	%rcx, %rax
                                        # kill: def $eax killed $eax killed $rax
	leaq	-208(%rbp), %rdi
	movl	-620(%rbp), %esi        # 4-byte Reload
	movl	%eax, %edx
	callq	_ZN2sf7Vector2IjEC2Ejj
	movq	-616(%rbp), %rdi        # 8-byte Reload
	leaq	-208(%rbp), %rsi
	callq	_ZN14ITransformable7setSizeERKN2sf7Vector2IjEE@PLT
	movq	-384(%rbp), %rcx
	movq	%rcx, %rdi
	vxorps	%xmm0, %xmm0, %xmm0
	vmovss	%xmm0, -624(%rbp)       # 4-byte Spill
	vmovss	-624(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	callq	_ZN2sf13Transformable11setPositionEff@PLT
	movq	-416(%rbp), %rcx        # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	movq	-336(%rbp), %rsi
	callq	_ZN10Collection11RemoveStackEm@PLT
	movq	-376(%rbp), %rdi
	movq	-384(%rbp), %rsi
	callq	_ZN10Collection8AddStackEP5Stack@PLT
	xorl	%edx, %edx
	movq	-376(%rbp), %rsi
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13AddCollectionEP10Collectionb
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	-296(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv
	cmpq	$0, %rax
	jbe	.LBB96_67
# %bb.66:
	movq	-296(%rbp), %rax
                                        # kill: def $ax killed $ax killed $rax
	movq	-416(%rbp), %rdi        # 8-byte Reload
	movzwl	%ax, %esi
	callq	_ZN5Plane12UpdateBufferEt
	jmp	.LBB96_68
.LBB96_67:
	movq	-296(%rbp), %rsi
	movq	-416(%rbp), %rdi        # 8-byte Reload
	movl	$1, %edx
	callq	_ZN5Plane16DeleteCollectionEmb
.LBB96_68:
	xorl	%ecx, %ecx
	movq	-376(%rbp), %rsi
	movq	-384(%rbp), %rdx
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane9DragStackEP10CollectionP5Stackb
	jmp	.LBB96_77
.LBB96_69:
	movq	-280(%rbp), %rax
	cmpl	$1, (%rax)
	jne	.LBB96_76
# %bb.70:
	leaq	-216(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -632(%rbp)        # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
.Ltmp406:
	leaq	.L.str.7(%rip), %rsi
	leaq	-104(%rbp), %rdi
	movq	-632(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
.Ltmp407:
	jmp	.LBB96_71
.LBB96_71:
.Ltmp409:
	leaq	-104(%rbp), %rdi
	callq	_ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp410:
	jmp	.LBB96_72
.LBB96_72:
	leaq	-104(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-216(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	callq	_ZN14ContextHandler7DisableEv@PLT
	movq	-272(%rbp), %rsi
	leaq	-232(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -640(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE
	leaq	-240(%rbp), %rax
	vmovss	.LCPI96_0(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movq	%rax, %rdi
	vmovss	%xmm0, -644(%rbp)       # 4-byte Spill
	vmovss	-644(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rax, -656(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
	movq	-640(%rbp), %rdi        # 8-byte Reload
	movq	-656(%rbp), %rsi        # 8-byte Reload
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -224(%rbp)
	movq	-416(%rbp), %rax        # 8-byte Reload
	addq	$584, %rax              # imm = 0x248
	leaq	-224(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN14ContextHandler6EnableERKN2sf7Vector2IfEEPSt8functionIFvhEE@PLT
	movq	-296(%rbp), %rsi
	movq	-336(%rbp), %rdx
	movq	-352(%rbp), %rcx
	movq	-416(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13SelectContextEmmm
	jmp	.LBB96_76
.LBB96_73:
.Ltmp408:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -360(%rbp)
	movl	%edx, -364(%rbp)
	jmp	.LBB96_75
.LBB96_74:
.Ltmp411:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -360(%rbp)
	movl	%edx, -364(%rbp)
	leaq	-104(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB96_75:
	leaq	-216(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB96_90
.LBB96_76:
	jmp	.LBB96_77
.LBB96_77:
	jmp	.LBB96_78
.LBB96_78:
	movb	$1, -241(%rbp)
	jmp	.LBB96_88
.LBB96_79:                              #   in Loop: Header=BB96_38 Depth=1
	jmp	.LBB96_80
.LBB96_80:                              #   in Loop: Header=BB96_38 Depth=1
	movq	-352(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -352(%rbp)
	jmp	.LBB96_38
.LBB96_81:
	jmp	.LBB96_84
.LBB96_82:                              #   in Loop: Header=BB96_26 Depth=1
	jmp	.LBB96_83
.LBB96_83:                              #   in Loop: Header=BB96_26 Depth=1
	movq	-336(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -336(%rbp)
	jmp	.LBB96_26
.LBB96_84:
	jmp	.LBB96_87
.LBB96_85:                              #   in Loop: Header=BB96_20 Depth=1
	jmp	.LBB96_86
.LBB96_86:                              #   in Loop: Header=BB96_20 Depth=1
	movq	-296(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -296(%rbp)
	jmp	.LBB96_20
.LBB96_87:
	movb	$0, -241(%rbp)
.LBB96_88:
	movb	-241(%rbp), %al
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movb	%al, -657(%rbp)         # 1-byte Spill
	jne	.LBB96_91
# %bb.89:
	movb	-657(%rbp), %al         # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	addq	$672, %rsp              # imm = 0x2A0
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB96_90:
	.cfi_def_cfa %rbp, 16
	movq	-360(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB96_91:
	callq	__stack_chk_fail@PLT
.Lfunc_end96:
	.size	_ZN5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE, .Lfunc_end96-_ZN5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table96:
.Lexception15:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Lfunc_begin15-.Lfunc_begin15 # >> Call Site 1 <<
	.uleb128 .Ltmp412-.Lfunc_begin15 #   Call between .Lfunc_begin15 and .Ltmp412
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp412-.Lfunc_begin15 # >> Call Site 2 <<
	.uleb128 .Ltmp413-.Ltmp412      #   Call between .Ltmp412 and .Ltmp413
	.uleb128 .Ltmp414-.Lfunc_begin15 #     jumps to .Ltmp414
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp415-.Lfunc_begin15 # >> Call Site 3 <<
	.uleb128 .Ltmp416-.Ltmp415      #   Call between .Ltmp415 and .Ltmp416
	.uleb128 .Ltmp417-.Lfunc_begin15 #     jumps to .Ltmp417
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp416-.Lfunc_begin15 # >> Call Site 4 <<
	.uleb128 .Ltmp418-.Ltmp416      #   Call between .Ltmp416 and .Ltmp418
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp418-.Lfunc_begin15 # >> Call Site 5 <<
	.uleb128 .Ltmp419-.Ltmp418      #   Call between .Ltmp418 and .Ltmp419
	.uleb128 .Ltmp420-.Lfunc_begin15 #     jumps to .Ltmp420
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp419-.Lfunc_begin15 # >> Call Site 6 <<
	.uleb128 .Ltmp421-.Ltmp419      #   Call between .Ltmp419 and .Ltmp421
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp421-.Lfunc_begin15 # >> Call Site 7 <<
	.uleb128 .Ltmp422-.Ltmp421      #   Call between .Ltmp421 and .Ltmp422
	.uleb128 .Ltmp423-.Lfunc_begin15 #     jumps to .Ltmp423
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp422-.Lfunc_begin15 # >> Call Site 8 <<
	.uleb128 .Ltmp406-.Ltmp422      #   Call between .Ltmp422 and .Ltmp406
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp406-.Lfunc_begin15 # >> Call Site 9 <<
	.uleb128 .Ltmp407-.Ltmp406      #   Call between .Ltmp406 and .Ltmp407
	.uleb128 .Ltmp408-.Lfunc_begin15 #     jumps to .Ltmp408
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp409-.Lfunc_begin15 # >> Call Site 10 <<
	.uleb128 .Ltmp410-.Ltmp409      #   Call between .Ltmp409 and .Ltmp410
	.uleb128 .Ltmp411-.Lfunc_begin15 #     jumps to .Ltmp411
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp410-.Lfunc_begin15 # >> Call Site 11 <<
	.uleb128 .Lfunc_end96-.Ltmp410  #   Call between .Ltmp410 and .Lfunc_end96
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end15:
	.p2align	2
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function _ZN5Plane6UnDragERKN2sf7Vector2IiEE
.LCPI97_0:
	.long	1112014848              # float 50
	.text
	.globl	_ZN5Plane6UnDragERKN2sf7Vector2IiEE
	.p2align	4, 0x90
	.type	_ZN5Plane6UnDragERKN2sf7Vector2IiEE,@function
_ZN5Plane6UnDragERKN2sf7Vector2IiEE:    # @_ZN5Plane6UnDragERKN2sf7Vector2IiEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$336, %rsp              # imm = 0x150
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -144(%rbp)
	movq	%rsi, -152(%rbp)
	movq	-144(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -176(%rbp)        # 8-byte Spill
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB97_1
	jmp	.LBB97_29
.LBB97_1:
	movq	-176(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane6IsSnapEv
	testb	$1, %al
	jne	.LBB97_2
	jmp	.LBB97_3
.LBB97_2:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	1016(%rax), %rdi
	movq	624(%rax), %rcx
	movq	%rdi, -184(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-176(%rbp), %rcx        # 8-byte Reload
	movq	1008(%rcx), %rdx
	movq	-184(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN5Stack12InsertBlocksERKSt6vectorIP5BlockSaIS2_EEm@PLT
	xorl	%esi, %esi
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	616(%rax), %rdi
	callq	_ZN10Collection9RemoveAllEb@PLT
	movq	-176(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	subq	$1, %rax
	movq	-176(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movl	$1, %edx
	callq	_ZN5Plane16DeleteCollectionEmb
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	1000(%rax), %rcx
                                        # kill: def $cx killed $cx killed $rcx
	movzwl	%cx, %esi
	callq	_ZN5Plane12UpdateBufferEt
	jmp	.LBB97_28
.LBB97_3:
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rax
	movq	%rax, %rdi
	vmovss	%xmm0, -188(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-188(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vucomiss	(%rax), %xmm0
	jbe	.LBB97_8
# %bb.4:
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rdi
	vmovss	%xmm0, -192(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rdi
	vmovss	%xmm0, -196(%rbp)       # 4-byte Spill
	callq	_ZN14ITransformable7getSizeEv@PLT
	movl	(%rax), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rax, %xmm0, %xmm0
	vmovss	-196(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vaddss	%xmm0, %xmm1, %xmm0
	vmovss	-192(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vucomiss	%xmm1, %xmm0
	jbe	.LBB97_8
# %bb.5:
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rax
	movq	%rax, %rdi
	vmovss	%xmm0, -200(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-200(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vucomiss	4(%rax), %xmm0
	jbe	.LBB97_8
# %bb.6:
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rdi
	vmovss	%xmm0, -204(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	movq	_ZN5Plane12ToolbarPlaneE(%rip), %rdi
	vmovss	%xmm0, -208(%rbp)       # 4-byte Spill
	callq	_ZN14ITransformable7getSizeEv@PLT
	movl	4(%rax), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rax, %xmm0, %xmm0
	vmovss	-208(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vaddss	%xmm0, %xmm1, %xmm0
	vmovss	-204(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vucomiss	%xmm1, %xmm0
	jbe	.LBB97_8
# %bb.7:
	movq	-176(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	subq	$1, %rax
	movq	-176(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movl	$1, %edx
	callq	_ZN5Plane16DeleteCollectionEmb
	jmp	.LBB97_27
.LBB97_8:
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rax
	movq	%rax, %rdi
	vmovss	%xmm0, -212(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-212(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vucomiss	(%rax), %xmm0
	jbe	.LBB97_26
# %bb.9:
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	vmovss	%xmm0, -216(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	vmovss	%xmm0, -220(%rbp)       # 4-byte Spill
	callq	_ZN14ITransformable7getSizeEv@PLT
	movl	(%rax), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rax, %xmm0, %xmm0
	vmovss	-220(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vaddss	%xmm0, %xmm1, %xmm0
	vmovss	-216(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vucomiss	%xmm1, %xmm0
	jbe	.LBB97_26
# %bb.10:
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rax
	movq	%rax, %rdi
	vmovss	%xmm0, -224(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	-224(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vucomiss	4(%rax), %xmm0
	jbe	.LBB97_26
# %bb.11:
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	vmovss	%xmm0, -228(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	vmovss	%xmm0, -232(%rbp)       # 4-byte Spill
	callq	_ZN14ITransformable7getSizeEv@PLT
	movl	4(%rax), %ecx
	movl	%ecx, %eax
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rax, %xmm0, %xmm0
	vmovss	-232(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vaddss	%xmm0, %xmm1, %xmm0
	vmovss	-228(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vucomiss	%xmm1, %xmm0
	jbe	.LBB97_26
# %bb.12:
	movb	$0, -153(%rbp)
	movq	$0, -168(%rbp)
.LBB97_13:                              # =>This Inner Loop Header: Depth=1
	movq	-168(%rbp), %rax
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	movq	%rax, -240(%rbp)        # 8-byte Spill
	callq	_ZN5Plane14GetCollectionsEv
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	-240(%rbp), %rcx        # 8-byte Reload
	cmpq	%rax, %rcx
	jae	.LBB97_23
# %bb.14:                               #   in Loop: Header=BB97_13 Depth=1
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	callq	_ZN5Plane14GetCollectionsEv
	movq	-168(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	-176(%rbp), %rcx        # 8-byte Reload
	cmpq	616(%rcx), %rax
	jne	.LBB97_16
# %bb.15:                               #   in Loop: Header=BB97_13 Depth=1
	jmp	.LBB97_22
.LBB97_16:                              #   in Loop: Header=BB97_13 Depth=1
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	callq	_ZN5Plane14GetCollectionsEv
	movq	-168(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	movq	%rax, -248(%rbp)        # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	-248(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -16(%rbp)
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	callq	_ZN5Plane14GetCollectionsEv
	movq	-168(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	%rax, %rdi
	callq	_ZN14ITransformable7getSizeEv@PLT
	leaq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	vucomiss	-16(%rbp), %xmm0
	jbe	.LBB97_21
# %bb.17:                               #   in Loop: Header=BB97_13 Depth=1
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	(%rax), %xmm0, %xmm0
	vmovss	-16(%rbp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vaddss	-24(%rbp), %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB97_21
# %bb.18:                               #   in Loop: Header=BB97_13 Depth=1
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	vucomiss	-12(%rbp), %xmm0
	jbe	.LBB97_21
# %bb.19:                               #   in Loop: Header=BB97_13 Depth=1
	movq	-152(%rbp), %rax
                                        # implicit-def: $xmm0
	vcvtsi2ssl	4(%rax), %xmm0, %xmm0
	vmovss	-12(%rbp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vaddss	-20(%rbp), %xmm1, %xmm1
	vucomiss	%xmm0, %xmm1
	jbe	.LBB97_21
# %bb.20:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	616(%rax), %rdi
	movq	624(%rax), %rcx
	movq	%rcx, -256(%rbp)        # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	-176(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -264(%rbp)        # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	-264(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -40(%rbp)
	leaq	-40(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -32(%rbp)
	movq	-256(%rbp), %rdi        # 8-byte Reload
	leaq	-32(%rbp), %rsi
	callq	_ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE@PLT
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	callq	_ZN5Plane14GetCollectionsEv
	movq	-168(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	624(%rax), %rsi
	callq	_ZN10Collection8AddStackEP5Stack@PLT
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	movq	-168(%rbp), %rax
                                        # kill: def $ax killed $ax killed $rax
	movzwl	%ax, %esi
	callq	_ZN5Plane12UpdateBufferEt
	xorl	%esi, %esi
	movq	-176(%rbp), %rcx        # 8-byte Reload
	movq	616(%rcx), %rdi
	callq	_ZN10Collection9RemoveAllEb@PLT
	movq	-176(%rbp), %rcx        # 8-byte Reload
	addq	$1072, %rcx             # imm = 0x430
	movq	%rcx, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	subq	$1, %rax
	movq	-176(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	movl	$1, %edx
	callq	_ZN5Plane16DeleteCollectionEmb
	movb	$1, -153(%rbp)
	jmp	.LBB97_23
.LBB97_21:                              #   in Loop: Header=BB97_13 Depth=1
	jmp	.LBB97_22
.LBB97_22:                              #   in Loop: Header=BB97_13 Depth=1
	movq	-168(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -168(%rbp)
	jmp	.LBB97_13
.LBB97_23:
	testb	$1, -153(%rbp)
	jne	.LBB97_25
# %bb.24:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	616(%rax), %rdi
	addq	$632, %rax              # imm = 0x278
	movq	-176(%rbp), %rcx        # 8-byte Reload
	addq	$640, %rcx              # imm = 0x280
	movq	_ZN6Global13MousePositionE@GOTPCREL(%rip), %rdx
	movq	%rdi, -272(%rbp)        # 8-byte Spill
	movq	%rdx, %rdi
	movq	%rcx, %rsi
	movq	%rax, -280(%rbp)        # 8-byte Spill
	callq	_ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_
	movq	%rax, -88(%rbp)
	leaq	-80(%rbp), %rax
	leaq	-88(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -288(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2IiEERKNS0_IT_EE
	movq	-280(%rbp), %rdi        # 8-byte Reload
	movq	-288(%rbp), %rsi        # 8-byte Reload
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -72(%rbp)
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	leaq	-72(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -64(%rbp)
	movq	-176(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	leaq	-64(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -56(%rbp)
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	624(%rax), %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	leaq	-56(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -48(%rbp)
	leaq	-48(%rbp), %rsi
	movq	-272(%rbp), %rdi        # 8-byte Reload
	callq	_ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE@PLT
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	616(%rax), %rcx
	movq	%rcx, %rdi
	movq	%rcx, -296(%rbp)        # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	(%rax), %rax
	movq	%rax, -104(%rbp)
	leaq	-112(%rbp), %rax
	vmovss	.LCPI97_0(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movq	%rax, %rdi
	vmovss	%xmm0, -300(%rbp)       # 4-byte Spill
	vmovss	-300(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rax, -312(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-104(%rbp), %rdi
	movq	-312(%rbp), %rsi        # 8-byte Reload
	callq	_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -96(%rbp)
	movq	-296(%rbp), %rdi        # 8-byte Reload
	leaq	-96(%rbp), %rsi
	callq	_ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE@PLT
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	616(%rax), %rcx
	movq	616(%rax), %rdx
	movq	%rdx, %rdi
	movq	%rcx, -320(%rbp)        # 8-byte Spill
	callq	_ZN14ITransformable7getSizeEv@PLT
	movq	(%rax), %rax
	movq	%rax, -128(%rbp)
	leaq	-136(%rbp), %rdi
	movl	$100, %r8d
	movl	%r8d, %esi
	movl	%r8d, %edx
	callq	_ZN2sf7Vector2IjEC2Ejj
	leaq	-128(%rbp), %rdi
	leaq	-136(%rbp), %rsi
	callq	_ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_
	movq	%rax, -120(%rbp)
	movq	-320(%rbp), %rdi        # 8-byte Reload
	leaq	-120(%rbp), %rsi
	callq	_ZN14ITransformable7setSizeERKN2sf7Vector2IjEE@PLT
	vmovss	.LCPI97_0(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	624(%rax), %rcx
	movq	%rcx, %rdi
	vmovss	%xmm0, -324(%rbp)       # 4-byte Spill
	vmovss	-324(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	callq	_ZN2sf13Transformable11setPositionEff@PLT
	movq	-176(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	xorl	%edx, %edx
	subq	$1, %rax
	movq	-176(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN5Plane16DeleteCollectionEmb
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	movq	-176(%rbp), %rax        # 8-byte Reload
	movq	616(%rax), %rsi
	movl	$1, %edx
	callq	_ZN5Plane13AddCollectionEP10Collectionb
.LBB97_25:
	jmp	.LBB97_26
.LBB97_26:
	jmp	.LBB97_27
.LBB97_27:
	jmp	.LBB97_28
.LBB97_28:
	jmp	.LBB97_29
.LBB97_29:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movb	$0, 648(%rax)
	movq	$0, 616(%rax)
	movq	$0, 624(%rax)
	movq	%rax, %rdi
	callq	_ZN5Plane9ClearSnapEv
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB97_31
# %bb.30:
	addq	$336, %rsp              # imm = 0x150
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB97_31:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end97:
	.size	_ZN5Plane6UnDragERKN2sf7Vector2IiEE, .Lfunc_end97-_ZN5Plane6UnDragERKN2sf7Vector2IiEE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane13CalculateZoomEv # -- Begin function _ZN5Plane13CalculateZoomEv
	.p2align	4, 0x90
	.type	_ZN5Plane13CalculateZoomEv,@function
_ZN5Plane13CalculateZoomEv:             # @_ZN5Plane13CalculateZoomEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	_ZN6Global10WindowSizeE@GOTPCREL(%rip), %rcx
	movl	(%rcx), %edx
	movl	%edx, %esi
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rsi, %xmm0, %xmm0
	addq	$1476, %rax             # imm = 0x5C4
	movq	%rax, %rdi
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	vmovss	%xmm0, -36(%rbp)        # 4-byte Spill
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNK2sf4View7getSizeEv@PLT
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	vmovss	-36(%rbp), %xmm1        # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vdivss	%xmm0, %xmm1, %xmm0
	movq	-32(%rbp), %rax         # 8-byte Reload
	movl	4(%rax), %edx
	movl	%edx, %ecx
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rcx, %xmm1, %xmm1
	movq	-48(%rbp), %rdi         # 8-byte Reload
	vmovss	%xmm0, -52(%rbp)        # 4-byte Spill
	vmovss	%xmm1, -56(%rbp)        # 4-byte Spill
	callq	_ZNK2sf4View7getSizeEv@PLT
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	vmovss	-56(%rbp), %xmm1        # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vdivss	%xmm0, %xmm1, %xmm1
	leaq	-16(%rbp), %rdi
	vmovss	-52(%rbp), %xmm0        # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
	vmovsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	vmovaps	%xmm0, -80(%rbp)        # 16-byte Spill
	jne	.LBB98_2
# %bb.1:
	vmovaps	-80(%rbp), %xmm0        # 16-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB98_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end98:
	.size	_ZN5Plane13CalculateZoomEv, .Lfunc_end98-_ZN5Plane13CalculateZoomEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function _ZN5Plane15CalculateOffsetEv
.LCPI99_0:
	.long	1073741824              # float 2
	.text
	.globl	_ZN5Plane15CalculateOffsetEv
	.p2align	4, 0x90
	.type	_ZN5Plane15CalculateOffsetEv,@function
_ZN5Plane15CalculateOffsetEv:           # @_ZN5Plane15CalculateOffsetEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.13(%rip), %rsi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addq	$1476, %rcx             # imm = 0x5C4
	movq	%rcx, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	callq	_ZNK2sf4View9getCenterEv@PLT
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSolsEf@PLT
	leaq	.L.str.3(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNK2sf4View9getCenterEv@PLT
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSolsEf@PLT
	movq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GOTPCREL(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSolsEPFRSoS_E@PLT
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNK2sf4View9getCenterEv@PLT
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	movq	_ZN6Global10WindowSizeE@GOTPCREL(%rip), %rax
	movl	(%rax), %edx
	movl	%edx, %ecx
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rcx, %xmm1, %xmm1
	vmovss	.LCPI99_0(%rip), %xmm2  # xmm2 = mem[0],zero,zero,zero
	vdivss	%xmm2, %xmm1, %xmm1
	vsubss	%xmm1, %xmm0, %xmm0
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	vmovss	%xmm2, -92(%rbp)        # 4-byte Spill
	vmovss	%xmm0, -96(%rbp)        # 4-byte Spill
	callq	_ZN5Plane13CalculateZoomEv
	vmovlpd	%xmm0, -32(%rbp)
	vmovss	-32(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	-96(%rbp), %xmm1        # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vmulss	%xmm0, %xmm1, %xmm0
	movq	-64(%rbp), %rdi         # 8-byte Reload
	vmovss	%xmm0, -100(%rbp)       # 4-byte Spill
	callq	_ZNK2sf4View9getCenterEv@PLT
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	4(%rax), %edx
	movl	%edx, %ecx
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rcx, %xmm1, %xmm1
	vmovss	-92(%rbp), %xmm2        # 4-byte Reload
                                        # xmm2 = mem[0],zero,zero,zero
	vdivss	%xmm2, %xmm1, %xmm1
	vsubss	%xmm1, %xmm0, %xmm0
	movq	-48(%rbp), %rdi         # 8-byte Reload
	vmovss	%xmm0, -104(%rbp)       # 4-byte Spill
	callq	_ZN5Plane13CalculateZoomEv
	vmovlpd	%xmm0, -40(%rbp)
	vmovss	-36(%rbp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	-104(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vmulss	%xmm0, %xmm1, %xmm1
	leaq	-16(%rbp), %rdi
	vmovss	-100(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
	vmovsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	vmovaps	%xmm0, -128(%rbp)       # 16-byte Spill
	jne	.LBB99_2
# %bb.1:
	vmovaps	-128(%rbp), %xmm0       # 16-byte Reload
	addq	$128, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB99_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end99:
	.size	_ZN5Plane15CalculateOffsetEv, .Lfunc_end99-_ZN5Plane15CalculateOffsetEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf7Vector2IjEC2Ejj,"axG",@progbits,_ZN2sf7Vector2IjEC2Ejj,comdat
	.weak	_ZN2sf7Vector2IjEC2Ejj  # -- Begin function _ZN2sf7Vector2IjEC2Ejj
	.p2align	4, 0x90
	.type	_ZN2sf7Vector2IjEC2Ejj,@function
_ZN2sf7Vector2IjEC2Ejj:                 # @_ZN2sf7Vector2IjEC2Ejj
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movl	%edx, -16(%rbp)
	movq	-8(%rbp), %rax
	movl	-12(%rbp), %ecx
	movl	%ecx, (%rax)
	movl	-16(%rbp), %ecx
	movl	%ecx, 4(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end100:
	.size	_ZN2sf7Vector2IjEC2Ejj, .Lfunc_end100-_ZN2sf7Vector2IjEC2Ejj
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP5StackSaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIP5StackSaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv,@function
_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv:   # @_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end101:
	.size	_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv, .Lfunc_end101-_ZNKSt6vectorIP5StackSaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf7Vector2IjEC2Ev,"axG",@progbits,_ZN2sf7Vector2IjEC2Ev,comdat
	.weak	_ZN2sf7Vector2IjEC2Ev   # -- Begin function _ZN2sf7Vector2IjEC2Ev
	.p2align	4, 0x90
	.type	_ZN2sf7Vector2IjEC2Ev,@function
_ZN2sf7Vector2IjEC2Ev:                  # @_ZN2sf7Vector2IjEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movl	$0, (%rax)
	movl	$0, 4(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end102:
	.size	_ZN2sf7Vector2IjEC2Ev, .Lfunc_end102-_ZN2sf7Vector2IjEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP5StackSaIS1_EEixEm,"axG",@progbits,_ZNKSt6vectorIP5StackSaIS1_EEixEm,comdat
	.weak	_ZNKSt6vectorIP5StackSaIS1_EEixEm # -- Begin function _ZNKSt6vectorIP5StackSaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP5StackSaIS1_EEixEm,@function
_ZNKSt6vectorIP5StackSaIS1_EEixEm:      # @_ZNKSt6vectorIP5StackSaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end103:
	.size	_ZNKSt6vectorIP5StackSaIS1_EEixEm, .Lfunc_end103-_ZNKSt6vectorIP5StackSaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv,@function
_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv:   # @_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end104:
	.size	_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv, .Lfunc_end104-_ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP5BlockSaIS1_EEixEm,"axG",@progbits,_ZNKSt6vectorIP5BlockSaIS1_EEixEm,comdat
	.weak	_ZNKSt6vectorIP5BlockSaIS1_EEixEm # -- Begin function _ZNKSt6vectorIP5BlockSaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP5BlockSaIS1_EEixEm,@function
_ZNKSt6vectorIP5BlockSaIS1_EEixEm:      # @_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end105:
	.size	_ZNKSt6vectorIP5BlockSaIS1_EEixEm, .Lfunc_end105-_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_,"axG",@progbits,_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_,comdat
	.weak	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_ # -- Begin function _ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	.p2align	4, 0x90
	.type	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_,@function
_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_:  # @_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	movq	-8(%rbp), %rax
	vaddss	(%rax), %xmm0, %xmm0
	vmovss	%xmm0, (%rax)
	movq	-16(%rbp), %rax
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	movq	-8(%rbp), %rax
	vaddss	4(%rax), %xmm0, %xmm0
	vmovss	%xmm0, 4(%rax)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end106:
	.size	_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_, .Lfunc_end106-_ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.weak	_ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	4, 0x90
	.type	_ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	_ZN6Logger10m_logMutexE@GOTPCREL(%rip), %rax
	movq	%rdi, -8(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt5mutex4lockEv
	movq	_ZSt4cout@GOTPCREL(%rip), %rdi
	leaq	.L.str.15(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	-8(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@PLT
	movq	%rax, %rdi
	leaq	.L.str.16(%rip), %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
	movq	_ZN6Logger10m_logMutexE@GOTPCREL(%rip), %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSt5mutex6unlockEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end107:
	.size	_ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end107-_ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, %rax
	xorl	%ecx, %ecx
	movl	%ecx, %r8d
	movq	%rdi, %r9
	movq	%r9, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rdx
	movq	-16(%rbp), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rdx, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	movq	%r8, %rsi
	movq	-40(%rbp), %rdx         # 8-byte Reload
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc@PLT
	movq	%rax, %rdi
	callq	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@PLT
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end108:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_, .Lfunc_end108-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx119to_stringEm,"axG",@progbits,_ZNSt7__cxx119to_stringEm,comdat
	.weak	_ZNSt7__cxx119to_stringEm # -- Begin function _ZNSt7__cxx119to_stringEm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx119to_stringEm,@function
_ZNSt7__cxx119to_stringEm:              # @_ZNSt7__cxx119to_stringEm
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception16
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%rdi, %rax
	movq	%fs:40, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movb	$0, -33(%rbp)
	movq	-32(%rbp), %rcx
	movl	$10, %esi
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt8__detail14__to_chars_lenImEEjT_i
	movl	%eax, %eax
	movl	%eax, %esi
	leaq	-16(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rsi, -80(%rbp)         # 8-byte Spill
	movq	%rcx, -88(%rbp)         # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
.Ltmp424:
	xorl	%edx, %edx
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movq	-88(%rbp), %rcx         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EmcRKS3_@PLT
.Ltmp425:
	jmp	.LBB109_1
.LBB109_1:
	leaq	-16(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
.Ltmp427:
	xorl	%eax, %eax
	movl	%eax, %esi
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm@PLT
.Ltmp428:
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB109_2
.LBB109_2:
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@PLT
                                        # kill: def $eax killed $eax killed $rax
	movq	-32(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movl	%eax, %esi
	callq	_ZNSt8__detail18__to_chars_10_implImEEvPcjT_
	movb	$1, -33(%rbp)
	testb	$1, -33(%rbp)
	jne	.LBB109_6
	jmp	.LBB109_5
.LBB109_3:
.Ltmp426:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -48(%rbp)
	movl	%edx, -52(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB109_8
.LBB109_4:
.Ltmp429:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -48(%rbp)
	movl	%edx, -52(%rbp)
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	jmp	.LBB109_8
.LBB109_5:
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB109_6:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB109_9
# %bb.7:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB109_8:
	.cfi_def_cfa %rbp, 16
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB109_9:
	callq	__stack_chk_fail@PLT
.Lfunc_end109:
	.size	_ZNSt7__cxx119to_stringEm, .Lfunc_end109-_ZNSt7__cxx119to_stringEm
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table109:
.Lexception16:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Ltmp424-.Lfunc_begin16 # >> Call Site 1 <<
	.uleb128 .Ltmp425-.Ltmp424      #   Call between .Ltmp424 and .Ltmp425
	.uleb128 .Ltmp426-.Lfunc_begin16 #     jumps to .Ltmp426
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp427-.Lfunc_begin16 # >> Call Site 2 <<
	.uleb128 .Ltmp428-.Ltmp427      #   Call between .Ltmp427 and .Ltmp428
	.uleb128 .Ltmp429-.Lfunc_begin16 #     jumps to .Ltmp429
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp428-.Lfunc_begin16 # >> Call Site 3 <<
	.uleb128 .Lfunc_end109-.Ltmp428 #   Call between .Ltmp428 and .Lfunc_end109
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end16:
	.p2align	2
                                        # -- End function
	.text
	.globl	_ZN5Plane8UnSelectEv    # -- Begin function _ZN5Plane8UnSelectEv
	.p2align	4, 0x90
	.type	_ZN5Plane8UnSelectEv,@function
_ZN5Plane8UnSelectEv:                   # @_ZN5Plane8UnSelectEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movb	$0, 544(%rax)
	movq	$0, 552(%rax)
	movq	$0, 560(%rax)
	movq	$0, 568(%rax)
	movq	$0, 576(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end110:
	.size	_ZN5Plane8UnSelectEv, .Lfunc_end110-_ZN5Plane8UnSelectEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane9DragStackEP10CollectionP5Stackb # -- Begin function _ZN5Plane9DragStackEP10CollectionP5Stackb
	.p2align	4, 0x90
	.type	_ZN5Plane9DragStackEP10CollectionP5Stackb,@function
_ZN5Plane9DragStackEP10CollectionP5Stackb: # @_ZN5Plane9DragStackEP10CollectionP5Stackb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
                                        # kill: def $cl killed $cl killed $ecx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	andb	$1, %cl
	movb	%cl, -25(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, 624(%rax)
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jne	.LBB111_2
# %bb.1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	cmpq	$0, 616(%rax)
	je	.LBB111_3
.LBB111_2:
	jmp	.LBB111_4
.LBB111_3:
	movq	_ZN6Global13MousePositionE@GOTPCREL(%rip), %rax
	movb	-25(%rbp), %cl
	andb	$1, %cl
	movq	-40(%rbp), %rdx         # 8-byte Reload
	movb	%cl, 648(%rdx)
	movq	-16(%rbp), %rsi
	movq	%rsi, 616(%rdx)
	movq	-24(%rbp), %rsi
	movq	%rsi, 624(%rdx)
	movq	(%rax), %rax
	movq	%rax, 640(%rdx)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	(%rax), %rax
	movq	-40(%rbp), %rdx         # 8-byte Reload
	movq	%rax, 632(%rdx)
.LBB111_4:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end111:
	.size	_ZN5Plane9DragStackEP10CollectionP5Stackb, .Lfunc_end111-_ZN5Plane9DragStackEP10CollectionP5Stackb
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane13SelectContextEmmm # -- Begin function _ZN5Plane13SelectContextEmmm
	.p2align	4, 0x90
	.type	_ZN5Plane13SelectContextEmmm,@function
_ZN5Plane13SelectContextEmmm:           # @_ZN5Plane13SelectContextEmmm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rax
	movb	$1, 544(%rax)
	movq	%rax, %rcx
	addq	$1072, %rcx             # imm = 0x430
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 552(%rcx)
	addq	$1072, %rcx             # imm = 0x430
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-24(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 560(%rcx)
	addq	$1072, %rcx             # imm = 0x430
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-24(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 568(%rcx)
	movq	$0, 576(%rcx)
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end112:
	.size	_ZN5Plane13SelectContextEmmm, .Lfunc_end112-_ZN5Plane13SelectContextEmmm
	.cfi_endproc
                                        # -- End function
	.globl	_ZThn192_N5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE # -- Begin function _ZThn192_N5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE
	.p2align	4, 0x90
	.type	_ZThn192_N5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE,@function
_ZThn192_N5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE: # @_ZThn192_N5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
                                        # kill: def $sil killed $sil killed $esi
	movq	%rdi, -8(%rbp)
	andb	$1, %sil
	movb	%sil, -9(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rax
	addq	$-192, %rax
	movb	-9(%rbp), %sil
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movzbl	%sil, %r8d
	andl	$1, %r8d
	movq	%rax, %rdi
	movl	%r8d, %esi
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	jmp	_ZN5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE # TAILCALL
.Lfunc_end113:
	.size	_ZThn192_N5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE, .Lfunc_end113-_ZThn192_N5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane6renderERN2sf12RenderWindowE # -- Begin function _ZN5Plane6renderERN2sf12RenderWindowE
	.p2align	4, 0x90
	.type	_ZN5Plane6renderERN2sf12RenderWindowE,@function
_ZN5Plane6renderERN2sf12RenderWindowE:  # @_ZN5Plane6renderERN2sf12RenderWindowE
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception17
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$256, %rsp              # imm = 0x100
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -176(%rbp)
	movq	%rsi, -184(%rbp)
	movq	-176(%rbp), %rax
	movq	%rax, %rcx
	addq	$1072, %rcx             # imm = 0x430
	movq	%rcx, %rdi
	movq	%rax, -216(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
                                        # kill: def $ax killed $ax killed $rax
	movw	%ax, -186(%rbp)
	movzwl	-186(%rbp), %edx
	cmpl	$0, %edx
	jne	.LBB114_2
# %bb.1:
	jmp	.LBB114_19
.LBB114_2:
	movq	-216(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB114_4
# %bb.3:
	movq	-216(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane18DraggingCollectionEv
	testb	$1, %al
	jne	.LBB114_4
	jmp	.LBB114_5
.LBB114_4:
	movw	-186(%rbp), %ax
	addw	$-1, %ax
	movw	%ax, -186(%rbp)
.LBB114_5:
	movq	-184(%rbp), %rax
	addq	$48, %rax
	movq	-216(%rbp), %rcx        # 8-byte Reload
	addq	$1476, %rcx             # imm = 0x5C4
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN2sf12RenderTarget7setViewERKNS_4ViewE@PLT
	movw	$0, -188(%rbp)
.LBB114_6:                              # =>This Inner Loop Header: Depth=1
	movzwl	-188(%rbp), %eax
	movzwl	-186(%rbp), %ecx
	cmpl	%ecx, %eax
	jge	.LBB114_18
# %bb.7:                                #   in Loop: Header=BB114_6 Depth=1
	movq	-216(%rbp), %rax        # 8-byte Reload
	addq	$1072, %rax             # imm = 0x430
	movzwl	-188(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection10GetEnabledEv@PLT
	testb	$1, %al
	jne	.LBB114_9
# %bb.8:                                #   in Loop: Header=BB114_6 Depth=1
	jmp	.LBB114_17
.LBB114_9:                              #   in Loop: Header=BB114_6 Depth=1
	leaq	-112(%rbp), %rdi
	callq	_ZN2sf12RenderStatesC1Ev@PLT
	movq	-216(%rbp), %rax        # 8-byte Reload
	addq	$248, %rax
	movzwl	-188(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm
	leaq	-112(%rbp), %rdx
	addq	$24, %rdx
	movq	%rdx, %rdi
	movq	%rax, %rsi
	movl	$64, %edx
	callq	memcpy@PLT
	movq	-216(%rbp), %rax        # 8-byte Reload
	addq	$320, %rax              # imm = 0x140
	movzwl	-188(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIbSaIbEEixEm
	movq	%rax, -160(%rbp)
	movq	%rdx, -152(%rbp)
	leaq	-160(%rbp), %rdi
	callq	_ZNKSt14_Bit_referencecvbEv
	testb	$1, %al
	jne	.LBB114_10
	jmp	.LBB114_16
.LBB114_10:                             #   in Loop: Header=BB114_6 Depth=1
	movq	-216(%rbp), %rax        # 8-byte Reload
	addq	$360, %rax              # imm = 0x168
	leaq	-168(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, -224(%rbp)        # 8-byte Spill
	movq	%rcx, -232(%rbp)        # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
.Ltmp430:
	leaq	.L.str.8(%rip), %rsi
	leaq	-144(%rbp), %rdi
	movq	-232(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
.Ltmp431:
	jmp	.LBB114_11
.LBB114_11:                             #   in Loop: Header=BB114_6 Depth=1
	movq	-216(%rbp), %rax        # 8-byte Reload
	addq	$296, %rax              # imm = 0x128
	movzwl	-188(%rbp), %ecx
	movl	%ecx, %esi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm
.Ltmp433:
	leaq	-144(%rbp), %rsi
	movq	-224(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN2sf6Shader10setUniformERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7TextureE@PLT
.Ltmp434:
	jmp	.LBB114_12
.LBB114_12:                             #   in Loop: Header=BB114_6 Depth=1
	leaq	-144(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-168(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB114_16
.LBB114_13:
.Ltmp432:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -200(%rbp)
	movl	%edx, -204(%rbp)
	jmp	.LBB114_15
.LBB114_14:
.Ltmp435:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -200(%rbp)
	movl	%edx, -204(%rbp)
	leaq	-144(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB114_15:
	leaq	-168(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB114_21
.LBB114_16:                             #   in Loop: Header=BB114_6 Depth=1
	movq	-216(%rbp), %rax        # 8-byte Reload
	addq	$360, %rax              # imm = 0x168
	movq	%rax, -16(%rbp)
	movq	-184(%rbp), %rax
	addq	$48, %rax
	movq	-216(%rbp), %rcx        # 8-byte Reload
	addq	$224, %rcx
	movzwl	-188(%rbp), %edx
	movl	%edx, %esi
	movq	%rcx, %rdi
	movq	%rax, -240(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm
	movq	-240(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	leaq	-112(%rbp), %rdx
	callq	_ZN2sf12RenderTarget4drawERKNS_12VertexBufferERKNS_12RenderStatesE@PLT
.LBB114_17:                             #   in Loop: Header=BB114_6 Depth=1
	movw	-188(%rbp), %ax
	addw	$1, %ax
	movw	%ax, -188(%rbp)
	jmp	.LBB114_6
.LBB114_18:
	movq	-184(%rbp), %rax
	addq	$48, %rax
	movq	-184(%rbp), %rcx
	addq	$48, %rcx
	movq	%rcx, %rdi
	movq	%rax, -248(%rbp)        # 8-byte Spill
	callq	_ZNK2sf12RenderTarget14getDefaultViewEv@PLT
	movq	-248(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf12RenderTarget7setViewERKNS_4ViewE@PLT
	movq	_ZN2sf12RenderStates7DefaultE@GOTPCREL(%rip), %rdx
	movq	-184(%rbp), %rax
	addq	$48, %rax
	movq	-216(%rbp), %rcx        # 8-byte Reload
	addq	$1104, %rcx             # imm = 0x450
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@PLT
.LBB114_19:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB114_22
# %bb.20:
	addq	$256, %rsp              # imm = 0x100
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB114_21:
	.cfi_def_cfa %rbp, 16
	movq	-200(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB114_22:
	callq	__stack_chk_fail@PLT
.Lfunc_end114:
	.size	_ZN5Plane6renderERN2sf12RenderWindowE, .Lfunc_end114-_ZN5Plane6renderERN2sf12RenderWindowE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table114:
.Lexception17:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Lfunc_begin17-.Lfunc_begin17 # >> Call Site 1 <<
	.uleb128 .Ltmp430-.Lfunc_begin17 #   Call between .Lfunc_begin17 and .Ltmp430
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp430-.Lfunc_begin17 # >> Call Site 2 <<
	.uleb128 .Ltmp431-.Ltmp430      #   Call between .Ltmp430 and .Ltmp431
	.uleb128 .Ltmp432-.Lfunc_begin17 #     jumps to .Ltmp432
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp433-.Lfunc_begin17 # >> Call Site 3 <<
	.uleb128 .Ltmp434-.Ltmp433      #   Call between .Ltmp433 and .Ltmp434
	.uleb128 .Ltmp435-.Lfunc_begin17 #     jumps to .Ltmp435
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp434-.Lfunc_begin17 # >> Call Site 4 <<
	.uleb128 .Lfunc_end114-.Ltmp434 #   Call between .Ltmp434 and .Lfunc_end114
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end17:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEEixEm,"axG",@progbits,_ZNSt6vectorIbSaIbEEixEm,comdat
	.weak	_ZNSt6vectorIbSaIbEEixEm # -- Begin function _ZNSt6vectorIbSaIbEEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEEixEm,@function
_ZNSt6vectorIbSaIbEEixEm:               # @_ZNSt6vectorIbSaIbEEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movq	%rsi, -56(%rbp)
	movq	-48(%rbp), %rax
	movq	(%rax), %rax
	movq	-56(%rbp), %rcx
	movq	%rcx, %rdx
	shrq	$6, %rdx
	leaq	(%rax,%rdx,8), %rsi
                                        # kill: def $ecx killed $ecx killed $rcx
	andl	$63, %ecx
	leaq	-24(%rbp), %rax
	movq	%rax, %rdi
	movl	%ecx, %edx
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt13_Bit_iteratorC2EPmj
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt13_Bit_iteratordeEv
	movq	%rax, -40(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-40(%rbp), %rax
	movq	-32(%rbp), %rdx
	movq	%fs:40, %rsi
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rsi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	jne	.LBB115_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	-80(%rbp), %rdx         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB115_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end115:
	.size	_ZNSt6vectorIbSaIbEEixEm, .Lfunc_end115-_ZNSt6vectorIbSaIbEEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt14_Bit_referencecvbEv,"axG",@progbits,_ZNKSt14_Bit_referencecvbEv,comdat
	.weak	_ZNKSt14_Bit_referencecvbEv # -- Begin function _ZNKSt14_Bit_referencecvbEv
	.p2align	4, 0x90
	.type	_ZNKSt14_Bit_referencecvbEv,@function
_ZNKSt14_Bit_referencecvbEv:            # @_ZNKSt14_Bit_referencecvbEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	(%rcx), %rcx
	andq	8(%rax), %rcx
	cmpq	$0, %rcx
	setne	%dl
	xorb	$-1, %dl
	xorb	$-1, %dl
	andb	$1, %dl
	movzbl	%dl, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end116:
	.size	_ZNKSt14_Bit_referencecvbEv, .Lfunc_end116-_ZNKSt14_Bit_referencecvbEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm: # @_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	imulq	$40, -16(%rbp), %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end117:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm, .Lfunc_end117-_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$5, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end118:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm, .Lfunc_end118-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function _ZN5Plane10snapRenderERN2sf12RenderWindowE
.LCPI119_0:
	.long	1073741824              # float 2
	.text
	.globl	_ZN5Plane10snapRenderERN2sf12RenderWindowE
	.p2align	4, 0x90
	.type	_ZN5Plane10snapRenderERN2sf12RenderWindowE,@function
_ZN5Plane10snapRenderERN2sf12RenderWindowE: # @_ZN5Plane10snapRenderERN2sf12RenderWindowE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -56(%rbp)
	movq	%rsi, -64(%rbp)
	movq	-56(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZN5Plane6IsSnapEv
	testb	$1, %al
	jne	.LBB119_1
	jmp	.LBB119_4
.LBB119_1:
	movq	-80(%rbp), %rax         # 8-byte Reload
	addq	$664, %rax              # imm = 0x298
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	_ZN5Plane12PrimaryPlaneE(%rip), %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZN5Plane14GetCollectionsEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	1000(%rcx), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -32(%rbp)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	1016(%rax), %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	leaq	-32(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -24(%rbp)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	1008(%rax), %rcx
	movq	_ZN6Global11BlockHeightE@GOTPCREL(%rip), %rdx
	movzbl	(%rdx), %r8d
	movl	%r8d, %edx
	imulq	%rdx, %rcx
	movq	%rcx, %rdx
	shrq	%rdx
	movl	%ecx, %r8d
	andl	$1, %r8d
	movl	%r8d, %esi
	orq	%rdx, %rsi
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rsi, %xmm0, %xmm0
	vaddss	%xmm0, %xmm0, %xmm0
                                        # implicit-def: $xmm1
	vcvtsi2ss	%rcx, %xmm1, %xmm1
	testq	%rcx, %rcx
	vmovss	%xmm1, -100(%rbp)       # 4-byte Spill
	vmovss	%xmm0, -104(%rbp)       # 4-byte Spill
	js	.LBB119_8
# %bb.7:
	vmovss	-100(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, -104(%rbp)       # 4-byte Spill
.LBB119_8:
	vmovss	-104(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	leaq	-40(%rbp), %rax
	vxorps	%xmm1, %xmm1, %xmm1
	movq	%rax, %rdi
	vmovss	%xmm0, -108(%rbp)       # 4-byte Spill
	vmovaps	%xmm1, %xmm0
	vmovss	-108(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-24(%rbp), %rdi
	movq	-120(%rbp), %rsi        # 8-byte Reload
	callq	_ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	vmovlpd	%xmm0, -16(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	leaq	-16(%rbp), %rsi
	callq	_ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE@PLT
	movq	$0, -72(%rbp)
	movq	-80(%rbp), %rax         # 8-byte Reload
	cmpq	$0, 1008(%rax)
	jbe	.LBB119_3
# %bb.2:
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	1008(%rax), %rcx
	subq	$1, %rcx
	movq	%rcx, -72(%rbp)
.LBB119_3:
	vmovss	.LCPI119_0(%rip), %xmm1 # xmm1 = mem[0],zero,zero,zero
	movq	-80(%rbp), %rax         # 8-byte Reload
	addq	$656, %rax              # imm = 0x290
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	1016(%rcx), %rdi
	vmovss	%xmm1, -124(%rbp)       # 4-byte Spill
	movq	%rax, -136(%rbp)        # 8-byte Spill
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-72(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Block8GetWidthEv@PLT
	movl	%eax, %eax
	movl	%eax, %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rcx, %xmm0, %xmm0
	leaq	-48(%rbp), %rdi
	vmovss	-124(%rbp), %xmm1       # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	callq	_ZN2sf7Vector2IfEC2Eff
	movq	-136(%rbp), %rdi        # 8-byte Reload
	leaq	-48(%rbp), %rsi
	callq	_ZN2sf14RectangleShape7setSizeERKNS_7Vector2IfEE@PLT
	movq	_ZN2sf12RenderStates7DefaultE@GOTPCREL(%rip), %rdx
	movq	-64(%rbp), %rcx
	addq	$48, %rcx
	movq	-80(%rbp), %rsi         # 8-byte Reload
	addq	$656, %rsi              # imm = 0x290
	movq	%rcx, %rdi
	callq	_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE@PLT
.LBB119_4:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB119_6
# %bb.5:
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB119_6:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end119:
	.size	_ZN5Plane10snapRenderERN2sf12RenderWindowE, .Lfunc_end119-_ZN5Plane10snapRenderERN2sf12RenderWindowE
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane6IsSnapEv      # -- Begin function _ZN5Plane6IsSnapEv
	.p2align	4, 0x90
	.type	_ZN5Plane6IsSnapEv,@function
_ZN5Plane6IsSnapEv:                     # @_ZN5Plane6IsSnapEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movb	1024(%rax), %cl
	andb	$1, %cl
	movzbl	%cl, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end120:
	.size	_ZN5Plane6IsSnapEv, .Lfunc_end120-_ZN5Plane6IsSnapEv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function _ZN5Plane10postRenderERN2sf12RenderWindowE
.LCPI121_0:
	.long	3212836864              # float -1
	.text
	.globl	_ZN5Plane10postRenderERN2sf12RenderWindowE
	.p2align	4, 0x90
	.type	_ZN5Plane10postRenderERN2sf12RenderWindowE,@function
_ZN5Plane10postRenderERN2sf12RenderWindowE: # @_ZN5Plane10postRenderERN2sf12RenderWindowE
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception18
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$288, %rsp              # imm = 0x120
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -176(%rbp)
	movq	%rsi, -184(%rbp)
	movq	-176(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -208(%rbp)        # 8-byte Spill
	callq	_ZN5Plane18DraggingCollectionEv
	testb	$1, %al
	jne	.LBB121_1
	jmp	.LBB121_2
.LBB121_1:
	jmp	.LBB121_12
.LBB121_2:
	movq	-208(%rbp), %rdi        # 8-byte Reload
	callq	_ZN5Plane13DraggingStackEv
	testb	$1, %al
	jne	.LBB121_3
	jmp	.LBB121_11
.LBB121_3:
	leaq	-112(%rbp), %rdi
	callq	_ZN2sf12RenderStatesC1Ev@PLT
	movq	-208(%rbp), %rax        # 8-byte Reload
	addq	$248, %rax
	movq	-208(%rbp), %rcx        # 8-byte Reload
	addq	$248, %rcx
	movq	%rcx, %rdi
	movq	%rax, -216(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	subq	$1, %rax
	movq	-216(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EEixEm
	leaq	-112(%rbp), %rcx
	movq	%rcx, %rdx
	addq	$24, %rdx
	movq	%rdx, %rdi
	movq	%rax, %rsi
	movl	$64, %edx
	movq	%rcx, -224(%rbp)        # 8-byte Spill
	callq	memcpy@PLT
	movq	-224(%rbp), %rax        # 8-byte Reload
	addq	$24, %rax
	movq	-208(%rbp), %rcx        # 8-byte Reload
	movq	624(%rcx), %rdx
	movq	%rdx, %rdi
	movq	%rax, -232(%rbp)        # 8-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	.LCPI121_0(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
	vmulss	(%rax), %xmm0, %xmm0
	movq	-208(%rbp), %rax        # 8-byte Reload
	movq	624(%rax), %rcx
	movq	%rcx, %rdi
	vmovss	%xmm0, -236(%rbp)       # 4-byte Spill
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	vmovss	.LCPI121_0(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
	vmulss	4(%rax), %xmm0, %xmm1
	movq	-232(%rbp), %rdi        # 8-byte Reload
	vmovss	-236(%rbp), %xmm0       # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	callq	_ZN2sf9Transform9translateEff@PLT
	movq	-208(%rbp), %rcx        # 8-byte Reload
	addq	$320, %rcx              # imm = 0x140
	movq	-208(%rbp), %rdx        # 8-byte Reload
	addq	$248, %rdx
	movq	%rdx, %rdi
	movq	%rax, -248(%rbp)        # 8-byte Spill
	movq	%rcx, -256(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	subq	$1, %rax
	movq	-256(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIbSaIbEEixEm
	movq	%rax, -160(%rbp)
	movq	%rdx, -152(%rbp)
	leaq	-160(%rbp), %rdi
	callq	_ZNKSt14_Bit_referencecvbEv
	testb	$1, %al
	jne	.LBB121_4
	jmp	.LBB121_10
.LBB121_4:
	movq	-208(%rbp), %rax        # 8-byte Reload
	addq	$360, %rax              # imm = 0x168
	leaq	-168(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, -264(%rbp)        # 8-byte Spill
	movq	%rcx, -272(%rbp)        # 8-byte Spill
	callq	_ZNSaIcEC1Ev@PLT
.Ltmp436:
	leaq	.L.str.8(%rip), %rsi
	leaq	-144(%rbp), %rdi
	movq	-272(%rbp), %rdx        # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@PLT
.Ltmp437:
	jmp	.LBB121_5
.LBB121_5:
	movq	-208(%rbp), %rax        # 8-byte Reload
	addq	$296, %rax              # imm = 0x128
	movq	-208(%rbp), %rcx        # 8-byte Reload
	addq	$248, %rcx
	movq	%rcx, %rdi
	movq	%rax, -280(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	decq	%rax
	movq	-280(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EEixEm
.Ltmp439:
	leaq	-144(%rbp), %rsi
	movq	-264(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN2sf6Shader10setUniformERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7TextureE@PLT
.Ltmp440:
	jmp	.LBB121_6
.LBB121_6:
	leaq	-144(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
	leaq	-168(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB121_10
.LBB121_7:
.Ltmp438:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -192(%rbp)
	movl	%edx, -196(%rbp)
	jmp	.LBB121_9
.LBB121_8:
.Ltmp441:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -192(%rbp)
	movl	%edx, -196(%rbp)
	leaq	-144(%rbp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@PLT
.LBB121_9:
	leaq	-168(%rbp), %rdi
	callq	_ZNSaIcED1Ev@PLT
	jmp	.LBB121_14
.LBB121_10:
	movq	-208(%rbp), %rax        # 8-byte Reload
	addq	$360, %rax              # imm = 0x168
	movq	%rax, -16(%rbp)
	movq	-184(%rbp), %rax
	addq	$48, %rax
	movq	-208(%rbp), %rcx        # 8-byte Reload
	addq	$224, %rcx
	movq	%rcx, %rdi
	movq	%rax, -288(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv
	movq	-288(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	leaq	-112(%rbp), %rdx
	callq	_ZN2sf12RenderTarget4drawERKNS_12VertexBufferERKNS_12RenderStatesE@PLT
.LBB121_11:
	jmp	.LBB121_12
.LBB121_12:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB121_15
# %bb.13:
	addq	$288, %rsp              # imm = 0x120
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB121_14:
	.cfi_def_cfa %rbp, 16
	movq	-192(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB121_15:
	callq	__stack_chk_fail@PLT
.Lfunc_end121:
	.size	_ZN5Plane10postRenderERN2sf12RenderWindowE, .Lfunc_end121-_ZN5Plane10postRenderERN2sf12RenderWindowE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table121:
.Lexception18:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Lfunc_begin18-.Lfunc_begin18 # >> Call Site 1 <<
	.uleb128 .Ltmp436-.Lfunc_begin18 #   Call between .Lfunc_begin18 and .Ltmp436
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp436-.Lfunc_begin18 # >> Call Site 2 <<
	.uleb128 .Ltmp437-.Ltmp436      #   Call between .Ltmp436 and .Ltmp437
	.uleb128 .Ltmp438-.Lfunc_begin18 #     jumps to .Ltmp438
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp439-.Lfunc_begin18 # >> Call Site 3 <<
	.uleb128 .Ltmp440-.Ltmp439      #   Call between .Ltmp439 and .Ltmp440
	.uleb128 .Ltmp441-.Lfunc_begin18 #     jumps to .Ltmp441
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp440-.Lfunc_begin18 # >> Call Site 4 <<
	.uleb128 .Lfunc_end121-.Ltmp440 #   Call between .Ltmp440 and .Lfunc_end121
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end18:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl
	movq	%rax, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jne	.LBB122_2
# %bb.1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB122_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end122:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv, .Lfunc_end122-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf4RectIiEC2Ev,"axG",@progbits,_ZN2sf4RectIiEC2Ev,comdat
	.weak	_ZN2sf4RectIiEC2Ev      # -- Begin function _ZN2sf4RectIiEC2Ev
	.p2align	4, 0x90
	.type	_ZN2sf4RectIiEC2Ev,@function
_ZN2sf4RectIiEC2Ev:                     # @_ZN2sf4RectIiEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movl	$0, (%rax)
	movl	$0, 4(%rax)
	movl	$0, 8(%rax)
	movl	$0, 12(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end123:
	.size	_ZN2sf4RectIiEC2Ev, .Lfunc_end123-_ZN2sf4RectIiEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function _ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE
.LCPI124_0:
	.long	1107820544              # float 34
.LCPI124_1:
	.long	1082130432              # float 4
.LCPI124_2:
	.long	1119617024              # float 94
	.text
	.globl	_ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE
	.p2align	4, 0x90
	.type	_ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE,@function
_ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE: # @_ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	andq	$-32, %rsp
	subq	$1184, %rsp             # imm = 0x4A0
	leaq	.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.textureCoords(%rip), %rax
	vmovss	.LCPI124_0(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
	vmovss	.LCPI124_1(%rip), %xmm1 # xmm1 = mem[0],zero,zero,zero
	vmovss	.LCPI124_2(%rip), %xmm2 # xmm2 = mem[0],zero,zero,zero
	movq	%fs:40, %rcx
	movq	%rcx, 1160(%rsp)
	movq	%rdx, 152(%rsp)
	movq	%rdi, 144(%rsp)
	movq	%rsi, 136(%rsp)
	movq	144(%rsp), %rdi
	movl	$0, 912(%rsp)
	movl	$0, 916(%rsp)
	movl	$1119617024, 920(%rsp)  # imm = 0x42BC0000
	movl	$0, 924(%rsp)
	movl	$1120141312, 928(%rsp)  # imm = 0x42C40000
	movl	$0, 932(%rsp)
	movl	$1120141312, 936(%rsp)  # imm = 0x42C40000
	movl	$1106247680, 940(%rsp)  # imm = 0x41F00000
	movl	152(%rsp), %r8d
	addl	$4, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 944(%rsp)
	movl	$1106247680, 948(%rsp)  # imm = 0x41F00000
	movl	152(%rsp), %r8d
	addl	$8, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 952(%rsp)
	movl	$1106247680, 956(%rsp)  # imm = 0x41F00000
	movl	152(%rsp), %r8d
	addl	$8, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 960(%rsp)
	movl	156(%rsp), %r8d
	addl	$34, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 964(%rsp)
	movl	152(%rsp), %r8d
	addl	$8, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 968(%rsp)
	movl	156(%rsp), %r8d
	addl	$38, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 972(%rsp)
	movl	$1082130432, 976(%rsp)  # imm = 0x40800000
	movl	156(%rsp), %r8d
	addl	$38, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 980(%rsp)
	movl	$0, 984(%rsp)
	movl	156(%rsp), %r8d
	addl	$38, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 988(%rsp)
	movl	$0, 992(%rsp)
	movl	$1082130432, 996(%rsp)  # imm = 0x40800000
	movl	$1082130432, 1000(%rsp) # imm = 0x40800000
	movl	$1082130432, 1004(%rsp) # imm = 0x40800000
	movl	$1119617024, 1008(%rsp) # imm = 0x42BC0000
	movl	$1082130432, 1012(%rsp) # imm = 0x40800000
	movl	$1119617024, 1016(%rsp) # imm = 0x42BC0000
	movl	$1106247680, 1020(%rsp) # imm = 0x41F00000
	movl	$1119617024, 1024(%rsp) # imm = 0x42BC0000
	movl	$1107820544, 1028(%rsp) # imm = 0x42080000
	movl	152(%rsp), %r8d
	addl	$4, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 1032(%rsp)
	movl	$1107820544, 1036(%rsp) # imm = 0x42080000
	movl	152(%rsp), %r8d
	addl	$4, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 1040(%rsp)
	movl	156(%rsp), %r8d
	addl	$34, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 1044(%rsp)
	movl	$1082130432, 1048(%rsp) # imm = 0x40800000
	movl	156(%rsp), %r8d
	addl	$34, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 1052(%rsp)
	movl	$1082130432, 1056(%rsp) # imm = 0x40800000
	movl	$1107820544, 1060(%rsp) # imm = 0x42080000
	movl	$1082130432, 1064(%rsp) # imm = 0x40800000
	movl	$1082130432, 1068(%rsp) # imm = 0x40800000
	movl	$1119617024, 1072(%rsp) # imm = 0x42BC0000
	movl	$1082130432, 1076(%rsp) # imm = 0x40800000
	movl	$1119617024, 1080(%rsp) # imm = 0x42BC0000
	movl	$1107820544, 1084(%rsp) # imm = 0x42080000
	movl	$1082130432, 1088(%rsp) # imm = 0x40800000
	movl	$1107820544, 1092(%rsp) # imm = 0x42080000
	movl	$1082130432, 1096(%rsp) # imm = 0x40800000
	movl	$1107820544, 1100(%rsp) # imm = 0x42080000
	movl	152(%rsp), %r8d
	addl	$4, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 1104(%rsp)
	movl	$1107820544, 1108(%rsp) # imm = 0x42080000
	movl	152(%rsp), %r8d
	addl	$4, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 1112(%rsp)
	movl	156(%rsp), %r8d
	addl	$34, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 1116(%rsp)
	movl	$1082130432, 1120(%rsp) # imm = 0x40800000
	movl	156(%rsp), %r8d
	addl	$34, %r8d
	movl	%r8d, %ecx
                                        # implicit-def: $xmm3
	vcvtsi2ss	%rcx, %xmm3, %xmm3
	vmovss	%xmm3, 1124(%rsp)
	vmovss	%xmm1, 1128(%rsp)
	vmovss	%xmm1, 1132(%rsp)
	vmovss	%xmm2, 1136(%rsp)
	vmovss	%xmm1, 1140(%rsp)
	vmovss	%xmm2, 1144(%rsp)
	vmovss	%xmm0, 1148(%rsp)
	vmovss	%xmm1, 1152(%rsp)
	vmovss	%xmm0, 1156(%rsp)
	leaq	816(%rsp), %rcx
	movq	%rdi, 16(%rsp)          # 8-byte Spill
	movq	%rcx, %rdi
	leaq	.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.colors(%rip), %rsi
	movl	$93, %edx
	movq	%rax, 8(%rsp)           # 8-byte Spill
	callq	memcpy@PLT
	leaq	560(%rsp), %rax
	movq	%rax, %rdi
	movq	8(%rsp), %rsi           # 8-byte Reload
	movl	$248, %edx
	callq	memcpy@PLT
	leaq	480(%rsp), %rax
	movq	%rax, %rdi
	leaq	.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.indices(%rip), %rsi
	movl	$66, %edx
	callq	memcpy@PLT
	callq	_ZN10Intrinsics4AVX2Ev@PLT
	testb	$1, %al
	jne	.LBB124_1
	jmp	.LBB124_6
.LBB124_1:
	movl	$1082130432, 220(%rsp)  # imm = 0x40800000
	movl	$1107820544, 216(%rsp)  # imm = 0x42080000
	movl	$1082130432, 212(%rsp)  # imm = 0x40800000
	movl	$1107820544, 208(%rsp)  # imm = 0x42080000
	movl	$1082130432, 204(%rsp)  # imm = 0x40800000
	movl	$1107820544, 200(%rsp)  # imm = 0x42080000
	movl	$1082130432, 196(%rsp)  # imm = 0x40800000
	movl	$1107820544, 192(%rsp)  # imm = 0x42080000
	vmovss	212(%rsp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	208(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vinsertps	$16, %xmm0, %xmm1, %xmm0 # xmm0 = xmm1[0],xmm0[0],xmm1[2,3]
	vmovss	216(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vinsertps	$32, %xmm1, %xmm0, %xmm0 # xmm0 = xmm0[0,1],xmm1[0],xmm0[3]
	vmovss	220(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vinsertps	$48, %xmm1, %xmm0, %xmm0 # xmm0 = xmm0[0,1,2],xmm1[0]
	vmovss	196(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vmovss	192(%rsp), %xmm2        # xmm2 = mem[0],zero,zero,zero
	vinsertps	$16, %xmm1, %xmm2, %xmm1 # xmm1 = xmm2[0],xmm1[0],xmm2[2,3]
	vmovss	200(%rsp), %xmm2        # xmm2 = mem[0],zero,zero,zero
	vinsertps	$32, %xmm2, %xmm1, %xmm1 # xmm1 = xmm1[0,1],xmm2[0],xmm1[3]
	vmovss	204(%rsp), %xmm2        # xmm2 = mem[0],zero,zero,zero
	vinsertps	$48, %xmm2, %xmm1, %xmm1 # xmm1 = xmm1[0,1,2],xmm2[0]
                                        # implicit-def: $ymm3
	vmovaps	%xmm1, %xmm3
	vinsertf128	$1, %xmm0, %ymm3, %ymm3
	vmovaps	%ymm3, 160(%rsp)
	vmovaps	160(%rsp), %ymm3
	vmovaps	%ymm3, 64(%rsp)
	movb	$0, 31(%rsp)
.LBB124_2:                              # =>This Inner Loop Header: Depth=1
	movzbl	31(%rsp), %eax
	cmpl	$7, %eax
	jge	.LBB124_5
# %bb.3:                                #   in Loop: Header=BB124_2 Depth=1
	movzbl	31(%rsp), %eax
	movl	%eax, %ecx
	shll	$3, %ecx
	movl	%ecx, %edx
	vmovss	912(%rsp,%rdx,4), %xmm0 # xmm0 = mem[0],zero,zero,zero
                                        # implicit-def: $rdx
	movl	%eax, %edx
	leal	1(,%rdx,8), %eax
	movl	%eax, %esi
	vmovss	912(%rsp,%rsi,4), %xmm1 # xmm1 = mem[0],zero,zero,zero
	leal	2(,%rdx,8), %eax
	movl	%eax, %esi
	vmovss	912(%rsp,%rsi,4), %xmm2 # xmm2 = mem[0],zero,zero,zero
	leal	3(,%rdx,8), %eax
	movl	%eax, %esi
	vmovss	912(%rsp,%rsi,4), %xmm3 # xmm3 = mem[0],zero,zero,zero
	leal	4(,%rdx,8), %eax
	movl	%eax, %esi
	vmovss	912(%rsp,%rsi,4), %xmm4 # xmm4 = mem[0],zero,zero,zero
	leal	5(,%rdx,8), %eax
	movl	%eax, %esi
	vmovss	912(%rsp,%rsi,4), %xmm5 # xmm5 = mem[0],zero,zero,zero
	leal	6(,%rdx,8), %eax
	movl	%eax, %esi
	vmovss	912(%rsp,%rsi,4), %xmm6 # xmm6 = mem[0],zero,zero,zero
	leal	7(,%rdx,8), %eax
	movl	%eax, %edx
	vmovss	912(%rsp,%rdx,4), %xmm7 # xmm7 = mem[0],zero,zero,zero
	vmovss	%xmm0, 284(%rsp)
	vmovss	%xmm1, 280(%rsp)
	vmovss	%xmm2, 276(%rsp)
	vmovss	%xmm3, 272(%rsp)
	vmovss	%xmm4, 268(%rsp)
	vmovss	%xmm5, 264(%rsp)
	vmovss	%xmm6, 260(%rsp)
	vmovss	%xmm7, 256(%rsp)
	vmovss	260(%rsp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	256(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vinsertps	$16, %xmm0, %xmm1, %xmm0 # xmm0 = xmm1[0],xmm0[0],xmm1[2,3]
	vmovss	264(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vinsertps	$32, %xmm1, %xmm0, %xmm0 # xmm0 = xmm0[0,1],xmm1[0],xmm0[3]
	vmovss	268(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vinsertps	$48, %xmm1, %xmm0, %xmm0 # xmm0 = xmm0[0,1,2],xmm1[0]
	vmovss	276(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vmovss	272(%rsp), %xmm2        # xmm2 = mem[0],zero,zero,zero
	vinsertps	$16, %xmm1, %xmm2, %xmm1 # xmm1 = xmm2[0],xmm1[0],xmm2[2,3]
	vmovss	280(%rsp), %xmm2        # xmm2 = mem[0],zero,zero,zero
	vinsertps	$32, %xmm2, %xmm1, %xmm1 # xmm1 = xmm1[0,1],xmm2[0],xmm1[3]
	vmovss	284(%rsp), %xmm2        # xmm2 = mem[0],zero,zero,zero
	vinsertps	$48, %xmm2, %xmm1, %xmm1 # xmm1 = xmm1[0,1,2],xmm2[0]
	vmovaps	%xmm1, 240(%rsp)
	vmovaps	%xmm0, 224(%rsp)
	vmovaps	224(%rsp), %ymm8
	vmovaps	%ymm8, 96(%rsp)
	vmovaps	96(%rsp), %ymm8
	vmovaps	64(%rsp), %ymm9
	vmovaps	%ymm8, 320(%rsp)
	vmovaps	%ymm9, 288(%rsp)
	vmovaps	320(%rsp), %ymm8
	vmovaps	288(%rsp), %ymm9
	vsubps	%ymm9, %ymm8, %ymm8
	vmovaps	%ymm8, 32(%rsp)
	vmovss	60(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movzbl	31(%rsp), %eax
	movl	%eax, %edx
	shlq	$5, %rdx
	vmovss	%xmm0, 912(%rsp,%rdx)
	vmovss	56(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movzbl	31(%rsp), %eax
                                        # implicit-def: $rdx
	movl	%eax, %edx
	leal	1(,%rdx,8), %eax
	movl	%eax, %edx
	vmovss	%xmm0, 912(%rsp,%rdx,4)
	vmovss	52(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movzbl	31(%rsp), %eax
                                        # implicit-def: $rdx
	movl	%eax, %edx
	leal	2(,%rdx,8), %eax
	movl	%eax, %edx
	vmovss	%xmm0, 912(%rsp,%rdx,4)
	vmovss	48(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movzbl	31(%rsp), %eax
                                        # implicit-def: $rdx
	movl	%eax, %edx
	leal	3(,%rdx,8), %eax
	movl	%eax, %edx
	vmovss	%xmm0, 912(%rsp,%rdx,4)
	vmovss	44(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movzbl	31(%rsp), %eax
                                        # implicit-def: $rdx
	movl	%eax, %edx
	leal	4(,%rdx,8), %eax
	movl	%eax, %edx
	vmovss	%xmm0, 912(%rsp,%rdx,4)
	vmovss	40(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movzbl	31(%rsp), %eax
                                        # implicit-def: $rdx
	movl	%eax, %edx
	leal	5(,%rdx,8), %eax
	movl	%eax, %edx
	vmovss	%xmm0, 912(%rsp,%rdx,4)
	vmovss	36(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movzbl	31(%rsp), %eax
                                        # implicit-def: $rdx
	movl	%eax, %edx
	leal	6(,%rdx,8), %eax
	movl	%eax, %edx
	vmovss	%xmm0, 912(%rsp,%rdx,4)
	vmovss	32(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	movzbl	31(%rsp), %eax
	shll	$3, %eax
	addl	$7, %eax
	movslq	%eax, %rdx
	vmovss	%xmm0, 912(%rsp,%rdx,4)
# %bb.4:                                #   in Loop: Header=BB124_2 Depth=1
	movb	31(%rsp), %al
	addb	$1, %al
	movb	%al, 31(%rsp)
	jmp	.LBB124_2
.LBB124_5:
	vmovss	1136(%rsp), %xmm0       # xmm0 = mem[0],zero,zero,zero
	vmovss	1140(%rsp), %xmm1       # xmm1 = mem[0],zero,zero,zero
	vmovss	1144(%rsp), %xmm2       # xmm2 = mem[0],zero,zero,zero
	vmovss	1148(%rsp), %xmm3       # xmm3 = mem[0],zero,zero,zero
	vmovss	1152(%rsp), %xmm4       # xmm4 = mem[0],zero,zero,zero
	vmovss	1156(%rsp), %xmm5       # xmm5 = mem[0],zero,zero,zero
	vmovss	%xmm0, 412(%rsp)
	vmovss	%xmm1, 408(%rsp)
	vmovss	%xmm2, 404(%rsp)
	vmovss	%xmm3, 400(%rsp)
	vmovss	%xmm4, 396(%rsp)
	vmovss	%xmm5, 392(%rsp)
	movl	$1082130432, 388(%rsp)  # imm = 0x40800000
	movl	$1107820544, 384(%rsp)  # imm = 0x42080000
	vmovss	388(%rsp), %xmm0        # xmm0 = mem[0],zero,zero,zero
	vmovss	384(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vinsertps	$16, %xmm0, %xmm1, %xmm0 # xmm0 = xmm1[0],xmm0[0],xmm1[2,3]
	vmovss	392(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vinsertps	$32, %xmm1, %xmm0, %xmm0 # xmm0 = xmm0[0,1],xmm1[0],xmm0[3]
	vmovss	396(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vinsertps	$48, %xmm1, %xmm0, %xmm0 # xmm0 = xmm0[0,1,2],xmm1[0]
	vmovss	404(%rsp), %xmm1        # xmm1 = mem[0],zero,zero,zero
	vmovss	400(%rsp), %xmm2        # xmm2 = mem[0],zero,zero,zero
	vinsertps	$16, %xmm1, %xmm2, %xmm1 # xmm1 = xmm2[0],xmm1[0],xmm2[2,3]
	vmovss	408(%rsp), %xmm2        # xmm2 = mem[0],zero,zero,zero
	vinsertps	$32, %xmm2, %xmm1, %xmm1 # xmm1 = xmm1[0,1],xmm2[0],xmm1[3]
	vmovss	412(%rsp), %xmm2        # xmm2 = mem[0],zero,zero,zero
	vinsertps	$48, %xmm2, %xmm1, %xmm1 # xmm1 = xmm1[0,1,2],xmm2[0]
	vmovaps	%xmm1, 368(%rsp)
	vmovaps	%xmm0, 352(%rsp)
	vmovaps	352(%rsp), %ymm6
	vmovaps	%ymm6, 96(%rsp)
	vmovaps	96(%rsp), %ymm6
	vmovaps	64(%rsp), %ymm7
	vmovaps	%ymm6, 448(%rsp)
	vmovaps	%ymm7, 416(%rsp)
	vmovaps	448(%rsp), %ymm6
	vmovaps	416(%rsp), %ymm7
	vsubps	%ymm7, %ymm6, %ymm6
	vmovaps	%ymm6, 32(%rsp)
	vmovss	32(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, 1136(%rsp)
	vmovss	36(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, 1140(%rsp)
	vmovss	40(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, 1144(%rsp)
	vmovss	44(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, 1148(%rsp)
	vmovss	48(%rsp), %xmm0         # xmm0 = mem[0],zero,zero,zero
	vmovss	%xmm0, 1152(%rsp)
	vmovshdup	48(%rsp), %xmm0 # xmm0 = mem[1,1,3,3]
	vmovss	%xmm0, 1156(%rsp)
	jmp	.LBB124_14
.LBB124_6:
	movb	$0, 30(%rsp)
.LBB124_7:                              # =>This Inner Loop Header: Depth=1
	movzbl	30(%rsp), %eax
	cmpl	$62, %eax
	jge	.LBB124_13
# %bb.8:                                #   in Loop: Header=BB124_7 Depth=1
	movzbl	30(%rsp), %eax
	cltd
	movl	$2, %ecx
	idivl	%ecx
	cmpl	$0, %edx
	jne	.LBB124_10
# %bb.9:                                #   in Loop: Header=BB124_7 Depth=1
	vmovss	.LCPI124_1(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
	movzbl	30(%rsp), %eax
	movl	%eax, %ecx
	vmovss	912(%rsp,%rcx,4), %xmm1 # xmm1 = mem[0],zero,zero,zero
	vsubss	%xmm0, %xmm1, %xmm0
	vmovss	%xmm0, 912(%rsp,%rcx,4)
	jmp	.LBB124_11
.LBB124_10:                             #   in Loop: Header=BB124_7 Depth=1
	vmovss	.LCPI124_0(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
	movzbl	30(%rsp), %eax
	movl	%eax, %ecx
	vmovss	912(%rsp,%rcx,4), %xmm1 # xmm1 = mem[0],zero,zero,zero
	vsubss	%xmm0, %xmm1, %xmm0
	vmovss	%xmm0, 912(%rsp,%rcx,4)
.LBB124_11:                             #   in Loop: Header=BB124_7 Depth=1
	jmp	.LBB124_12
.LBB124_12:                             #   in Loop: Header=BB124_7 Depth=1
	movb	30(%rsp), %al
	addb	$1, %al
	movb	%al, 30(%rsp)
	jmp	.LBB124_7
.LBB124_13:
	jmp	.LBB124_14
.LBB124_14:
	movq	136(%rsp), %rdi
	vzeroupper
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv
	movq	136(%rsp), %rdi
	movl	$66, %esi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm
	movq	136(%rsp), %rsi
	movq	%rsp, %rax
	movl	$22, (%rax)
	leaq	912(%rsp), %rdx
	leaq	816(%rsp), %rcx
	leaq	560(%rsp), %r8
	leaq	480(%rsp), %r9
	movq	16(%rsp), %rdi          # 8-byte Reload
	callq	_ZN5Plane12ParseIndicesEPSt6vectorIN2sf6VertexESaIS2_EEPKfPKhS7_S9_h
	movq	%fs:40, %rax
	movq	1160(%rsp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB124_16
# %bb.15:
	movq	%rbp, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB124_16:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end124:
	.size	_ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE, .Lfunc_end124-_ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end125:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv, .Lfunc_end125-_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv
	movq	-48(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB126_2
# %bb.1:
	leaq	.L.str.18(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB126_2:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv
	cmpq	-16(%rbp), %rax
	jae	.LBB126_4
# %bb.3:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm
	movq	%rax, -32(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	-32(%rbp), %rdx
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	-72(%rbp), %rdx         # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	-40(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rsi
	movq	16(%rdx), %rdi
	movq	(%rdx), %r8
	subq	%r8, %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movq	%rdi, %rax
	cqto
	movl	$20, %edi
	idivq	%rdi
	movq	%rcx, %rdi
	movq	%rax, %rdx
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m
	movq	-32(%rbp), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-32(%rbp), %rax
	imulq	$20, -24(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, 8(%rcx)
	movq	(%rcx), %rax
	imulq	$20, -16(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
.LBB126_4:
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end126:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm, .Lfunc_end126-_ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN5Plane12ParseIndicesEPSt6vectorIN2sf6VertexESaIS2_EEPKfPKhS7_S9_h # -- Begin function _ZN5Plane12ParseIndicesEPSt6vectorIN2sf6VertexESaIS2_EEPKfPKhS7_S9_h
	.p2align	4, 0x90
	.type	_ZN5Plane12ParseIndicesEPSt6vectorIN2sf6VertexESaIS2_EEPKfPKhS7_S9_h,@function
_ZN5Plane12ParseIndicesEPSt6vectorIN2sf6VertexESaIS2_EEPKfPKhS7_S9_h: # @_ZN5Plane12ParseIndicesEPSt6vectorIN2sf6VertexESaIS2_EEPKfPKhS7_S9_h
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$240, %rsp
	movb	16(%rbp), %al
	movq	%fs:40, %r10
	movq	%r10, -8(%rbp)
	movq	%rdi, -160(%rbp)
	movq	%rsi, -168(%rbp)
	movq	%rdx, -176(%rbp)
	movq	%rcx, -184(%rbp)
	movq	%r8, -192(%rbp)
	movq	%r9, -200(%rbp)
	movb	$0, -201(%rbp)
.LBB127_1:                              # =>This Inner Loop Header: Depth=1
	movzbl	-201(%rbp), %eax
	movzbl	16(%rbp), %ecx
	cmpl	%ecx, %eax
	jge	.LBB127_4
# %bb.2:                                #   in Loop: Header=BB127_1 Depth=1
	movq	-200(%rbp), %rax
	movzbl	-201(%rbp), %ecx
	imull	$3, %ecx, %ecx
	movslq	%ecx, %rdx
	movb	(%rax,%rdx), %sil
	movb	%sil, -202(%rbp)
	movq	-168(%rbp), %rdi
	movq	-176(%rbp), %rax
	movzbl	-202(%rbp), %ecx
	shll	$1, %ecx
	movslq	%ecx, %rdx
	vmovss	(%rax,%rdx,4), %xmm0    # xmm0 = mem[0],zero,zero,zero
	movq	-176(%rbp), %rax
	movzbl	-202(%rbp), %ecx
	shll	$1, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rdx
	vmovss	(%rax,%rdx,4), %xmm1    # xmm1 = mem[0],zero,zero,zero
	leaq	-40(%rbp), %rax
	movq	%rdi, -216(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN2sf7Vector2IfEC2Eff
	movq	-184(%rbp), %rax
	movzbl	-202(%rbp), %ecx
	imull	$3, %ecx, %ecx
	movslq	%ecx, %rdx
	movb	(%rax,%rdx), %sil
	movq	-184(%rbp), %rax
	movzbl	-202(%rbp), %ecx
	imull	$3, %ecx, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rdx
	movb	(%rax,%rdx), %r8b
	movq	-184(%rbp), %rax
	movzbl	-202(%rbp), %ecx
	imull	$3, %ecx, %ecx
	addl	$2, %ecx
	movslq	%ecx, %rdx
	leaq	-48(%rbp), %rdi
	movzbl	%sil, %esi
	movzbl	%r8b, %ecx
	movq	%rdx, -224(%rbp)        # 8-byte Spill
	movl	%ecx, %edx
	movq	-224(%rbp), %r9         # 8-byte Reload
	movzbl	(%rax,%r9), %ecx
	movl	$255, %r8d
	callq	_ZN2sf5ColorC1Ehhhh@PLT
	movq	-192(%rbp), %rax
	movzbl	-202(%rbp), %ecx
	shll	$1, %ecx
	movslq	%ecx, %rdi
	vmovss	(%rax,%rdi,4), %xmm0    # xmm0 = mem[0],zero,zero,zero
	movq	-192(%rbp), %rax
	movzbl	-202(%rbp), %ecx
	shll	$1, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rdi
	vmovss	(%rax,%rdi,4), %xmm1    # xmm1 = mem[0],zero,zero,zero
	leaq	-56(%rbp), %rdi
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	leaq	-48(%rbp), %rdx
	leaq	-56(%rbp), %rcx
	callq	_ZN2sf6VertexC1ERKNS_7Vector2IfEERKNS_5ColorES4_@PLT
	movq	-216(%rbp), %rdi        # 8-byte Reload
	leaq	-32(%rbp), %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
	movq	-200(%rbp), %rax
	movzbl	-201(%rbp), %r8d
	imull	$3, %r8d, %r8d
	addl	$1, %r8d
	movslq	%r8d, %rcx
	movb	(%rax,%rcx), %r10b
	movb	%r10b, -203(%rbp)
	movq	-168(%rbp), %rdi
	movq	-176(%rbp), %rax
	movzbl	-203(%rbp), %r8d
	shll	$1, %r8d
	movslq	%r8d, %rcx
	vmovss	(%rax,%rcx,4), %xmm0    # xmm0 = mem[0],zero,zero,zero
	movq	-176(%rbp), %rax
	movzbl	-203(%rbp), %r8d
	shll	$1, %r8d
	addl	$1, %r8d
	movslq	%r8d, %rcx
	vmovss	(%rax,%rcx,4), %xmm1    # xmm1 = mem[0],zero,zero,zero
	leaq	-88(%rbp), %rax
	movq	%rdi, -232(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN2sf7Vector2IfEC2Eff
	movq	-184(%rbp), %rax
	movzbl	-203(%rbp), %r8d
	imull	$3, %r8d, %r8d
	movslq	%r8d, %rcx
	movb	(%rax,%rcx), %r10b
	movq	-184(%rbp), %rax
	movzbl	-203(%rbp), %r8d
	imull	$3, %r8d, %r8d
	addl	$1, %r8d
	movslq	%r8d, %rcx
	movb	(%rax,%rcx), %r11b
	movq	-184(%rbp), %rax
	movzbl	-203(%rbp), %r8d
	imull	$3, %r8d, %r8d
	addl	$2, %r8d
	movslq	%r8d, %rcx
	leaq	-96(%rbp), %rdi
	movzbl	%r10b, %esi
	movzbl	%r11b, %edx
	movzbl	(%rax,%rcx), %ecx
	movl	$255, %r8d
	callq	_ZN2sf5ColorC1Ehhhh@PLT
	movq	-192(%rbp), %rax
	movzbl	-203(%rbp), %ecx
	shll	$1, %ecx
	movslq	%ecx, %rdi
	vmovss	(%rax,%rdi,4), %xmm0    # xmm0 = mem[0],zero,zero,zero
	movq	-192(%rbp), %rax
	movzbl	-203(%rbp), %ecx
	shll	$1, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rdi
	vmovss	(%rax,%rdi,4), %xmm1    # xmm1 = mem[0],zero,zero,zero
	leaq	-104(%rbp), %rdi
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-80(%rbp), %rdi
	leaq	-88(%rbp), %rsi
	leaq	-96(%rbp), %rdx
	leaq	-104(%rbp), %rcx
	callq	_ZN2sf6VertexC1ERKNS_7Vector2IfEERKNS_5ColorES4_@PLT
	movq	-232(%rbp), %rdi        # 8-byte Reload
	leaq	-80(%rbp), %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
	movq	-200(%rbp), %rax
	movzbl	-201(%rbp), %r8d
	imull	$3, %r8d, %r8d
	addl	$2, %r8d
	movslq	%r8d, %rcx
	movb	(%rax,%rcx), %r10b
	movb	%r10b, -204(%rbp)
	movq	-168(%rbp), %rdi
	movq	-176(%rbp), %rax
	movzbl	-204(%rbp), %r8d
	shll	$1, %r8d
	movslq	%r8d, %rcx
	vmovss	(%rax,%rcx,4), %xmm0    # xmm0 = mem[0],zero,zero,zero
	movq	-176(%rbp), %rax
	movzbl	-204(%rbp), %r8d
	shll	$1, %r8d
	addl	$1, %r8d
	movslq	%r8d, %rcx
	vmovss	(%rax,%rcx,4), %xmm1    # xmm1 = mem[0],zero,zero,zero
	leaq	-136(%rbp), %rax
	movq	%rdi, -240(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN2sf7Vector2IfEC2Eff
	movq	-184(%rbp), %rax
	movzbl	-204(%rbp), %r8d
	imull	$3, %r8d, %r8d
	movslq	%r8d, %rcx
	movb	(%rax,%rcx), %r10b
	movq	-184(%rbp), %rax
	movzbl	-204(%rbp), %r8d
	imull	$3, %r8d, %r8d
	addl	$1, %r8d
	movslq	%r8d, %rcx
	movb	(%rax,%rcx), %r11b
	movq	-184(%rbp), %rax
	movzbl	-204(%rbp), %r8d
	imull	$3, %r8d, %r8d
	addl	$2, %r8d
	movslq	%r8d, %rcx
	leaq	-144(%rbp), %rdi
	movzbl	%r10b, %esi
	movzbl	%r11b, %edx
	movzbl	(%rax,%rcx), %ecx
	movl	$255, %r8d
	callq	_ZN2sf5ColorC1Ehhhh@PLT
	movq	-192(%rbp), %rax
	movzbl	-204(%rbp), %ecx
	shll	$1, %ecx
	movslq	%ecx, %rdi
	vmovss	(%rax,%rdi,4), %xmm0    # xmm0 = mem[0],zero,zero,zero
	movq	-192(%rbp), %rax
	movzbl	-204(%rbp), %ecx
	shll	$1, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rdi
	vmovss	(%rax,%rdi,4), %xmm1    # xmm1 = mem[0],zero,zero,zero
	leaq	-152(%rbp), %rdi
	callq	_ZN2sf7Vector2IfEC2Eff
	leaq	-128(%rbp), %rdi
	leaq	-136(%rbp), %rsi
	leaq	-144(%rbp), %rdx
	leaq	-152(%rbp), %rcx
	callq	_ZN2sf6VertexC1ERKNS_7Vector2IfEERKNS_5ColorES4_@PLT
	movq	-240(%rbp), %rdi        # 8-byte Reload
	leaq	-128(%rbp), %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
# %bb.3:                                #   in Loop: Header=BB127_1 Depth=1
	movb	-201(%rbp), %al
	addb	$1, %al
	movb	%al, -201(%rbp)
	jmp	.LBB127_1
.LBB127_4:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB127_6
# %bb.5:
	addq	$240, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB127_6:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end127:
	.size	_ZN5Plane12ParseIndicesEPSt6vectorIN2sf6VertexESaIS2_EEPKfPKhS7_S9_h, .Lfunc_end127-_ZN5Plane12ParseIndicesEPSt6vectorIN2sf6VertexESaIS2_EEPKfPKhS7_S9_h
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_ # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end128:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_, .Lfunc_end128-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev:  # @_ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end129:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev, .Lfunc_end129-_ZNSt6vectorIN2sf6VertexESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev:  # @_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception19
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp442:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E
.Ltmp443:
	jmp	.LBB130_1
.LBB130_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB130_2:
	.cfi_def_cfa %rbp, 16
.Ltmp444:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end130:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev, .Lfunc_end130-_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table130:
.Lexception19:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Ltmp442-.Lfunc_begin19 # >> Call Site 1 <<
	.uleb128 .Ltmp443-.Ltmp442      #   Call between .Ltmp442 and .Ltmp443
	.uleb128 .Ltmp444-.Lfunc_begin19 #     jumps to .Ltmp444
	.byte	1                       #   On action: 1
.Lcst_end19:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase8:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl
	movq	%rax, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jne	.LBB131_2
# %bb.1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB131_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end131:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv, .Lfunc_end131-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_ # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end132:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_, .Lfunc_end132-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_ # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end133:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_, .Lfunc_end133-_ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_ # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_: # @_ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end134:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_, .Lfunc_end134-_ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_ # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_: # @_ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end135:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_, .Lfunc_end135-_ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	imulq	$24, -16(%rbp), %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end136:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm, .Lfunc_end136-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end137:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev, .Lfunc_end137-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev:  # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end138:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev, .Lfunc_end138-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end139:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev, .Lfunc_end139-_ZNSt6vectorIPKN2sf5ImageESaIS3_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEEC2Ev,"axG",@progbits,_ZNSt6vectorItSaItEEC2Ev,comdat
	.weak	_ZNSt6vectorItSaItEEC2Ev # -- Begin function _ZNSt6vectorItSaItEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEEC2Ev,@function
_ZNSt6vectorItSaItEEC2Ev:               # @_ZNSt6vectorItSaItEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseItSaItEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end140:
	.size	_ZNSt6vectorItSaItEEC2Ev, .Lfunc_end140-_ZNSt6vectorItSaItEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end141:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_, .Lfunc_end141-_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv,@function
_ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv: # @_ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end142:
	.size	_ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv, .Lfunc_end142-_ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP8ArgumentSaIS1_EEixEm,"axG",@progbits,_ZNKSt6vectorIP8ArgumentSaIS1_EEixEm,comdat
	.weak	_ZNKSt6vectorIP8ArgumentSaIS1_EEixEm # -- Begin function _ZNKSt6vectorIP8ArgumentSaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP8ArgumentSaIS1_EEixEm,@function
_ZNKSt6vectorIP8ArgumentSaIS1_EEixEm:   # @_ZNKSt6vectorIP8ArgumentSaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end143:
	.size	_ZNKSt6vectorIP8ArgumentSaIS1_EEixEm, .Lfunc_end143-_ZNKSt6vectorIP8ArgumentSaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_ # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB144_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$40, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB144_3
.LBB144_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.LBB144_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end144:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_, .Lfunc_end144-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_ # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_: # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end145:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_, .Lfunc_end145-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_ # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end146:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_, .Lfunc_end146-_ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl
	movq	%rax, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jne	.LBB147_2
# %bb.1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB147_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end147:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv, .Lfunc_end147-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEE9push_backERKt,"axG",@progbits,_ZNSt6vectorItSaItEE9push_backERKt,comdat
	.weak	_ZNSt6vectorItSaItEE9push_backERKt # -- Begin function _ZNSt6vectorItSaItEE9push_backERKt
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEE9push_backERKt,@function
_ZNSt6vectorItSaItEE9push_backERKt:     # @_ZNSt6vectorItSaItEE9push_backERKt
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB148_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$2, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB148_3
.LBB148_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorItSaItEE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_
.LBB148_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end148:
	.size	_ZNSt6vectorItSaItEE9push_backERKt, .Lfunc_end148-_ZNSt6vectorItSaItEE9push_backERKt
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv # -- Begin function _ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv,@function
_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv: # @_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end149:
	.size	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv, .Lfunc_end149-_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end150:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm, .Lfunc_end150-_ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	imulq	$40, -16(%rbp), %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end151:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm, .Lfunc_end151-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm:  # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end152:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm, .Lfunc_end152-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIbSaIbEE2atEm,"axG",@progbits,_ZNKSt6vectorIbSaIbEE2atEm,comdat
	.weak	_ZNKSt6vectorIbSaIbEE2atEm # -- Begin function _ZNKSt6vectorIbSaIbEE2atEm
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIbSaIbEE2atEm,@function
_ZNKSt6vectorIbSaIbEE2atEm:             # @_ZNKSt6vectorIbSaIbEE2atEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE14_M_range_checkEm
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIbSaIbEEixEm
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end153:
	.size	_ZNKSt6vectorIbSaIbEE2atEm, .Lfunc_end153-_ZNKSt6vectorIbSaIbEE2atEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm:  # @_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	imulq	$20, -16(%rbp), %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end154:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm, .Lfunc_end154-_ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_,"axG",@progbits,_ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_,comdat
	.weak	_ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_ # -- Begin function _ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.p2align	4, 0x90
	.type	_ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_,@function
_ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_: # @_ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
                                        # kill: def $sil killed $sil killed $esi
	movl	%edi, -4(%rbp)
	movb	%sil, -5(%rbp)
                                        # implicit-def: $xmm0
	vcvtsi2sdl	-4(%rbp), %xmm0, %xmm0
	movzbl	-5(%rbp), %eax
                                        # implicit-def: $xmm1
	vcvtsi2sd	%eax, %xmm1, %xmm1
	callq	pow@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end155:
	.size	_ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_, .Lfunc_end155-_ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv # -- Begin function _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv,@function
_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv: # @_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$24, %ecx
	idivq	%rcx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end156:
	.size	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv, .Lfunc_end156-_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf15ContextSettingsC2Ejjjjjjb,"axG",@progbits,_ZN2sf15ContextSettingsC2Ejjjjjjb,comdat
	.weak	_ZN2sf15ContextSettingsC2Ejjjjjjb # -- Begin function _ZN2sf15ContextSettingsC2Ejjjjjjb
	.p2align	4, 0x90
	.type	_ZN2sf15ContextSettingsC2Ejjjjjjb,@function
_ZN2sf15ContextSettingsC2Ejjjjjjb:      # @_ZN2sf15ContextSettingsC2Ejjjjjjb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movb	24(%rbp), %al
	movl	16(%rbp), %r10d
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movl	%edx, -16(%rbp)
	movl	%ecx, -20(%rbp)
	movl	%r8d, -24(%rbp)
	movl	%r9d, -28(%rbp)
	andb	$1, %al
	movb	%al, -29(%rbp)
	movq	-8(%rbp), %rdi
	movl	-12(%rbp), %ecx
	movl	%ecx, (%rdi)
	movl	-16(%rbp), %ecx
	movl	%ecx, 4(%rdi)
	movl	-20(%rbp), %ecx
	movl	%ecx, 8(%rdi)
	movl	-24(%rbp), %ecx
	movl	%ecx, 12(%rdi)
	movl	-28(%rbp), %ecx
	movl	%ecx, 16(%rdi)
	movl	16(%rbp), %ecx
	movl	%ecx, 20(%rdi)
	movb	-29(%rbp), %al
	andb	$1, %al
	movb	%al, 24(%rdi)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end157:
	.size	_ZN2sf15ContextSettingsC2Ejjjjjjb, .Lfunc_end157-_ZN2sf15ContextSettingsC2Ejjjjjjb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EEixEm,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm:   # @_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$5, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end158:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm, .Lfunc_end158-_ZNSt6vectorIN2sf5ImageESaIS1_EEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf5ImageaSERKS0_,"axG",@progbits,_ZN2sf5ImageaSERKS0_,comdat
	.weak	_ZN2sf5ImageaSERKS0_    # -- Begin function _ZN2sf5ImageaSERKS0_
	.p2align	4, 0x90
	.type	_ZN2sf5ImageaSERKS0_,@function
_ZN2sf5ImageaSERKS0_:                   # @_ZN2sf5ImageaSERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	movq	%rax, %rcx
	addq	$8, %rcx
	movq	-16(%rbp), %rdx
	addq	$8, %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIhSaIhEEaSERKS1_
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end159:
	.size	_ZN2sf5ImageaSERKS0_, .Lfunc_end159-_ZN2sf5ImageaSERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Bit_referenceaSEb,"axG",@progbits,_ZNSt14_Bit_referenceaSEb,comdat
	.weak	_ZNSt14_Bit_referenceaSEb # -- Begin function _ZNSt14_Bit_referenceaSEb
	.p2align	4, 0x90
	.type	_ZNSt14_Bit_referenceaSEb,@function
_ZNSt14_Bit_referenceaSEb:              # @_ZNSt14_Bit_referenceaSEb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
                                        # kill: def $sil killed $sil killed $esi
	movq	%rdi, -8(%rbp)
	andb	$1, %sil
	movb	%sil, -9(%rbp)
	movq	-8(%rbp), %rax
	testb	$1, -9(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB160_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	movq	(%rax), %rdx
	orq	(%rdx), %rcx
	movq	%rcx, (%rdx)
	jmp	.LBB160_3
.LBB160_2:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	xorq	$-1, %rcx
	movq	(%rax), %rdx
	andq	(%rdx), %rcx
	movq	%rcx, (%rdx)
.LBB160_3:
	movq	-24(%rbp), %rax         # 8-byte Reload
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end160:
	.size	_ZNSt14_Bit_referenceaSEb, .Lfunc_end160-_ZNSt14_Bit_referenceaSEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf6SpriteD2Ev,"axG",@progbits,_ZN2sf6SpriteD2Ev,comdat
	.weak	_ZN2sf6SpriteD2Ev       # -- Begin function _ZN2sf6SpriteD2Ev
	.p2align	4, 0x90
	.type	_ZN2sf6SpriteD2Ev,@function
_ZN2sf6SpriteD2Ev:                      # @_ZN2sf6SpriteD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	addq	$8, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN2sf13TransformableD2Ev@PLT
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN2sf8DrawableD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end161:
	.size	_ZN2sf6SpriteD2Ev, .Lfunc_end161-_ZN2sf6SpriteD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorItSaItEE4sizeEv,"axG",@progbits,_ZNKSt6vectorItSaItEE4sizeEv,comdat
	.weak	_ZNKSt6vectorItSaItEE4sizeEv # -- Begin function _ZNKSt6vectorItSaItEE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorItSaItEE4sizeEv,@function
_ZNKSt6vectorItSaItEE4sizeEv:           # @_ZNKSt6vectorItSaItEE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$1, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end162:
	.size	_ZNKSt6vectorItSaItEE4sizeEv, .Lfunc_end162-_ZNKSt6vectorItSaItEE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB163_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$20, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB163_3
.LBB163_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdx
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.LBB163_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end163:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_, .Lfunc_end163-_ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEEixEm,"axG",@progbits,_ZNSt6vectorItSaItEEixEm,comdat
	.weak	_ZNSt6vectorItSaItEEixEm # -- Begin function _ZNSt6vectorItSaItEEixEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEEixEm,@function
_ZNSt6vectorItSaItEEixEm:               # @_ZNSt6vectorItSaItEEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	shlq	$1, %rcx
	addq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end164:
	.size	_ZNSt6vectorItSaItEEixEm, .Lfunc_end164-_ZNSt6vectorItSaItEEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv,@function
_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv: # @_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$20, %ecx
	idivq	%rcx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end165:
	.size	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv, .Lfunc_end165-_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEED2Ev,"axG",@progbits,_ZNSt6vectorItSaItEED2Ev,comdat
	.weak	_ZNSt6vectorItSaItEED2Ev # -- Begin function _ZNSt6vectorItSaItEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEED2Ev,@function
_ZNSt6vectorItSaItEED2Ev:               # @_ZNSt6vectorItSaItEED2Ev
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception20
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
.Ltmp445:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPttEvT_S1_RSaIT0_E
.Ltmp446:
	jmp	.LBB166_1
.LBB166_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseItSaItEED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB166_2:
	.cfi_def_cfa %rbp, 16
.Ltmp447:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseItSaItEED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end166:
	.size	_ZNSt6vectorItSaItEED2Ev, .Lfunc_end166-_ZNSt6vectorItSaItEED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table166:
.Lexception20:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Ltmp445-.Lfunc_begin20 # >> Call Site 1 <<
	.uleb128 .Ltmp446-.Ltmp445      #   Call between .Ltmp445 and .Ltmp446
	.uleb128 .Ltmp447-.Lfunc_begin20 #     jumps to .Ltmp447
	.byte	1                       #   On action: 1
.Lcst_end20:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase9:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception21
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
.Ltmp448:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E
.Ltmp449:
	jmp	.LBB167_1
.LBB167_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB167_2:
	.cfi_def_cfa %rbp, 16
.Ltmp450:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end167:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev, .Lfunc_end167-_ZNSt6vectorIPKN2sf5ImageESaIS3_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table167:
.Lexception21:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Ltmp448-.Lfunc_begin21 # >> Call Site 1 <<
	.uleb128 .Ltmp449-.Ltmp448      #   Call between .Ltmp448 and .Ltmp449
	.uleb128 .Ltmp450-.Lfunc_begin21 #     jumps to .Ltmp450
	.byte	1                       #   On action: 1
.Lcst_end21:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase10:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev:  # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception22
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
.Ltmp451:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E
.Ltmp452:
	jmp	.LBB168_1
.LBB168_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB168_2:
	.cfi_def_cfa %rbp, 16
.Ltmp453:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end168:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev, .Lfunc_end168-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table168:
.Lexception22:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Ltmp451-.Lfunc_begin22 # >> Call Site 1 <<
	.uleb128 .Ltmp452-.Ltmp451      #   Call between .Ltmp451 and .Ltmp452
	.uleb128 .Ltmp453-.Lfunc_begin22 #     jumps to .Ltmp453
	.byte	1                       #   On action: 1
.Lcst_end22:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase11:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception23
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp454:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E
.Ltmp455:
	jmp	.LBB169_1
.LBB169_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB169_2:
	.cfi_def_cfa %rbp, 16
.Ltmp456:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end169:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev, .Lfunc_end169-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table169:
.Lexception23:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Ltmp454-.Lfunc_begin23 # >> Call Site 1 <<
	.uleb128 .Ltmp455-.Ltmp454      #   Call between .Ltmp454 and .Ltmp455
	.uleb128 .Ltmp456-.Lfunc_begin23 #     jumps to .Ltmp456
	.byte	1                       #   On action: 1
.Lcst_end23:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase12:
	.p2align	2
                                        # -- End function
	.text
	.globl	_ZN5Plane6SelectEmmmm   # -- Begin function _ZN5Plane6SelectEmmmm
	.p2align	4, 0x90
	.type	_ZN5Plane6SelectEmmmm,@function
_ZN5Plane6SelectEmmmm:                  # @_ZN5Plane6SelectEmmmm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	%r8, -40(%rbp)
	movq	-8(%rbp), %rax
	movb	$1, 544(%rax)
	movq	%rax, %rcx
	addq	$1072, %rcx             # imm = 0x430
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 552(%rcx)
	addq	$1072, %rcx             # imm = 0x430
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-24(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 560(%rcx)
	addq	$1072, %rcx             # imm = 0x430
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-24(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 568(%rcx)
	addq	$1072, %rcx             # imm = 0x430
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN10Collection9GetStacksEv@PLT
	movq	-24(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5StackSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Stack9GetBlocksEv@PLT
	movq	-32(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP5BlockSaIS1_EEixEm
	movq	(%rax), %rdi
	callq	_ZN5Block12GetArgumentsEv@PLT
	movq	-40(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNKSt6vectorIP8ArgumentSaIS1_EEixEm
	movq	(%rax), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 576(%rcx)
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end170:
	.size	_ZN5Plane6SelectEmmmm, .Lfunc_end170-_ZN5Plane6SelectEmmmm
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane14DragCollectionEP10Collectionb # -- Begin function _ZN5Plane14DragCollectionEP10Collectionb
	.p2align	4, 0x90
	.type	_ZN5Plane14DragCollectionEP10Collectionb,@function
_ZN5Plane14DragCollectionEP10Collectionb: # @_ZN5Plane14DragCollectionEP10Collectionb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
                                        # kill: def $dl killed $dl killed $edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	andb	$1, %dl
	movb	%dl, -17(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, 624(%rax)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB171_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	cmpq	$0, 616(%rax)
	je	.LBB171_3
.LBB171_2:
	jmp	.LBB171_4
.LBB171_3:
	movq	_ZN6Global13MousePositionE@GOTPCREL(%rip), %rax
	movb	-17(%rbp), %cl
	andb	$1, %cl
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movb	%cl, 648(%rdx)
	movq	-16(%rbp), %rsi
	movq	%rsi, 616(%rdx)
	movq	$0, 624(%rdx)
	movq	(%rax), %rax
	movq	%rax, 640(%rdx)
	movq	616(%rdx), %rax
	movq	%rax, %rdi
	callq	_ZNK2sf13Transformable11getPositionEv@PLT
	movq	(%rax), %rax
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rax, 632(%rdx)
.LBB171_4:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end171:
	.size	_ZN5Plane14DragCollectionEP10Collectionb, .Lfunc_end171-_ZN5Plane14DragCollectionEP10Collectionb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE,"axG",@progbits,_ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE,comdat
	.weak	_ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE # -- Begin function _ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE
	.p2align	4, 0x90
	.type	_ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE,@function
_ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE:     # @_ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movl	(%rcx), %edx
	movl	%edx, %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rcx, %xmm0, %xmm0
	vmovss	%xmm0, (%rax)
	movq	-16(%rbp), %rcx
	movl	4(%rcx), %edx
	movl	%edx, %ecx
                                        # implicit-def: $xmm0
	vcvtsi2ss	%rcx, %xmm0, %xmm0
	vmovss	%xmm0, 4(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end172:
	.size	_ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE, .Lfunc_end172-_ZN2sf7Vector2IfEC2IjEERKNS0_IT_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_,"axG",@progbits,_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_,comdat
	.weak	_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_ # -- Begin function _ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_
	.p2align	4, 0x90
	.type	_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_,@function
_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_:   # @_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	vmovss	4(%rax), %xmm1          # xmm1 = mem[0],zero,zero,zero
	vmovss	(%rcx), %xmm2           # xmm2 = mem[0],zero,zero,zero
	vmovss	4(%rcx), %xmm3          # xmm3 = mem[0],zero,zero,zero
	vsubss	%xmm2, %xmm0, %xmm0
	vsubss	%xmm3, %xmm1, %xmm1
	leaq	-16(%rbp), %rdi
	callq	_ZN2sf7Vector2IfEC2Eff
	vmovsd	-16(%rbp), %xmm0        # xmm0 = mem[0],zero
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	vmovaps	%xmm0, -48(%rbp)        # 16-byte Spill
	jne	.LBB173_2
# %bb.1:
	vmovaps	-48(%rbp), %xmm0        # 16-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB173_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end173:
	.size	_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_, .Lfunc_end173-_ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_,"axG",@progbits,_ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_,comdat
	.weak	_ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_ # -- Begin function _ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_
	.p2align	4, 0x90
	.type	_ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_,@function
_ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_:   # @_ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	movl	(%rax), %edx
	movl	4(%rax), %r8d
	movl	(%rcx), %r9d
	movl	4(%rcx), %r10d
	addl	%r9d, %edx
	addl	%r10d, %r8d
	leaq	-16(%rbp), %rdi
	movl	%edx, %esi
	movl	%r8d, %edx
	callq	_ZN2sf7Vector2IjEC2Ejj
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rcx
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jne	.LBB174_2
# %bb.1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB174_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end174:
	.size	_ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_, .Lfunc_end174-_ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN5Plane9ClearSnapEv   # -- Begin function _ZN5Plane9ClearSnapEv
	.p2align	4, 0x90
	.type	_ZN5Plane9ClearSnapEv,@function
_ZN5Plane9ClearSnapEv:                  # @_ZN5Plane9ClearSnapEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movb	$0, 1024(%rax)
	movq	$0, 1000(%rax)
	movq	$0, 1008(%rax)
	movq	$0, 1016(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end175:
	.size	_ZN5Plane9ClearSnapEv, .Lfunc_end175-_ZN5Plane9ClearSnapEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_,"axG",@progbits,_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_,comdat
	.weak	_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_ # -- Begin function _ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_
	.p2align	4, 0x90
	.type	_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_,@function
_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_:  # @_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	movl	(%rax), %ecx
	movq	-8(%rbp), %rax
	addl	(%rax), %ecx
	movl	%ecx, (%rax)
	movq	-16(%rbp), %rax
	movl	4(%rax), %ecx
	movq	-8(%rbp), %rax
	addl	4(%rax), %ecx
	movl	%ecx, 4(%rax)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end176:
	.size	_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_, .Lfunc_end176-_ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_,"axG",@progbits,_ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_,comdat
	.weak	_ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_ # -- Begin function _ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_
	.p2align	4, 0x90
	.type	_ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_,@function
_ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_:  # @_ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	vmovss	(%rax), %xmm0           # xmm0 = mem[0],zero,zero,zero
	movq	-8(%rbp), %rax
	vmovss	(%rax), %xmm1           # xmm1 = mem[0],zero,zero,zero
	vsubss	%xmm0, %xmm1, %xmm0
	vmovss	%xmm0, (%rax)
	movq	-16(%rbp), %rax
	vmovss	4(%rax), %xmm0          # xmm0 = mem[0],zero,zero,zero
	movq	-8(%rbp), %rax
	vmovss	4(%rax), %xmm1          # xmm1 = mem[0],zero,zero,zero
	vsubss	%xmm0, %xmm1, %xmm0
	vmovss	%xmm0, 4(%rax)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end177:
	.size	_ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_, .Lfunc_end177-_ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_
	.cfi_endproc
                                        # -- End function
	.text
	.globl	_ZN5Plane7SetSnapEmmP5Stack # -- Begin function _ZN5Plane7SetSnapEmmP5Stack
	.p2align	4, 0x90
	.type	_ZN5Plane7SetSnapEmmP5Stack,@function
_ZN5Plane7SetSnapEmmP5Stack:            # @_ZN5Plane7SetSnapEmmP5Stack
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rax
	movb	$1, 1024(%rax)
	movq	-16(%rbp), %rcx
	movq	%rcx, 1000(%rax)
	movq	-24(%rbp), %rcx
	movq	%rcx, 1008(%rax)
	movq	-32(%rbp), %rcx
	movq	%rcx, 1016(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end178:
	.size	_ZN5Plane7SetSnapEmmP5Stack, .Lfunc_end178-_ZN5Plane7SetSnapEmmP5Stack
	.cfi_endproc
                                        # -- End function
	.globl	_ZN5Plane7GetViewEv     # -- Begin function _ZN5Plane7GetViewEv
	.p2align	4, 0x90
	.type	_ZN5Plane7GetViewEv,@function
_ZN5Plane7GetViewEv:                    # @_ZN5Plane7GetViewEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$1476, %rax             # imm = 0x5C4
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end179:
	.size	_ZN5Plane7GetViewEv, .Lfunc_end179-_ZN5Plane7GetViewEv
	.cfi_endproc
                                        # -- End function
	.globl	_ZNK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE # -- Begin function _ZNK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE
	.p2align	4, 0x90
	.type	_ZNK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE,@function
_ZNK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE: # @_ZNK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception24
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rcx
.Ltmp457:
	leaq	.L.str.14(%rip), %rsi
	movq	%rax, %rdi
	movq	%rcx, -40(%rbp)         # 8-byte Spill
	callq	_ZNSt11logic_errorC1EPKc@PLT
.Ltmp458:
	jmp	.LBB180_1
.LBB180_1:
	movq	_ZTISt11logic_error@GOTPCREL(%rip), %rax
	movq	_ZNSt11logic_errorD1Ev@GOTPCREL(%rip), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	movq	%rcx, %rdx
	callq	__cxa_throw@PLT
.LBB180_2:
.Ltmp459:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -24(%rbp)
	movl	%edx, -28(%rbp)
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	__cxa_free_exception@PLT
# %bb.3:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end180:
	.size	_ZNK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE, .Lfunc_end180-_ZNK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table180:
.Lexception24:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Lfunc_begin24-.Lfunc_begin24 # >> Call Site 1 <<
	.uleb128 .Ltmp457-.Lfunc_begin24 #   Call between .Lfunc_begin24 and .Ltmp457
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp457-.Lfunc_begin24 # >> Call Site 2 <<
	.uleb128 .Ltmp458-.Ltmp457      #   Call between .Ltmp457 and .Ltmp458
	.uleb128 .Ltmp459-.Lfunc_begin24 #     jumps to .Ltmp459
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp458-.Lfunc_begin24 # >> Call Site 3 <<
	.uleb128 .Lfunc_end180-.Ltmp458 #   Call between .Ltmp458 and .Lfunc_end180
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end24:
	.p2align	2
                                        # -- End function
	.text
	.globl	_ZThn184_NK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE # -- Begin function _ZThn184_NK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE
	.p2align	4, 0x90
	.type	_ZThn184_NK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE,@function
_ZThn184_NK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE: # @_ZThn184_NK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	leaq	16(%rbp), %rax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	addq	$-184, %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	jmp	_ZNK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE # TAILCALL
.Lfunc_end181:
	.size	_ZThn184_NK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE, .Lfunc_end181-_ZThn184_NK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN14ITransformableD2Ev,"axG",@progbits,_ZN14ITransformableD2Ev,comdat
	.weak	_ZN14ITransformableD2Ev # -- Begin function _ZN14ITransformableD2Ev
	.p2align	4, 0x90
	.type	_ZN14ITransformableD2Ev,@function
_ZN14ITransformableD2Ev:                # @_ZN14ITransformableD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN2sf13TransformableD2Ev@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end182:
	.size	_ZN14ITransformableD2Ev, .Lfunc_end182-_ZN14ITransformableD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN14ITransformableD0Ev,"axG",@progbits,_ZN14ITransformableD0Ev,comdat
	.weak	_ZN14ITransformableD0Ev # -- Begin function _ZN14ITransformableD0Ev
	.p2align	4, 0x90
	.type	_ZN14ITransformableD0Ev,@function
_ZN14ITransformableD0Ev:                # @_ZN14ITransformableD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZN14ITransformableD2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end183:
	.size	_ZN14ITransformableD0Ev, .Lfunc_end183-_ZN14ITransformableD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf8DrawableC2Ev,"axG",@progbits,_ZN2sf8DrawableC2Ev,comdat
	.weak	_ZN2sf8DrawableC2Ev     # -- Begin function _ZN2sf8DrawableC2Ev
	.p2align	4, 0x90
	.type	_ZN2sf8DrawableC2Ev,@function
_ZN2sf8DrawableC2Ev:                    # @_ZN2sf8DrawableC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	leaq	_ZTVN2sf8DrawableE(%rip), %rax
	addq	$16, %rax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rax, (%rcx)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end184:
	.size	_ZN2sf8DrawableC2Ev, .Lfunc_end184-_ZN2sf8DrawableC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf8DrawableD2Ev,"axG",@progbits,_ZN2sf8DrawableD2Ev,comdat
	.weak	_ZN2sf8DrawableD2Ev     # -- Begin function _ZN2sf8DrawableD2Ev
	.p2align	4, 0x90
	.type	_ZN2sf8DrawableD2Ev,@function
_ZN2sf8DrawableD2Ev:                    # @_ZN2sf8DrawableD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end185:
	.size	_ZN2sf8DrawableD2Ev, .Lfunc_end185-_ZN2sf8DrawableD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf8DrawableD0Ev,"axG",@progbits,_ZN2sf8DrawableD0Ev,comdat
	.weak	_ZN2sf8DrawableD0Ev     # -- Begin function _ZN2sf8DrawableD0Ev
	.p2align	4, 0x90
	.type	_ZN2sf8DrawableD0Ev,@function
_ZN2sf8DrawableD0Ev:                    # @_ZN2sf8DrawableD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	ud2
.Lfunc_end186:
	.size	_ZN2sf8DrawableD0Ev, .Lfunc_end186-_ZN2sf8DrawableD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev: # @_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end187:
	.size	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev, .Lfunc_end187-_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end188:
	.size	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev, .Lfunc_end188-_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev,"axG",@progbits,_ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev,comdat
	.weak	_ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev # -- Begin function _ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev,@function
_ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev: # @_ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end189:
	.size	_ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev, .Lfunc_end189-_ZNSaISt6vectorIN2sf6VertexESaIS1_EEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end190:
	.size	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev, .Lfunc_end190-_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end191:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev, .Lfunc_end191-_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev,@function
_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev: # @_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end192:
	.size	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev, .Lfunc_end192-_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaIN2sf12VertexBufferEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end193:
	.size	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev, .Lfunc_end193-_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf12VertexBufferEEC2Ev,"axG",@progbits,_ZNSaIN2sf12VertexBufferEEC2Ev,comdat
	.weak	_ZNSaIN2sf12VertexBufferEEC2Ev # -- Begin function _ZNSaIN2sf12VertexBufferEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf12VertexBufferEEC2Ev,@function
_ZNSaIN2sf12VertexBufferEEC2Ev:         # @_ZNSaIN2sf12VertexBufferEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end194:
	.size	_ZNSaIN2sf12VertexBufferEEC2Ev, .Lfunc_end194-_ZNSaIN2sf12VertexBufferEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end195:
	.size	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev, .Lfunc_end195-_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end196:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev, .Lfunc_end196-_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev,@function
_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev: # @_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end197:
	.size	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev, .Lfunc_end197-_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaIN2sf9TransformEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end198:
	.size	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev, .Lfunc_end198-_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf9TransformEEC2Ev,"axG",@progbits,_ZNSaIN2sf9TransformEEC2Ev,comdat
	.weak	_ZNSaIN2sf9TransformEEC2Ev # -- Begin function _ZNSaIN2sf9TransformEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf9TransformEEC2Ev,@function
_ZNSaIN2sf9TransformEEC2Ev:             # @_ZNSaIN2sf9TransformEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end199:
	.size	_ZNSaIN2sf9TransformEEC2Ev, .Lfunc_end199-_ZNSaIN2sf9TransformEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end200:
	.size	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev, .Lfunc_end200-_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end201:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev, .Lfunc_end201-_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev,@function
_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev: # @_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end202:
	.size	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev, .Lfunc_end202-_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaIN2sf5ImageEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end203:
	.size	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev, .Lfunc_end203-_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf5ImageEEC2Ev,"axG",@progbits,_ZNSaIN2sf5ImageEEC2Ev,comdat
	.weak	_ZNSaIN2sf5ImageEEC2Ev  # -- Begin function _ZNSaIN2sf5ImageEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf5ImageEEC2Ev,@function
_ZNSaIN2sf5ImageEEC2Ev:                 # @_ZNSaIN2sf5ImageEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end204:
	.size	_ZNSaIN2sf5ImageEEC2Ev, .Lfunc_end204-_ZNSaIN2sf5ImageEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end205:
	.size	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev, .Lfunc_end205-_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end206:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev, .Lfunc_end206-_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev,@function
_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev: # @_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end207:
	.size	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev, .Lfunc_end207-_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaIN2sf7TextureEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end208:
	.size	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev, .Lfunc_end208-_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf7TextureEEC2Ev,"axG",@progbits,_ZNSaIN2sf7TextureEEC2Ev,comdat
	.weak	_ZNSaIN2sf7TextureEEC2Ev # -- Begin function _ZNSaIN2sf7TextureEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf7TextureEEC2Ev,@function
_ZNSaIN2sf7TextureEEC2Ev:               # @_ZNSaIN2sf7TextureEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end209:
	.size	_ZNSaIN2sf7TextureEEC2Ev, .Lfunc_end209-_ZNSaIN2sf7TextureEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end210:
	.size	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev, .Lfunc_end210-_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end211:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev, .Lfunc_end211-_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEEC2Ev,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEEC2Ev,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEEC2Ev # -- Begin function _ZNSt13_Bvector_baseISaIbEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEEC2Ev,@function
_ZNSt13_Bvector_baseISaIbEEC2Ev:        # @_ZNSt13_Bvector_baseISaIbEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end212:
	.size	_ZNSt13_Bvector_baseISaIbEEC2Ev, .Lfunc_end212-_ZNSt13_Bvector_baseISaIbEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev # -- Begin function _ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev,@function
_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev: # @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaImEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end213:
	.size	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev, .Lfunc_end213-_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaImEC2Ev,"axG",@progbits,_ZNSaImEC2Ev,comdat
	.weak	_ZNSaImEC2Ev            # -- Begin function _ZNSaImEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaImEC2Ev,@function
_ZNSaImEC2Ev:                           # @_ZNSaImEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorImEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end214:
	.size	_ZNSaImEC2Ev, .Lfunc_end214-_ZNSaImEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev # -- Begin function _ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev,@function
_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev: # @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception25
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
.Ltmp460:
	movq	%rax, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSt13_Bit_iteratorC2Ev
.Ltmp461:
	jmp	.LBB215_1
.LBB215_1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$16, %rax
.Ltmp462:
	movq	%rax, %rdi
	callq	_ZNSt13_Bit_iteratorC2Ev
.Ltmp463:
	jmp	.LBB215_2
.LBB215_2:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	$0, 32(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB215_3:
	.cfi_def_cfa %rbp, 16
.Ltmp464:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -20(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end215:
	.size	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev, .Lfunc_end215-_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table215:
.Lexception25:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Ltmp460-.Lfunc_begin25 # >> Call Site 1 <<
	.uleb128 .Ltmp463-.Ltmp460      #   Call between .Ltmp460 and .Ltmp463
	.uleb128 .Ltmp464-.Lfunc_begin25 #     jumps to .Ltmp464
	.byte	1                       #   On action: 1
.Lcst_end25:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase13:
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorImEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorImEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorImEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorImEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorImEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorImEC2Ev:    # @_ZN9__gnu_cxx13new_allocatorImEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end216:
	.size	_ZN9__gnu_cxx13new_allocatorImEC2Ev, .Lfunc_end216-_ZN9__gnu_cxx13new_allocatorImEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bit_iteratorC2Ev,"axG",@progbits,_ZNSt13_Bit_iteratorC2Ev,comdat
	.weak	_ZNSt13_Bit_iteratorC2Ev # -- Begin function _ZNSt13_Bit_iteratorC2Ev
	.p2align	4, 0x90
	.type	_ZNSt13_Bit_iteratorC2Ev,@function
_ZNSt13_Bit_iteratorC2Ev:               # @_ZNSt13_Bit_iteratorC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %esi
	xorl	%edx, %edx
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rcx, %rdi
	callq	_ZNSt18_Bit_iterator_baseC2EPmj
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end217:
	.size	_ZNSt13_Bit_iteratorC2Ev, .Lfunc_end217-_ZNSt13_Bit_iteratorC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate  # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	4, 0x90
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	pushq	%rax
	callq	__cxa_begin_catch@PLT
	movq	%rax, (%rsp)            # 8-byte Spill
	callq	_ZSt9terminatev@PLT
.Lfunc_end218:
	.size	__clang_call_terminate, .Lfunc_end218-__clang_call_terminate
                                        # -- End function
	.section	.text._ZNSt18_Bit_iterator_baseC2EPmj,"axG",@progbits,_ZNSt18_Bit_iterator_baseC2EPmj,comdat
	.weak	_ZNSt18_Bit_iterator_baseC2EPmj # -- Begin function _ZNSt18_Bit_iterator_baseC2EPmj
	.p2align	4, 0x90
	.type	_ZNSt18_Bit_iterator_baseC2EPmj,@function
_ZNSt18_Bit_iterator_baseC2EPmj:        # @_ZNSt18_Bit_iterator_baseC2EPmj
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, (%rax)
	movl	-20(%rbp), %edx
	movl	%edx, 8(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end219:
	.size	_ZNSt18_Bit_iterator_baseC2EPmj, .Lfunc_end219-_ZNSt18_Bit_iterator_baseC2EPmj
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev,@function
_ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev: # @_ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end220:
	.size	_ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev, .Lfunc_end220-_ZNSt12_Vector_baseIP10CollectionSaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaIP10CollectionEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end221:
	.size	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev, .Lfunc_end221-_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIP10CollectionEC2Ev,"axG",@progbits,_ZNSaIP10CollectionEC2Ev,comdat
	.weak	_ZNSaIP10CollectionEC2Ev # -- Begin function _ZNSaIP10CollectionEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIP10CollectionEC2Ev,@function
_ZNSaIP10CollectionEC2Ev:               # @_ZNSaIP10CollectionEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end222:
	.size	_ZNSaIP10CollectionEC2Ev, .Lfunc_end222-_ZNSaIP10CollectionEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end223:
	.size	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev, .Lfunc_end223-_ZNSt12_Vector_baseIP10CollectionSaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end224:
	.size	_ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev, .Lfunc_end224-_ZN9__gnu_cxx13new_allocatorIP10CollectionEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZThn8_N2sf4TextD1Ev,"axG",@progbits,_ZThn8_N2sf4TextD1Ev,comdat
	.weak	_ZThn8_N2sf4TextD1Ev    # -- Begin function _ZThn8_N2sf4TextD1Ev
	.p2align	4, 0x90
	.type	_ZThn8_N2sf4TextD1Ev,@function
_ZThn8_N2sf4TextD1Ev:                   # @_ZThn8_N2sf4TextD1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$-8, %rax
	movq	%rax, %rdi
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	jmp	_ZN2sf4TextD2Ev         # TAILCALL
.Lfunc_end225:
	.size	_ZThn8_N2sf4TextD1Ev, .Lfunc_end225-_ZThn8_N2sf4TextD1Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf11VertexArrayD2Ev,"axG",@progbits,_ZN2sf11VertexArrayD2Ev,comdat
	.weak	_ZN2sf11VertexArrayD2Ev # -- Begin function _ZN2sf11VertexArrayD2Ev
	.p2align	4, 0x90
	.type	_ZN2sf11VertexArrayD2Ev,@function
_ZN2sf11VertexArrayD2Ev:                # @_ZN2sf11VertexArrayD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	_ZTVN2sf11VertexArrayE@GOTPCREL(%rip), %rax
	addq	$16, %rax
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	%rcx, %rax
	addq	$8, %rax
	movq	%rax, %rdi
	movq	%rcx, -16(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN2sf8DrawableD2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end226:
	.size	_ZN2sf11VertexArrayD2Ev, .Lfunc_end226-_ZN2sf11VertexArrayD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZThn8_N2sf14RectangleShapeD1Ev,"axG",@progbits,_ZThn8_N2sf14RectangleShapeD1Ev,comdat
	.weak	_ZThn8_N2sf14RectangleShapeD1Ev # -- Begin function _ZThn8_N2sf14RectangleShapeD1Ev
	.p2align	4, 0x90
	.type	_ZThn8_N2sf14RectangleShapeD1Ev,@function
_ZThn8_N2sf14RectangleShapeD1Ev:        # @_ZThn8_N2sf14RectangleShapeD1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$-8, %rax
	movq	%rax, %rdi
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	jmp	_ZN2sf14RectangleShapeD2Ev # TAILCALL
.Lfunc_end227:
	.size	_ZThn8_N2sf14RectangleShapeD1Ev, .Lfunc_end227-_ZThn8_N2sf14RectangleShapeD1Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Function_baseD2Ev,"axG",@progbits,_ZNSt14_Function_baseD2Ev,comdat
	.weak	_ZNSt14_Function_baseD2Ev # -- Begin function _ZNSt14_Function_baseD2Ev
	.p2align	4, 0x90
	.type	_ZNSt14_Function_baseD2Ev,@function
_ZNSt14_Function_baseD2Ev:              # @_ZNSt14_Function_baseD2Ev
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception26
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, 16(%rax)
	movq	%rax, -16(%rbp)         # 8-byte Spill
	je	.LBB228_3
# %bb.1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	16(%rax), %rcx
.Ltmp465:
	movl	$3, %edx
	movq	%rax, %rdi
	movq	%rax, %rsi
	callq	*%rcx
.Ltmp466:
	jmp	.LBB228_2
.LBB228_2:
	jmp	.LBB228_3
.LBB228_3:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB228_4:
	.cfi_def_cfa %rbp, 16
.Ltmp467:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -20(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end228:
	.size	_ZNSt14_Function_baseD2Ev, .Lfunc_end228-_ZNSt14_Function_baseD2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table228:
.Lexception26:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Ltmp465-.Lfunc_begin26 # >> Call Site 1 <<
	.uleb128 .Ltmp466-.Ltmp465      #   Call between .Ltmp465 and .Ltmp466
	.uleb128 .Ltmp467-.Lfunc_begin26 #     jumps to .Ltmp467
	.byte	1                       #   On action: 1
.Lcst_end26:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase14:
	.p2align	2
                                        # -- End function
	.section	.text._ZN2sf8DrawableaSERKS0_,"axG",@progbits,_ZN2sf8DrawableaSERKS0_,comdat
	.weak	_ZN2sf8DrawableaSERKS0_ # -- Begin function _ZN2sf8DrawableaSERKS0_
	.p2align	4, 0x90
	.type	_ZN2sf8DrawableaSERKS0_,@function
_ZN2sf8DrawableaSERKS0_:                # @_ZN2sf8DrawableaSERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end229:
	.size	_ZN2sf8DrawableaSERKS0_, .Lfunc_end229-_ZN2sf8DrawableaSERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf13TransformableaSERKS0_,"axG",@progbits,_ZN2sf13TransformableaSERKS0_,comdat
	.weak	_ZN2sf13TransformableaSERKS0_ # -- Begin function _ZN2sf13TransformableaSERKS0_
	.p2align	4, 0x90
	.type	_ZN2sf13TransformableaSERKS0_,@function
_ZN2sf13TransformableaSERKS0_:          # @_ZN2sf13TransformableaSERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	8(%rcx), %rdx
	movq	%rdx, 8(%rax)
	movq	16(%rcx), %rdx
	movq	%rdx, 16(%rax)
	movq	24(%rcx), %rdx
	movq	%rdx, 24(%rax)
	movl	32(%rcx), %r8d
	movl	%r8d, 32(%rax)
	movq	%rax, %rcx
	addq	$36, %rcx
	movq	-16(%rbp), %rdx
	addq	$36, %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movl	$64, %ecx
	movq	%rcx, %rdx
	movq	%rax, -24(%rbp)         # 8-byte Spill
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	callq	memcpy@PLT
	movq	-16(%rbp), %rax
	movb	100(%rax), %r9b
	andb	$1, %r9b
	movq	-24(%rbp), %rax         # 8-byte Reload
	movb	%r9b, 100(%rax)
	addq	$104, %rax
	movq	-16(%rbp), %rcx
	addq	$104, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	-32(%rbp), %rdx         # 8-byte Reload
	callq	memcpy@PLT
	movq	-16(%rbp), %rax
	movb	168(%rax), %r9b
	andb	$1, %r9b
	movq	-24(%rbp), %rax         # 8-byte Reload
	movb	%r9b, 168(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end230:
	.size	_ZN2sf13TransformableaSERKS0_, .Lfunc_end230-_ZN2sf13TransformableaSERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf11VertexArrayaSEOS0_,"axG",@progbits,_ZN2sf11VertexArrayaSEOS0_,comdat
	.weak	_ZN2sf11VertexArrayaSEOS0_ # -- Begin function _ZN2sf11VertexArrayaSEOS0_
	.p2align	4, 0x90
	.type	_ZN2sf11VertexArrayaSEOS0_,@function
_ZN2sf11VertexArrayaSEOS0_:             # @_ZN2sf11VertexArrayaSEOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	-16(%rbp), %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZN2sf8DrawableaSERKS0_
	movq	-24(%rbp), %rcx         # 8-byte Reload
	addq	$8, %rcx
	movq	-16(%rbp), %rdx
	addq	$8, %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_
	movq	-16(%rbp), %rcx
	movl	32(%rcx), %r8d
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movl	%r8d, 32(%rcx)
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rcx, %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end231:
	.size	_ZN2sf11VertexArrayaSEOS0_, .Lfunc_end231-_ZN2sf11VertexArrayaSEOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movb	$1, -17(%rbp)
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end232:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_, .Lfunc_end232-_ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception27
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -56(%rbp)
	movq	%rsi, -64(%rbp)
	movq	-56(%rbp), %rax
	leaq	-40(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rcx, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv
	leaq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	-96(%rbp), %rsi         # 8-byte Reload
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSaIN2sf6VertexEED2Ev
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_
	movq	-64(%rbp), %rsi
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-64(%rbp), %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp468:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_
.Ltmp469:
	jmp	.LBB233_1
.LBB233_1:
	leaq	-32(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB233_5
# %bb.2:
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB233_3:
	.cfi_def_cfa %rbp, 16
.Ltmp470:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -72(%rbp)
	movl	%edx, -76(%rbp)
	leaq	-32(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
# %bb.4:
	movq	-72(%rbp), %rdi
	callq	__clang_call_terminate
.LBB233_5:
	callq	__stack_chk_fail@PLT
.Lfunc_end233:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE, .Lfunc_end233-_ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table233:
.Lexception27:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Ltmp468-.Lfunc_begin27 # >> Call Site 1 <<
	.uleb128 .Ltmp469-.Ltmp468      #   Call between .Ltmp468 and .Ltmp469
	.uleb128 .Ltmp470-.Lfunc_begin27 #     jumps to .Ltmp470
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp469-.Lfunc_begin27 # >> Call Site 2 <<
	.uleb128 .Lfunc_end233-.Ltmp469 #   Call between .Ltmp469 and .Lfunc_end233
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end27:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase15:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_,"axG",@progbits,_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_,comdat
	.weak	_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ # -- Begin function _ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_
	.p2align	4, 0x90
	.type	_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_,@function
_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_: # @_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end234:
	.size	_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_, .Lfunc_end234-_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv,@function
_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv: # @_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rdi, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rcx
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSaIN2sf6VertexEEC2ERKS1_
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end235:
	.size	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv, .Lfunc_end235-_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end236:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_, .Lfunc_end236-_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf6VertexEED2Ev,"axG",@progbits,_ZNSaIN2sf6VertexEED2Ev,comdat
	.weak	_ZNSaIN2sf6VertexEED2Ev # -- Begin function _ZNSaIN2sf6VertexEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf6VertexEED2Ev,@function
_ZNSaIN2sf6VertexEED2Ev:                # @_ZNSaIN2sf6VertexEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end237:
	.size	_ZNSaIN2sf6VertexEED2Ev, .Lfunc_end237-_ZNSaIN2sf6VertexEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_ # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rax
	leaq	-32(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	-56(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_
	movq	-48(%rbp), %rsi
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_
	movq	-48(%rbp), %rdi
	movq	-64(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB238_2
# %bb.1:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB238_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end238:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_, .Lfunc_end238-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_,"axG",@progbits,_ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_,comdat
	.weak	_ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_ # -- Begin function _ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_
	.p2align	4, 0x90
	.type	_ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_,@function
_ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_: # @_ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end239:
	.size	_ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_, .Lfunc_end239-_ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end240:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end240-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end241:
	.size	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end241-_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf6VertexEEC2ERKS1_,"axG",@progbits,_ZNSaIN2sf6VertexEEC2ERKS1_,comdat
	.weak	_ZNSaIN2sf6VertexEEC2ERKS1_ # -- Begin function _ZNSaIN2sf6VertexEEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZNSaIN2sf6VertexEEC2ERKS1_,@function
_ZNSaIN2sf6VertexEEC2ERKS1_:            # @_ZNSaIN2sf6VertexEEC2ERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end242:
	.size	_ZNSaIN2sf6VertexEEC2ERKS1_, .Lfunc_end242-_ZNSaIN2sf6VertexEEC2ERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_: # @_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end243:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_, .Lfunc_end243-_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_ # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end244:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_, .Lfunc_end244-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2ERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_ # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSaIN2sf6VertexEEC2ERKS1_
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end245:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_, .Lfunc_end245-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end246:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev, .Lfunc_end246-_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end247:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev, .Lfunc_end247-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_ # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	movq	-16(%rbp), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end248:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_, .Lfunc_end248-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE,"axG",@progbits,_ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE,comdat
	.weak	_ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE # -- Begin function _ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE,@function
_ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE: # @_ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end249:
	.size	_ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE, .Lfunc_end249-_ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_,"axG",@progbits,_ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_,comdat
	.weak	_ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_ # -- Begin function _ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_
	.p2align	4, 0x90
	.type	_ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_,@function
_ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_: # @_ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end250:
	.size	_ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_, .Lfunc_end250-_ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev,"axG",@progbits,_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev,comdat
	.weak	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev # -- Begin function _ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev,@function
_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev: # @_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception28
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
.Ltmp471:
	movq	%rax, %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv
.Ltmp472:
	jmp	.LBB251_1
.LBB251_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB251_2:
	.cfi_def_cfa %rbp, 16
.Ltmp473:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end251:
	.size	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev, .Lfunc_end251-_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table251:
.Lexception28:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase16-.Lttbaseref16
.Lttbaseref16:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Ltmp471-.Lfunc_begin28 # >> Call Site 1 <<
	.uleb128 .Ltmp472-.Ltmp471      #   Call between .Ltmp471 and .Ltmp472
	.uleb128 .Ltmp473-.Lfunc_begin28 #     jumps to .Ltmp473
	.byte	1                       #   On action: 1
.Lcst_end28:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase16:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv,"axG",@progbits,_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv,comdat
	.weak	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv # -- Begin function _ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv,@function
_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv: # @_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv
	testb	$1, %al
	jne	.LBB252_2
# %bb.1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	16(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm
.LBB252_2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end252:
	.size	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv, .Lfunc_end252-_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev,"axG",@progbits,_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev,comdat
	.weak	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev # -- Begin function _ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev,@function
_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev: # @_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIjED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end253:
	.size	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev, .Lfunc_end253-_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE12_Alloc_hiderD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv,"axG",@progbits,_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv,comdat
	.weak	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv # -- Begin function _ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv
	.p2align	4, 0x90
	.type	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv,@function
_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv: # @_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv
	movq	-16(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv
	movq	-24(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	sete	%dl
	andb	$1, %dl
	movzbl	%dl, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end254:
	.size	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv, .Lfunc_end254-_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm # -- Begin function _ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm,@function
_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm: # @_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception29
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
.Ltmp474:
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv
.Ltmp475:
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jmp	.LBB255_1
.LBB255_1:
.Ltmp476:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv
.Ltmp477:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jmp	.LBB255_2
.LBB255_2:
	movq	-16(%rbp), %rax
	incq	%rax
.Ltmp478:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
.Ltmp479:
	jmp	.LBB255_3
.LBB255_3:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB255_4:
	.cfi_def_cfa %rbp, 16
.Ltmp480:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -24(%rbp)
	movl	%edx, -28(%rbp)
# %bb.5:
	movq	-24(%rbp), %rdi
	callq	__cxa_call_unexpected@PLT
.Lfunc_end255:
	.size	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm, .Lfunc_end255-_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table255:
.Lexception29:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase17-.Lttbaseref17
.Lttbaseref17:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Ltmp474-.Lfunc_begin29 # >> Call Site 1 <<
	.uleb128 .Ltmp479-.Ltmp474      #   Call between .Ltmp474 and .Ltmp479
	.uleb128 .Ltmp480-.Lfunc_begin29 #     jumps to .Ltmp480
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp479-.Lfunc_begin29 # >> Call Site 2 <<
	.uleb128 .Lfunc_end255-.Ltmp479 #   Call between .Ltmp479 and .Lfunc_end255
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end29:
	.byte	127                     # >> Action Record 1 <<
                                        #   Filter TypeInfo -1
	.byte	0                       #   No further actions
	.p2align	2
.Lttbase17:
                                        # >> Filter TypeInfos <<
	.byte	0
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv,"axG",@progbits,_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv,comdat
	.weak	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv # -- Begin function _ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv
	.p2align	4, 0x90
	.type	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv,@function
_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv: # @_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end256:
	.size	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv, .Lfunc_end256-_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv,"axG",@progbits,_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv,comdat
	.weak	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv # -- Begin function _ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv
	.p2align	4, 0x90
	.type	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv,@function
_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv: # @_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$16, %rax
	movq	%rax, %rdi
	callq	_ZNSt14pointer_traitsIPKjE10pointer_toERS0_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end257:
	.size	_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv, .Lfunc_end257-_ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14pointer_traitsIPKjE10pointer_toERS0_,"axG",@progbits,_ZNSt14pointer_traitsIPKjE10pointer_toERS0_,comdat
	.weak	_ZNSt14pointer_traitsIPKjE10pointer_toERS0_ # -- Begin function _ZNSt14pointer_traitsIPKjE10pointer_toERS0_
	.p2align	4, 0x90
	.type	_ZNSt14pointer_traitsIPKjE10pointer_toERS0_,@function
_ZNSt14pointer_traitsIPKjE10pointer_toERS0_: # @_ZNSt14pointer_traitsIPKjE10pointer_toERS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt9addressofIKjEPT_RS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end258:
	.size	_ZNSt14pointer_traitsIPKjE10pointer_toERS0_, .Lfunc_end258-_ZNSt14pointer_traitsIPKjE10pointer_toERS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt9addressofIKjEPT_RS1_,"axG",@progbits,_ZSt9addressofIKjEPT_RS1_,comdat
	.weak	_ZSt9addressofIKjEPT_RS1_ # -- Begin function _ZSt9addressofIKjEPT_RS1_
	.p2align	4, 0x90
	.type	_ZSt9addressofIKjEPT_RS1_,@function
_ZSt9addressofIKjEPT_RS1_:              # @_ZSt9addressofIKjEPT_RS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofIKjEPT_RS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end259:
	.size	_ZSt9addressofIKjEPT_RS1_, .Lfunc_end259-_ZSt9addressofIKjEPT_RS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIKjEPT_RS1_,"axG",@progbits,_ZSt11__addressofIKjEPT_RS1_,comdat
	.weak	_ZSt11__addressofIKjEPT_RS1_ # -- Begin function _ZSt11__addressofIKjEPT_RS1_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIKjEPT_RS1_,@function
_ZSt11__addressofIKjEPT_RS1_:           # @_ZSt11__addressofIKjEPT_RS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end260:
	.size	_ZSt11__addressofIKjEPT_RS1_, .Lfunc_end260-_ZSt11__addressofIKjEPT_RS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm,"axG",@progbits,_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm,comdat
	.weak	_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm # -- Begin function _ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm,@function
_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm: # @_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end261:
	.size	_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm, .Lfunc_end261-_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv,"axG",@progbits,_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv,comdat
	.weak	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv # -- Begin function _ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv,@function
_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv: # @_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end262:
	.size	_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv, .Lfunc_end262-_ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm # -- Begin function _ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm,@function
_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm: # @_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end263:
	.size	_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm, .Lfunc_end263-_ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIjED2Ev,"axG",@progbits,_ZNSaIjED2Ev,comdat
	.weak	_ZNSaIjED2Ev            # -- Begin function _ZNSaIjED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIjED2Ev,@function
_ZNSaIjED2Ev:                           # @_ZNSaIjED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIjED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end264:
	.size	_ZNSaIjED2Ev, .Lfunc_end264-_ZNSaIjED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIjED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIjED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIjED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIjED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIjED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIjED2Ev:    # @_ZN9__gnu_cxx13new_allocatorIjED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end265:
	.size	_ZN9__gnu_cxx13new_allocatorIjED2Ev, .Lfunc_end265-_ZN9__gnu_cxx13new_allocatorIjED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bit_iteratorpLEl,"axG",@progbits,_ZNSt13_Bit_iteratorpLEl,comdat
	.weak	_ZNSt13_Bit_iteratorpLEl # -- Begin function _ZNSt13_Bit_iteratorpLEl
	.p2align	4, 0x90
	.type	_ZNSt13_Bit_iteratorpLEl,@function
_ZNSt13_Bit_iteratorpLEl:               # @_ZNSt13_Bit_iteratorpLEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSt18_Bit_iterator_base7_M_incrEl
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end266:
	.size	_ZNSt13_Bit_iteratorpLEl, .Lfunc_end266-_ZNSt13_Bit_iteratorpLEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt18_Bit_iterator_base7_M_incrEl,"axG",@progbits,_ZNSt18_Bit_iterator_base7_M_incrEl,comdat
	.weak	_ZNSt18_Bit_iterator_base7_M_incrEl # -- Begin function _ZNSt18_Bit_iterator_base7_M_incrEl
	.p2align	4, 0x90
	.type	_ZNSt18_Bit_iterator_base7_M_incrEl,@function
_ZNSt18_Bit_iterator_base7_M_incrEl:    # @_ZNSt18_Bit_iterator_base7_M_incrEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movl	8(%rax), %edx
	movl	%edx, %esi
	addq	%rsi, %rcx
	movq	%rcx, -24(%rbp)
	movq	-24(%rbp), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rax
	cqto
	movl	$64, %ecx
	idivq	%rcx
	shlq	$3, %rax
	movq	-32(%rbp), %rsi         # 8-byte Reload
	addq	(%rsi), %rax
	movq	%rax, (%rsi)
	movq	-24(%rbp), %rax
	cqto
	idivq	%rcx
	movq	%rdx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	jge	.LBB267_2
# %bb.1:
	movq	-24(%rbp), %rax
	addq	$64, %rax
	movq	%rax, -24(%rbp)
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	addq	$-8, %rcx
	movq	%rcx, (%rax)
.LBB267_2:
	movq	-24(%rbp), %rax
                                        # kill: def $eax killed $eax killed $rax
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movl	%eax, 8(%rcx)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end267:
	.size	_ZNSt18_Bit_iterator_base7_M_incrEl, .Lfunc_end267-_ZNSt18_Bit_iterator_base7_M_incrEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5mutex4lockEv,"axG",@progbits,_ZNSt5mutex4lockEv,comdat
	.weak	_ZNSt5mutex4lockEv      # -- Begin function _ZNSt5mutex4lockEv
	.p2align	4, 0x90
	.type	_ZNSt5mutex4lockEv,@function
_ZNSt5mutex4lockEv:                     # @_ZNSt5mutex4lockEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZL20__gthread_mutex_lockP15pthread_mutex_t
	movl	%eax, -12(%rbp)
	cmpl	$0, -12(%rbp)
	je	.LBB268_2
# %bb.1:
	movl	-12(%rbp), %edi
	callq	_ZSt20__throw_system_errori@PLT
.LBB268_2:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end268:
	.size	_ZNSt5mutex4lockEv, .Lfunc_end268-_ZNSt5mutex4lockEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5mutex6unlockEv,"axG",@progbits,_ZNSt5mutex6unlockEv,comdat
	.weak	_ZNSt5mutex6unlockEv    # -- Begin function _ZNSt5mutex6unlockEv
	.p2align	4, 0x90
	.type	_ZNSt5mutex6unlockEv,@function
_ZNSt5mutex6unlockEv:                   # @_ZNSt5mutex6unlockEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZL22__gthread_mutex_unlockP15pthread_mutex_t
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end269:
	.size	_ZNSt5mutex6unlockEv, .Lfunc_end269-_ZNSt5mutex6unlockEv
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function _ZL20__gthread_mutex_lockP15pthread_mutex_t
	.type	_ZL20__gthread_mutex_lockP15pthread_mutex_t,@function
_ZL20__gthread_mutex_lockP15pthread_mutex_t: # @_ZL20__gthread_mutex_lockP15pthread_mutex_t
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	callq	_ZL18__gthread_active_pv
	cmpl	$0, %eax
	je	.LBB270_2
# %bb.1:
	movq	-16(%rbp), %rdi
	callq	pthread_mutex_lock@PLT
	movl	%eax, -4(%rbp)
	jmp	.LBB270_3
.LBB270_2:
	movl	$0, -4(%rbp)
.LBB270_3:
	movl	-4(%rbp), %eax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end270:
	.size	_ZL20__gthread_mutex_lockP15pthread_mutex_t, .Lfunc_end270-_ZL20__gthread_mutex_lockP15pthread_mutex_t
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZL18__gthread_active_pv
	.type	_ZL18__gthread_active_pv,@function
_ZL18__gthread_active_pv:               # @_ZL18__gthread_active_pv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	__pthread_key_create@GOTPCREL(%rip), %rax
	testq	%rax, %rax
	setne	%cl
	movzbl	%cl, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end271:
	.size	_ZL18__gthread_active_pv, .Lfunc_end271-_ZL18__gthread_active_pv
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZL22__gthread_mutex_unlockP15pthread_mutex_t
	.type	_ZL22__gthread_mutex_unlockP15pthread_mutex_t,@function
_ZL22__gthread_mutex_unlockP15pthread_mutex_t: # @_ZL22__gthread_mutex_unlockP15pthread_mutex_t
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	callq	_ZL18__gthread_active_pv
	cmpl	$0, %eax
	je	.LBB272_2
# %bb.1:
	movq	-16(%rbp), %rdi
	callq	pthread_mutex_unlock@PLT
	movl	%eax, -4(%rbp)
	jmp	.LBB272_3
.LBB272_2:
	movl	$0, -4(%rbp)
.LBB272_3:
	movl	-4(%rbp), %eax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end272:
	.size	_ZL22__gthread_mutex_unlockP15pthread_mutex_t, .Lfunc_end272-_ZL22__gthread_mutex_unlockP15pthread_mutex_t
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail14__to_chars_lenImEEjT_i,"axG",@progbits,_ZNSt8__detail14__to_chars_lenImEEjT_i,comdat
	.weak	_ZNSt8__detail14__to_chars_lenImEEjT_i # -- Begin function _ZNSt8__detail14__to_chars_lenImEEjT_i
	.p2align	4, 0x90
	.type	_ZNSt8__detail14__to_chars_lenImEEjT_i,@function
_ZNSt8__detail14__to_chars_lenImEEjT_i: # @_ZNSt8__detail14__to_chars_lenImEEjT_i
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movl	%esi, -20(%rbp)
	movl	$1, -24(%rbp)
	movl	-20(%rbp), %eax
	imull	-20(%rbp), %eax
	movl	%eax, -28(%rbp)
	movl	-28(%rbp), %eax
	imull	-20(%rbp), %eax
	movl	%eax, -32(%rbp)
	movl	-32(%rbp), %eax
	imull	-20(%rbp), %eax
	movl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -40(%rbp)
.LBB273_1:                              # =>This Inner Loop Header: Depth=1
	movq	-16(%rbp), %rax
	movl	-20(%rbp), %ecx
	movl	%ecx, %edx
	cmpq	%rdx, %rax
	jae	.LBB273_3
# %bb.2:
	movl	-24(%rbp), %eax
	movl	%eax, -4(%rbp)
	jmp	.LBB273_10
.LBB273_3:                              #   in Loop: Header=BB273_1 Depth=1
	movq	-16(%rbp), %rax
	movl	-28(%rbp), %ecx
	movl	%ecx, %edx
	cmpq	%rdx, %rax
	jae	.LBB273_5
# %bb.4:
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -4(%rbp)
	jmp	.LBB273_10
.LBB273_5:                              #   in Loop: Header=BB273_1 Depth=1
	movq	-16(%rbp), %rax
	movl	-32(%rbp), %ecx
	movl	%ecx, %edx
	cmpq	%rdx, %rax
	jae	.LBB273_7
# %bb.6:
	movl	-24(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -4(%rbp)
	jmp	.LBB273_10
.LBB273_7:                              #   in Loop: Header=BB273_1 Depth=1
	movq	-16(%rbp), %rax
	cmpq	-40(%rbp), %rax
	jae	.LBB273_9
# %bb.8:
	movl	-24(%rbp), %eax
	addl	$3, %eax
	movl	%eax, -4(%rbp)
	jmp	.LBB273_10
.LBB273_9:                              #   in Loop: Header=BB273_1 Depth=1
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rcx, %rax
	xorl	%edx, %edx
                                        # kill: def $rdx killed $edx
	movq	-48(%rbp), %rcx         # 8-byte Reload
	divq	%rcx
	movq	%rax, -16(%rbp)
	movl	-24(%rbp), %esi
	addl	$4, %esi
	movl	%esi, -24(%rbp)
	jmp	.LBB273_1
.LBB273_10:
	movl	-4(%rbp), %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end273:
	.size	_ZNSt8__detail14__to_chars_lenImEEjT_i, .Lfunc_end273-_ZNSt8__detail14__to_chars_lenImEEjT_i
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail18__to_chars_10_implImEEvPcjT_,"axG",@progbits,_ZNSt8__detail18__to_chars_10_implImEEvPcjT_,comdat
	.weak	_ZNSt8__detail18__to_chars_10_implImEEvPcjT_ # -- Begin function _ZNSt8__detail18__to_chars_10_implImEEvPcjT_
	.p2align	4, 0x90
	.type	_ZNSt8__detail18__to_chars_10_implImEEvPcjT_,@function
_ZNSt8__detail18__to_chars_10_implImEEvPcjT_: # @_ZNSt8__detail18__to_chars_10_implImEEvPcjT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movq	%rdx, -24(%rbp)
	movl	-12(%rbp), %eax
	subl	$1, %eax
	movl	%eax, -28(%rbp)
.LBB274_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$100, -24(%rbp)
	jb	.LBB274_3
# %bb.2:                                #   in Loop: Header=BB274_1 Depth=1
	movq	-24(%rbp), %rax
	xorl	%ecx, %ecx
	movl	%ecx, %edx
	movl	$100, %esi
	divq	%rsi
	shlq	$1, %rdx
	movq	%rdx, -40(%rbp)
	movq	-24(%rbp), %rdx
	movq	%rdx, %rax
	xorl	%ecx, %ecx
	movl	%ecx, %edx
	divq	%rsi
	movq	%rax, -24(%rbp)
	movq	-40(%rbp), %rax
	leaq	_ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits(%rip), %rsi
	movb	1(%rsi,%rax), %dil
	movq	-8(%rbp), %rax
	movl	-28(%rbp), %ecx
	movl	%ecx, %r8d
	movb	%dil, (%rax,%r8)
	movq	-40(%rbp), %rax
	movb	(%rsi,%rax), %dil
	movq	-8(%rbp), %rax
	movl	-28(%rbp), %ecx
	subl	$1, %ecx
	movl	%ecx, %ecx
	movl	%ecx, %esi
	movb	%dil, (%rax,%rsi)
	movl	-28(%rbp), %ecx
	subl	$2, %ecx
	movl	%ecx, -28(%rbp)
	jmp	.LBB274_1
.LBB274_3:
	cmpq	$10, -24(%rbp)
	jb	.LBB274_5
# %bb.4:
	movq	-24(%rbp), %rax
	shlq	$1, %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rax
	leaq	_ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits(%rip), %rcx
	movb	1(%rcx,%rax), %dl
	movq	-8(%rbp), %rax
	movb	%dl, 1(%rax)
	movq	-48(%rbp), %rax
	movb	(%rcx,%rax), %dl
	movq	-8(%rbp), %rax
	movb	%dl, (%rax)
	jmp	.LBB274_6
.LBB274_5:
	movq	-24(%rbp), %rax
	addq	$48, %rax
                                        # kill: def $al killed $al killed $rax
	movq	-8(%rbp), %rcx
	movb	%al, (%rcx)
.LBB274_6:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end274:
	.size	_ZNSt8__detail18__to_chars_10_implImEEvPcjT_, .Lfunc_end274-_ZNSt8__detail18__to_chars_10_implImEEvPcjT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end275:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev, .Lfunc_end275-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaIN2sf6VertexEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end276:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev, .Lfunc_end276-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf6VertexEEC2Ev,"axG",@progbits,_ZNSaIN2sf6VertexEEC2Ev,comdat
	.weak	_ZNSaIN2sf6VertexEEC2Ev # -- Begin function _ZNSaIN2sf6VertexEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf6VertexEEC2Ev,@function
_ZNSaIN2sf6VertexEEC2Ev:                # @_ZNSaIN2sf6VertexEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end277:
	.size	_ZNSaIN2sf6VertexEEC2Ev, .Lfunc_end277-_ZNSaIN2sf6VertexEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end278:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev, .Lfunc_end278-_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev,@function
_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev: # @_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end279:
	.size	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev, .Lfunc_end279-_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaIN2sf11VertexArrayEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end280:
	.size	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev, .Lfunc_end280-_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf11VertexArrayEEC2Ev,"axG",@progbits,_ZNSaIN2sf11VertexArrayEEC2Ev,comdat
	.weak	_ZNSaIN2sf11VertexArrayEEC2Ev # -- Begin function _ZNSaIN2sf11VertexArrayEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf11VertexArrayEEC2Ev,@function
_ZNSaIN2sf11VertexArrayEEC2Ev:          # @_ZNSaIN2sf11VertexArrayEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end281:
	.size	_ZNSaIN2sf11VertexArrayEEC2Ev, .Lfunc_end281-_ZNSaIN2sf11VertexArrayEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end282:
	.size	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev, .Lfunc_end282-_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end283:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev, .Lfunc_end283-_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev,@function
_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev: # @_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end284:
	.size	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev, .Lfunc_end284-_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaIPKSt6vectorIbSaIbEEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end285:
	.size	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev, .Lfunc_end285-_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIPKSt6vectorIbSaIbEEEC2Ev,"axG",@progbits,_ZNSaIPKSt6vectorIbSaIbEEEC2Ev,comdat
	.weak	_ZNSaIPKSt6vectorIbSaIbEEEC2Ev # -- Begin function _ZNSaIPKSt6vectorIbSaIbEEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIPKSt6vectorIbSaIbEEEC2Ev,@function
_ZNSaIPKSt6vectorIbSaIbEEEC2Ev:         # @_ZNSaIPKSt6vectorIbSaIbEEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end286:
	.size	_ZNSaIPKSt6vectorIbSaIbEEEC2Ev, .Lfunc_end286-_ZNSaIPKSt6vectorIbSaIbEEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end287:
	.size	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev, .Lfunc_end287-_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end288:
	.size	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev, .Lfunc_end288-_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev # -- Begin function _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev,@function
_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev: # @_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end289:
	.size	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev, .Lfunc_end289-_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaIPKN2sf5ImageEEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end290:
	.size	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev, .Lfunc_end290-_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIPKN2sf5ImageEEC2Ev,"axG",@progbits,_ZNSaIPKN2sf5ImageEEC2Ev,comdat
	.weak	_ZNSaIPKN2sf5ImageEEC2Ev # -- Begin function _ZNSaIPKN2sf5ImageEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaIPKN2sf5ImageEEC2Ev,@function
_ZNSaIPKN2sf5ImageEEC2Ev:               # @_ZNSaIPKN2sf5ImageEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end291:
	.size	_ZNSaIPKN2sf5ImageEEC2Ev, .Lfunc_end291-_ZNSaIPKN2sf5ImageEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end292:
	.size	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev, .Lfunc_end292-_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev: # @_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end293:
	.size	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev, .Lfunc_end293-_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseItSaItEEC2Ev,"axG",@progbits,_ZNSt12_Vector_baseItSaItEEC2Ev,comdat
	.weak	_ZNSt12_Vector_baseItSaItEEC2Ev # -- Begin function _ZNSt12_Vector_baseItSaItEEC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseItSaItEEC2Ev,@function
_ZNSt12_Vector_baseItSaItEEC2Ev:        # @_ZNSt12_Vector_baseItSaItEEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end294:
	.size	_ZNSt12_Vector_baseItSaItEEC2Ev, .Lfunc_end294-_ZNSt12_Vector_baseItSaItEEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev,"axG",@progbits,_ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev,comdat
	.weak	_ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev # -- Begin function _ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev,@function
_ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev: # @_ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSaItEC2Ev
	movq	-16(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end295:
	.size	_ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev, .Lfunc_end295-_ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaItEC2Ev,"axG",@progbits,_ZNSaItEC2Ev,comdat
	.weak	_ZNSaItEC2Ev            # -- Begin function _ZNSaItEC2Ev
	.p2align	4, 0x90
	.type	_ZNSaItEC2Ev,@function
_ZNSaItEC2Ev:                           # @_ZNSaItEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorItEC2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end296:
	.size	_ZNSaItEC2Ev, .Lfunc_end296-_ZNSaItEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end297:
	.size	_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev, .Lfunc_end297-_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorItEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorItEC2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorItEC2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorItEC2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorItEC2Ev,@function
_ZN9__gnu_cxx13new_allocatorItEC2Ev:    # @_ZN9__gnu_cxx13new_allocatorItEC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end298:
	.size	_ZN9__gnu_cxx13new_allocatorItEC2Ev, .Lfunc_end298-_ZN9__gnu_cxx13new_allocatorItEC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIhSaIhEEaSERKS1_,"axG",@progbits,_ZNSt6vectorIhSaIhEEaSERKS1_,comdat
	.weak	_ZNSt6vectorIhSaIhEEaSERKS1_ # -- Begin function _ZNSt6vectorIhSaIhEEaSERKS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIhSaIhEEaSERKS1_,@function
_ZNSt6vectorIhSaIhEEaSERKS1_:           # @_ZNSt6vectorIhSaIhEEaSERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$192, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	%rax, -16(%rbp)
	movq	%rax, -96(%rbp)         # 8-byte Spill
	je	.LBB299_8
# %bb.1:
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIhSaIhEE4sizeEv
	movq	%rax, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIhSaIhEE8capacityEv
	movq	-104(%rbp), %rcx        # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB299_3
# %bb.2:
	movq	-24(%rbp), %rsi
	movq	-16(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIhSaIhEE5beginEv
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIhSaIhEE3endEv
	movq	%rax, -48(%rbp)
	movq	-40(%rbp), %rdx
	movq	-48(%rbp), %rcx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	callq	_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_
	movq	%rax, -32(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	8(%rax), %rsi
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rsi
	movq	16(%rcx), %rdx
	movq	(%rcx), %rdi
	subq	%rdi, %rdx
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm
	movq	-32(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	(%rcx), %rax
	addq	-24(%rbp), %rax
	movq	%rax, 16(%rcx)
	jmp	.LBB299_7
.LBB299_3:
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIhSaIhEE4sizeEv
	cmpq	-24(%rbp), %rax
	jb	.LBB299_5
# %bb.4:
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIhSaIhEE5beginEv
	movq	%rax, -64(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNKSt6vectorIhSaIhEE3endEv
	movq	%rax, -72(%rbp)
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIhSaIhEE5beginEv
	movq	%rax, -80(%rbp)
	movq	-64(%rbp), %rdi
	movq	-72(%rbp), %rsi
	movq	-80(%rbp), %rdx
	callq	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_
	movq	%rax, -56(%rbp)
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIhSaIhEE3endEv
	movq	%rax, -88(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	movq	-56(%rbp), %rdi
	movq	-88(%rbp), %rsi
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E
	jmp	.LBB299_6
.LBB299_5:
	movq	-16(%rbp), %rax
	movq	(%rax), %rdi
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rdi, -136(%rbp)        # 8-byte Spill
	movq	%rcx, %rdi
	movq	%rax, -144(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIhSaIhEE4sizeEv
	movq	-144(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdx
	movq	-136(%rbp), %rdi        # 8-byte Reload
	movq	%rcx, %rsi
	callq	_ZSt4copyIPhS0_ET0_T_S2_S1_
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -152(%rbp)        # 8-byte Spill
	movq	%rcx, -160(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIhSaIhEE4sizeEv
	movq	-160(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movq	-16(%rbp), %rax
	movq	8(%rax), %rsi
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rdx
	movq	%rax, %rdi
	movq	%rcx, -168(%rbp)        # 8-byte Spill
	movq	%rsi, -176(%rbp)        # 8-byte Spill
	movq	%rdx, -184(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	movq	-168(%rbp), %rdi        # 8-byte Reload
	movq	-176(%rbp), %rsi        # 8-byte Reload
	movq	-184(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E
.LBB299_6:
	jmp	.LBB299_7
.LBB299_7:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	addq	-24(%rbp), %rcx
	movq	%rcx, 8(%rax)
.LBB299_8:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$192, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end299:
	.size	_ZNSt6vectorIhSaIhEEaSERKS1_, .Lfunc_end299-_ZNSt6vectorIhSaIhEEaSERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIhSaIhEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIhSaIhEE4sizeEv,comdat
	.weak	_ZNKSt6vectorIhSaIhEE4sizeEv # -- Begin function _ZNKSt6vectorIhSaIhEE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIhSaIhEE4sizeEv,@function
_ZNKSt6vectorIhSaIhEE4sizeEv:           # @_ZNKSt6vectorIhSaIhEE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end300:
	.size	_ZNKSt6vectorIhSaIhEE4sizeEv, .Lfunc_end300-_ZNKSt6vectorIhSaIhEE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIhSaIhEE8capacityEv,"axG",@progbits,_ZNKSt6vectorIhSaIhEE8capacityEv,comdat
	.weak	_ZNKSt6vectorIhSaIhEE8capacityEv # -- Begin function _ZNKSt6vectorIhSaIhEE8capacityEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIhSaIhEE8capacityEv,@function
_ZNKSt6vectorIhSaIhEE8capacityEv:       # @_ZNKSt6vectorIhSaIhEE8capacityEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	16(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end301:
	.size	_ZNKSt6vectorIhSaIhEE8capacityEv, .Lfunc_end301-_ZNKSt6vectorIhSaIhEE8capacityEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_,"axG",@progbits,_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_,comdat
	.weak	_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_ # -- Begin function _ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_,@function
_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_: # @_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception30
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$128, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdx, -16(%rbp)
	movq	%rcx, -24(%rbp)
	movq	%rdi, -48(%rbp)
	movq	%rsi, -56(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm
	movq	%rax, -64(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-64(%rbp), %rdx
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
.Ltmp481:
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E
.Ltmp482:
	jmp	.LBB302_1
.LBB302_1:
	movq	-64(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB302_11
# %bb.2:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$128, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB302_3:
	.cfi_def_cfa %rbp, 16
.Ltmp483:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -72(%rbp)
	movl	%edx, -76(%rbp)
# %bb.4:
	movq	-72(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-64(%rbp), %rsi
	movq	-56(%rbp), %rdx
.Ltmp484:
	movq	-88(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm
.Ltmp485:
	jmp	.LBB302_5
.LBB302_5:
.Ltmp486:
	callq	__cxa_rethrow@PLT
.Ltmp487:
	jmp	.LBB302_10
.LBB302_6:
.Ltmp488:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -72(%rbp)
	movl	%edx, -76(%rbp)
.Ltmp489:
	callq	__cxa_end_catch@PLT
.Ltmp490:
	jmp	.LBB302_7
.LBB302_7:
	jmp	.LBB302_8
.LBB302_8:
	movq	-72(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB302_9:
.Ltmp491:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -116(%rbp)        # 4-byte Spill
	callq	__clang_call_terminate
.LBB302_10:
.LBB302_11:
	callq	__stack_chk_fail@PLT
.Lfunc_end302:
	.size	_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_, .Lfunc_end302-_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table302:
.Lexception30:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase18-.Lttbaseref18
.Lttbaseref18:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Lfunc_begin30-.Lfunc_begin30 # >> Call Site 1 <<
	.uleb128 .Ltmp481-.Lfunc_begin30 #   Call between .Lfunc_begin30 and .Ltmp481
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp481-.Lfunc_begin30 # >> Call Site 2 <<
	.uleb128 .Ltmp482-.Ltmp481      #   Call between .Ltmp481 and .Ltmp482
	.uleb128 .Ltmp483-.Lfunc_begin30 #     jumps to .Ltmp483
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp482-.Lfunc_begin30 # >> Call Site 3 <<
	.uleb128 .Ltmp484-.Ltmp482      #   Call between .Ltmp482 and .Ltmp484
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp484-.Lfunc_begin30 # >> Call Site 4 <<
	.uleb128 .Ltmp487-.Ltmp484      #   Call between .Ltmp484 and .Ltmp487
	.uleb128 .Ltmp488-.Lfunc_begin30 #     jumps to .Ltmp488
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp489-.Lfunc_begin30 # >> Call Site 5 <<
	.uleb128 .Ltmp490-.Ltmp489      #   Call between .Ltmp489 and .Ltmp490
	.uleb128 .Ltmp491-.Lfunc_begin30 #     jumps to .Ltmp491
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp490-.Lfunc_begin30 # >> Call Site 6 <<
	.uleb128 .Lfunc_end302-.Ltmp490 #   Call between .Ltmp490 and .Lfunc_end302
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end30:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase18:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt6vectorIhSaIhEE5beginEv,"axG",@progbits,_ZNKSt6vectorIhSaIhEE5beginEv,comdat
	.weak	_ZNKSt6vectorIhSaIhEE5beginEv # -- Begin function _ZNKSt6vectorIhSaIhEE5beginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIhSaIhEE5beginEv,@function
_ZNKSt6vectorIhSaIhEE5beginEv:          # @_ZNKSt6vectorIhSaIhEE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB303_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB303_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end303:
	.size	_ZNKSt6vectorIhSaIhEE5beginEv, .Lfunc_end303-_ZNKSt6vectorIhSaIhEE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIhSaIhEE3endEv,"axG",@progbits,_ZNKSt6vectorIhSaIhEE3endEv,comdat
	.weak	_ZNKSt6vectorIhSaIhEE3endEv # -- Begin function _ZNKSt6vectorIhSaIhEE3endEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIhSaIhEE3endEv,@function
_ZNKSt6vectorIhSaIhEE3endEv:            # @_ZNKSt6vectorIhSaIhEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB304_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB304_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end304:
	.size	_ZNKSt6vectorIhSaIhEE3endEv, .Lfunc_end304-_ZNKSt6vectorIhSaIhEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPhhEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E # -- Begin function _ZSt8_DestroyIPhhEvT_S1_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E,@function
_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E:       # @_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPhEvT_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end305:
	.size	_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E, .Lfunc_end305-_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end306:
	.size	_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv, .Lfunc_end306-_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm,"axG",@progbits,_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm,comdat
	.weak	_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm # -- Begin function _ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm,@function
_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm: # @_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB307_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm
.LBB307_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end307:
	.size	_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm, .Lfunc_end307-_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E # -- Begin function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E,@function
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E: # @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB308_2
# %bb.1:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB308_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end308:
	.size	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E, .Lfunc_end308-_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_,"axG",@progbits,_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_,comdat
	.weak	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_ # -- Begin function _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_
	.p2align	4, 0x90
	.type	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_,@function
_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_: # @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_
	movq	%rax, -80(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-72(%rbp), %rdi
	movq	-80(%rbp), %rsi
	movq	-56(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB309_2
# %bb.1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB309_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end309:
	.size	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_, .Lfunc_end309-_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIhSaIhEE5beginEv,"axG",@progbits,_ZNSt6vectorIhSaIhEE5beginEv,comdat
	.weak	_ZNSt6vectorIhSaIhEE5beginEv # -- Begin function _ZNSt6vectorIhSaIhEE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIhSaIhEE5beginEv,@function
_ZNSt6vectorIhSaIhEE5beginEv:           # @_ZNSt6vectorIhSaIhEE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB310_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB310_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end310:
	.size	_ZNSt6vectorIhSaIhEE5beginEv, .Lfunc_end310-_ZNSt6vectorIhSaIhEE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIhSaIhEE3endEv,"axG",@progbits,_ZNSt6vectorIhSaIhEE3endEv,comdat
	.weak	_ZNSt6vectorIhSaIhEE3endEv # -- Begin function _ZNSt6vectorIhSaIhEE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIhSaIhEE3endEv,@function
_ZNSt6vectorIhSaIhEE3endEv:             # @_ZNSt6vectorIhSaIhEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB311_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB311_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end311:
	.size	_ZNSt6vectorIhSaIhEE3endEv, .Lfunc_end311-_ZNSt6vectorIhSaIhEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyIPhS0_ET0_T_S2_S1_,"axG",@progbits,_ZSt4copyIPhS0_ET0_T_S2_S1_,comdat
	.weak	_ZSt4copyIPhS0_ET0_T_S2_S1_ # -- Begin function _ZSt4copyIPhS0_ET0_T_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt4copyIPhS0_ET0_T_S2_S1_,@function
_ZSt4copyIPhS0_ET0_T_S2_S1_:            # @_ZSt4copyIPhS0_ET0_T_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPhET_S1_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPhET_S1_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end312:
	.size	_ZSt4copyIPhS0_ET0_T_S2_S1_, .Lfunc_end312-_ZSt4copyIPhS0_ET0_T_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end313:
	.size	_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E, .Lfunc_end313-_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm,@function
_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm: # @_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB314_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIhEE8allocateERS0_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB314_3
.LBB314_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB314_3
.LBB314_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end314:
	.size	_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm, .Lfunc_end314-_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rcx, -56(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jne	.LBB315_2
# %bb.1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB315_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end315:
	.size	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E, .Lfunc_end315-_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIhEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_traitsISaIhEE8allocateERS0_m,comdat
	.weak	_ZNSt16allocator_traitsISaIhEE8allocateERS0_m # -- Begin function _ZNSt16allocator_traitsISaIhEE8allocateERS0_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIhEE8allocateERS0_m,@function
_ZNSt16allocator_traitsISaIhEE8allocateERS0_m: # @_ZNSt16allocator_traitsISaIhEE8allocateERS0_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end316:
	.size	_ZNSt16allocator_traitsISaIhEE8allocateERS0_m, .Lfunc_end316-_ZNSt16allocator_traitsISaIhEE8allocateERS0_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB317_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB317_2:
	movq	-16(%rbp), %rax
	shlq	$0, %rax
	movq	%rax, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end317:
	.size	_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv, .Lfunc_end317-_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$9223372036854775807, %rax # imm = 0x7FFFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end318:
	.size	_ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv, .Lfunc_end318-_ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_,"axG",@progbits,_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_,comdat
	.weak	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_ # -- Begin function _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_,@function
_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_: # @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -48(%rbp)
	movb	$1, -49(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jne	.LBB319_2
# %bb.1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB319_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end319:
	.size	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_, .Lfunc_end319-_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_ # -- Begin function _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB320_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB320_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end320:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_, .Lfunc_end320-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_,"axG",@progbits,_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_,comdat
	.weak	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_ # -- Begin function _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_,@function
_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_: # @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_
	movq	%rax, -56(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_
	movq	%rax, -64(%rbp)
	movq	-48(%rbp), %rdx
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
	callq	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jne	.LBB321_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB321_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end321:
	.size	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_, .Lfunc_end321-_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_,"axG",@progbits,_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_,comdat
	.weak	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_ # -- Begin function _ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_,@function
_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_: # @_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	movq	-24(%rbp), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	movq	-32(%rbp), %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPhET_S1_
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_
	leaq	-32(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIPhET_RKS1_S1_
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jne	.LBB322_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB322_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end322:
	.size	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_, .Lfunc_end322-_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_,"axG",@progbits,_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_,comdat
	.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_ # -- Begin function _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_,@function
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_: # @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB323_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB323_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end323:
	.size	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_, .Lfunc_end323-_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIPhET_RKS1_S1_,"axG",@progbits,_ZSt12__niter_wrapIPhET_RKS1_S1_,comdat
	.weak	_ZSt12__niter_wrapIPhET_RKS1_S1_ # -- Begin function _ZSt12__niter_wrapIPhET_RKS1_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIPhET_RKS1_S1_,@function
_ZSt12__niter_wrapIPhET_RKS1_S1_:       # @_ZSt12__niter_wrapIPhET_RKS1_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end324:
	.size	_ZSt12__niter_wrapIPhET_RKS1_S1_, .Lfunc_end324-_ZSt12__niter_wrapIPhET_RKS1_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end325:
	.size	_ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_, .Lfunc_end325-_ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE # -- Begin function _ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE,@function
_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE: # @_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -24(%rbp)         # 8-byte Spill
	jne	.LBB326_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB326_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end326:
	.size	_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE, .Lfunc_end326-_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPhET_S1_,"axG",@progbits,_ZSt12__niter_baseIPhET_S1_,comdat
	.weak	_ZSt12__niter_baseIPhET_S1_ # -- Begin function _ZSt12__niter_baseIPhET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPhET_S1_,@function
_ZSt12__niter_baseIPhET_S1_:            # @_ZSt12__niter_baseIPhET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end327:
	.size	_ZSt12__niter_baseIPhET_S1_, .Lfunc_end327-_ZSt12__niter_baseIPhET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end328:
	.size	_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_, .Lfunc_end328-_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_ # -- Begin function _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB329_2
# %bb.1:
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	-32(%rbp), %rax
	shlq	$0, %rax
	movq	%rax, %rdx
	callq	memmove@PLT
.LBB329_2:
	movq	-24(%rbp), %rax
	addq	-32(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end329:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_, .Lfunc_end329-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end330:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv, .Lfunc_end330-_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_: # @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end331:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_, .Lfunc_end331-_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC2ERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPhEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPhEvT_S1_,comdat
	.weak	_ZSt8_DestroyIPhEvT_S1_ # -- Begin function _ZSt8_DestroyIPhEvT_S1_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPhEvT_S1_,@function
_ZSt8_DestroyIPhEvT_S1_:                # @_ZSt8_DestroyIPhEvT_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end332:
	.size	_ZSt8_DestroyIPhEvT_S1_, .Lfunc_end332-_ZSt8_DestroyIPhEvT_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end333:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_, .Lfunc_end333-_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm,"axG",@progbits,_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm,comdat
	.weak	_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm # -- Begin function _ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm,@function
_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm: # @_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end334:
	.size	_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm, .Lfunc_end334-_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm # -- Begin function _ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm,@function
_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm: # @_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end335:
	.size	_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm, .Lfunc_end335-_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_,"axG",@progbits,_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_,comdat
	.weak	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_ # -- Begin function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_,@function
_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_: # @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB336_2
# %bb.1:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB336_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end336:
	.size	_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_, .Lfunc_end336-_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end337:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_, .Lfunc_end337-_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_,"axG",@progbits,_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_,comdat
	.weak	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_ # -- Begin function _ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_,@function
_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_: # @_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	movq	-24(%rbp), %rcx
	movq	%rcx, -56(%rbp)
	movq	-56(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	movq	-32(%rbp), %rcx
	movq	%rcx, -64(%rbp)
	movq	-64(%rbp), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_
	movq	-40(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB338_2
# %bb.1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB338_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end338:
	.size	_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_, .Lfunc_end338-_ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_,"axG",@progbits,_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_,comdat
	.weak	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_ # -- Begin function _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_,@function
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_: # @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	leaq	-16(%rbp), %rdi
	movq	%rcx, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB339_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB339_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end339:
	.size	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_, .Lfunc_end339-_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE # -- Begin function _ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE,@function
_ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE: # @_ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -24(%rbp)         # 8-byte Spill
	jne	.LBB340_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB340_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end340:
	.size	_ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE, .Lfunc_end340-_ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	addq	%rcx, %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB341_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB341_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end341:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl, .Lfunc_end341-_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_,@function
_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_: # @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end342:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_, .Lfunc_end342-_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC2ERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end343:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv, .Lfunc_end343-_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_ # -- Begin function _ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_,@function
_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_: # @_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -16(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt12__niter_baseIPhET_S1_
	movq	-32(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPhET_S1_
	movq	-16(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPhET_S1_
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIPhET_RKS1_S1_
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB344_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB344_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end344:
	.size	_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_, .Lfunc_end344-_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIPhET_S1_,"axG",@progbits,_ZSt12__miter_baseIPhET_S1_,comdat
	.weak	_ZSt12__miter_baseIPhET_S1_ # -- Begin function _ZSt12__miter_baseIPhET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIPhET_S1_,@function
_ZSt12__miter_baseIPhET_S1_:            # @_ZSt12__miter_baseIPhET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end345:
	.size	_ZSt12__miter_baseIPhET_S1_, .Lfunc_end345-_ZSt12__miter_baseIPhET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_ # -- Begin function _ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_,@function
_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_: # @_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end346:
	.size	_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_, .Lfunc_end346-_ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_ # -- Begin function _ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_,@function
_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_: # @_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end347:
	.size	_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_, .Lfunc_end347-_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_,"axG",@progbits,_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_,comdat
	.weak	_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_ # -- Begin function _ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_,@function
_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_: # @_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end348:
	.size	_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_, .Lfunc_end348-_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_,"axG",@progbits,_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_,comdat
	.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_ # -- Begin function _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_,@function
_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_: # @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt4copyIPhS0_ET0_T_S2_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end349:
	.size	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_, .Lfunc_end349-_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZThn8_N2sf6SpriteD1Ev,"axG",@progbits,_ZThn8_N2sf6SpriteD1Ev,comdat
	.weak	_ZThn8_N2sf6SpriteD1Ev  # -- Begin function _ZThn8_N2sf6SpriteD1Ev
	.p2align	4, 0x90
	.type	_ZThn8_N2sf6SpriteD1Ev,@function
_ZThn8_N2sf6SpriteD1Ev:                 # @_ZThn8_N2sf6SpriteD1Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$-8, %rax
	movq	%rax, %rdi
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	jmp	_ZN2sf6SpriteD2Ev       # TAILCALL
.Lfunc_end350:
	.size	_ZThn8_N2sf6SpriteD1Ev, .Lfunc_end350-_ZThn8_N2sf6SpriteD1Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_,"axG",@progbits,_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_,comdat
	.weak	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ # -- Begin function _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.p2align	4, 0x90
	.type	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_,@function
_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_: # @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end351:
	.size	_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_, .Lfunc_end351-_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Function_baseC2Ev,"axG",@progbits,_ZNSt14_Function_baseC2Ev,comdat
	.weak	_ZNSt14_Function_baseC2Ev # -- Begin function _ZNSt14_Function_baseC2Ev
	.p2align	4, 0x90
	.type	_ZNSt14_Function_baseC2Ev,@function
_ZNSt14_Function_baseC2Ev:              # @_ZNSt14_Function_baseC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end352:
	.size	_ZNSt14_Function_baseC2Ev, .Lfunc_end352-_ZNSt14_Function_baseC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E # -- Begin function _ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E,@function
_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E: # @_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end353:
	.size	_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E, .Lfunc_end353-_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end354:
	.size	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv, .Lfunc_end354-_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev: # @_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception31
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$3, %rdx
	movabsq	$-6148914691236517205, %rsi # imm = 0xAAAAAAAAAAAAAAAB
	imulq	%rsi, %rdx
.Ltmp492:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
.Ltmp493:
	jmp	.LBB355_1
.LBB355_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB355_2:
	.cfi_def_cfa %rbp, 16
.Ltmp494:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end355:
	.size	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev, .Lfunc_end355-_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table355:
.Lexception31:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase19-.Lttbaseref19
.Lttbaseref19:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Ltmp492-.Lfunc_begin31 # >> Call Site 1 <<
	.uleb128 .Ltmp493-.Ltmp492      #   Call between .Ltmp492 and .Ltmp493
	.uleb128 .Ltmp494-.Lfunc_begin31 #     jumps to .Ltmp494
	.byte	1                       #   On action: 1
.Lcst_end31:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase19:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_,"axG",@progbits,_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_,comdat
	.weak	_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_ # -- Begin function _ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_,@function
_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_: # @_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end356:
	.size	_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_, .Lfunc_end356-_ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_,comdat
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
.LBB357_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB357_4
# %bb.2:                                #   in Loop: Header=BB357_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_
	movq	%rax, %rdi
	callq	_ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_
# %bb.3:                                #   in Loop: Header=BB357_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$24, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB357_1
.LBB357_4:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end357:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_, .Lfunc_end357-_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_,"axG",@progbits,_ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_,comdat
	.weak	_ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_ # -- Begin function _ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_,@function
_ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_: # @_ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end358:
	.size	_ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_, .Lfunc_end358-_ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_,"axG",@progbits,_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_,comdat
	.weak	_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_ # -- Begin function _ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_
	.p2align	4, 0x90
	.type	_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_,@function
_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_: # @_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end359:
	.size	_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_, .Lfunc_end359-_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m # -- Begin function _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m,@function
_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m: # @_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB360_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m
.LBB360_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end360:
	.size	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m, .Lfunc_end360-_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end361:
	.size	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev, .Lfunc_end361-_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m,"axG",@progbits,_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m,comdat
	.weak	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m # -- Begin function _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m,@function
_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m: # @_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end362:
	.size	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m, .Lfunc_end362-_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end363:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m, .Lfunc_end363-_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev,"axG",@progbits,_ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev,comdat
	.weak	_ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev # -- Begin function _ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev,@function
_ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev: # @_ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end364:
	.size	_ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev, .Lfunc_end364-_ZNSaISt6vectorIN2sf6VertexESaIS1_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end365:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev, .Lfunc_end365-_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E # -- Begin function _ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E,@function
_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E: # @_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end366:
	.size	_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E, .Lfunc_end366-_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end367:
	.size	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end367-_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev,@function
_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev: # @_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception32
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$5, %rdx
.Ltmp495:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m
.Ltmp496:
	jmp	.LBB368_1
.LBB368_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB368_2:
	.cfi_def_cfa %rbp, 16
.Ltmp497:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end368:
	.size	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev, .Lfunc_end368-_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table368:
.Lexception32:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase20-.Lttbaseref20
.Lttbaseref20:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Ltmp495-.Lfunc_begin32 # >> Call Site 1 <<
	.uleb128 .Ltmp496-.Ltmp495      #   Call between .Ltmp495 and .Ltmp496
	.uleb128 .Ltmp497-.Lfunc_begin32 #     jumps to .Ltmp497
	.byte	1                       #   On action: 1
.Lcst_end32:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase20:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_ # -- Begin function _ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_,@function
_ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_: # @_ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end369:
	.size	_ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_, .Lfunc_end369-_ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_,comdat
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
.LBB370_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB370_4
# %bb.2:                                #   in Loop: Header=BB370_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_
	movq	%rax, %rdi
	callq	_ZSt8_DestroyIN2sf12VertexBufferEEvPT_
# %bb.3:                                #   in Loop: Header=BB370_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$32, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB370_1
.LBB370_4:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end370:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_, .Lfunc_end370-_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIN2sf12VertexBufferEEvPT_,"axG",@progbits,_ZSt8_DestroyIN2sf12VertexBufferEEvPT_,comdat
	.weak	_ZSt8_DestroyIN2sf12VertexBufferEEvPT_ # -- Begin function _ZSt8_DestroyIN2sf12VertexBufferEEvPT_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIN2sf12VertexBufferEEvPT_,@function
_ZSt8_DestroyIN2sf12VertexBufferEEvPT_: # @_ZSt8_DestroyIN2sf12VertexBufferEEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*(%rcx)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end371:
	.size	_ZSt8_DestroyIN2sf12VertexBufferEEvPT_, .Lfunc_end371-_ZSt8_DestroyIN2sf12VertexBufferEEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_,comdat
	.weak	_ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_ # -- Begin function _ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_,@function
_ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_: # @_ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end372:
	.size	_ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_, .Lfunc_end372-_ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m,comdat
	.weak	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m # -- Begin function _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m,@function
_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m: # @_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB373_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m
.LBB373_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end373:
	.size	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m, .Lfunc_end373-_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIN2sf12VertexBufferEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end374:
	.size	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev, .Lfunc_end374-_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m,@function
_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m: # @_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end375:
	.size	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m, .Lfunc_end375-_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m,@function
_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m: # @_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end376:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m, .Lfunc_end376-_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf12VertexBufferEED2Ev,"axG",@progbits,_ZNSaIN2sf12VertexBufferEED2Ev,comdat
	.weak	_ZNSaIN2sf12VertexBufferEED2Ev # -- Begin function _ZNSaIN2sf12VertexBufferEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf12VertexBufferEED2Ev,@function
_ZNSaIN2sf12VertexBufferEED2Ev:         # @_ZNSaIN2sf12VertexBufferEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end377:
	.size	_ZNSaIN2sf12VertexBufferEED2Ev, .Lfunc_end377-_ZNSaIN2sf12VertexBufferEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end378:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev, .Lfunc_end378-_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E # -- Begin function _ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E,@function
_ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E: # @_ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPN2sf9TransformEEvT_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end379:
	.size	_ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E, .Lfunc_end379-_ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end380:
	.size	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end380-_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev,@function
_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev: # @_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception33
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$6, %rdx
.Ltmp498:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m
.Ltmp499:
	jmp	.LBB381_1
.LBB381_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB381_2:
	.cfi_def_cfa %rbp, 16
.Ltmp500:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end381:
	.size	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev, .Lfunc_end381-_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table381:
.Lexception33:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase21-.Lttbaseref21
.Lttbaseref21:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Ltmp498-.Lfunc_begin33 # >> Call Site 1 <<
	.uleb128 .Ltmp499-.Ltmp498      #   Call between .Ltmp498 and .Ltmp499
	.uleb128 .Ltmp500-.Lfunc_begin33 #     jumps to .Ltmp500
	.byte	1                       #   On action: 1
.Lcst_end33:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase21:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf9TransformEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN2sf9TransformEEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPN2sf9TransformEEvT_S3_ # -- Begin function _ZSt8_DestroyIPN2sf9TransformEEvT_S3_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf9TransformEEvT_S3_,@function
_ZSt8_DestroyIPN2sf9TransformEEvT_S3_:  # @_ZSt8_DestroyIPN2sf9TransformEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end382:
	.size	_ZSt8_DestroyIPN2sf9TransformEEvT_S3_, .Lfunc_end382-_ZSt8_DestroyIPN2sf9TransformEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end383:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_, .Lfunc_end383-_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m,comdat
	.weak	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m # -- Begin function _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m,@function
_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m: # @_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB384_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m
.LBB384_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end384:
	.size	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m, .Lfunc_end384-_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIN2sf9TransformEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end385:
	.size	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev, .Lfunc_end385-_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m,@function
_ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m: # @_ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end386:
	.size	_ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m, .Lfunc_end386-_ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m,@function
_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m: # @_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end387:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m, .Lfunc_end387-_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf9TransformEED2Ev,"axG",@progbits,_ZNSaIN2sf9TransformEED2Ev,comdat
	.weak	_ZNSaIN2sf9TransformEED2Ev # -- Begin function _ZNSaIN2sf9TransformEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf9TransformEED2Ev,@function
_ZNSaIN2sf9TransformEED2Ev:             # @_ZNSaIN2sf9TransformEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end388:
	.size	_ZNSaIN2sf9TransformEED2Ev, .Lfunc_end388-_ZNSaIN2sf9TransformEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end389:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev, .Lfunc_end389-_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E # -- Begin function _ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E,@function
_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E: # @_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPN2sf5ImageEEvT_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end390:
	.size	_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E, .Lfunc_end390-_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end391:
	.size	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end391-_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev,@function
_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev: # @_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception34
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$5, %rdx
.Ltmp501:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m
.Ltmp502:
	jmp	.LBB392_1
.LBB392_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB392_2:
	.cfi_def_cfa %rbp, 16
.Ltmp503:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end392:
	.size	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev, .Lfunc_end392-_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table392:
.Lexception34:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase22-.Lttbaseref22
.Lttbaseref22:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Ltmp501-.Lfunc_begin34 # >> Call Site 1 <<
	.uleb128 .Ltmp502-.Ltmp501      #   Call between .Ltmp501 and .Ltmp502
	.uleb128 .Ltmp503-.Lfunc_begin34 #     jumps to .Ltmp503
	.byte	1                       #   On action: 1
.Lcst_end34:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase22:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf5ImageEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN2sf5ImageEEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPN2sf5ImageEEvT_S3_ # -- Begin function _ZSt8_DestroyIPN2sf5ImageEEvT_S3_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf5ImageEEvT_S3_,@function
_ZSt8_DestroyIPN2sf5ImageEEvT_S3_:      # @_ZSt8_DestroyIPN2sf5ImageEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end393:
	.size	_ZSt8_DestroyIPN2sf5ImageEEvT_S3_, .Lfunc_end393-_ZSt8_DestroyIPN2sf5ImageEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_,comdat
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
.LBB394_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB394_4
# %bb.2:                                #   in Loop: Header=BB394_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf5ImageEEPT_RS2_
	movq	%rax, %rdi
	callq	_ZSt8_DestroyIN2sf5ImageEEvPT_
# %bb.3:                                #   in Loop: Header=BB394_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$32, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB394_1
.LBB394_4:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end394:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_, .Lfunc_end394-_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIN2sf5ImageEEvPT_,"axG",@progbits,_ZSt8_DestroyIN2sf5ImageEEvPT_,comdat
	.weak	_ZSt8_DestroyIN2sf5ImageEEvPT_ # -- Begin function _ZSt8_DestroyIN2sf5ImageEEvPT_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIN2sf5ImageEEvPT_,@function
_ZSt8_DestroyIN2sf5ImageEEvPT_:         # @_ZSt8_DestroyIN2sf5ImageEEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end395:
	.size	_ZSt8_DestroyIN2sf5ImageEEvPT_, .Lfunc_end395-_ZSt8_DestroyIN2sf5ImageEEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIN2sf5ImageEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN2sf5ImageEEPT_RS2_,comdat
	.weak	_ZSt11__addressofIN2sf5ImageEEPT_RS2_ # -- Begin function _ZSt11__addressofIN2sf5ImageEEPT_RS2_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIN2sf5ImageEEPT_RS2_,@function
_ZSt11__addressofIN2sf5ImageEEPT_RS2_:  # @_ZSt11__addressofIN2sf5ImageEEPT_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end396:
	.size	_ZSt11__addressofIN2sf5ImageEEPT_RS2_, .Lfunc_end396-_ZSt11__addressofIN2sf5ImageEEPT_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m,comdat
	.weak	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m # -- Begin function _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m,@function
_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m: # @_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB397_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m
.LBB397_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end397:
	.size	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m, .Lfunc_end397-_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIN2sf5ImageEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end398:
	.size	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev, .Lfunc_end398-_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m,@function
_ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m: # @_ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end399:
	.size	_ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m, .Lfunc_end399-_ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m,@function
_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m: # @_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end400:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m, .Lfunc_end400-_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf5ImageEED2Ev,"axG",@progbits,_ZNSaIN2sf5ImageEED2Ev,comdat
	.weak	_ZNSaIN2sf5ImageEED2Ev  # -- Begin function _ZNSaIN2sf5ImageEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf5ImageEED2Ev,@function
_ZNSaIN2sf5ImageEED2Ev:                 # @_ZNSaIN2sf5ImageEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end401:
	.size	_ZNSaIN2sf5ImageEED2Ev, .Lfunc_end401-_ZNSaIN2sf5ImageEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end402:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev, .Lfunc_end402-_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E # -- Begin function _ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E,@function
_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E: # @_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPN2sf7TextureEEvT_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end403:
	.size	_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E, .Lfunc_end403-_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end404:
	.size	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end404-_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev,@function
_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev: # @_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception35
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$3, %rdx
	movabsq	$-3689348814741910323, %rsi # imm = 0xCCCCCCCCCCCCCCCD
	imulq	%rsi, %rdx
.Ltmp504:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m
.Ltmp505:
	jmp	.LBB405_1
.LBB405_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB405_2:
	.cfi_def_cfa %rbp, 16
.Ltmp506:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end405:
	.size	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev, .Lfunc_end405-_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table405:
.Lexception35:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase23-.Lttbaseref23
.Lttbaseref23:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Ltmp504-.Lfunc_begin35 # >> Call Site 1 <<
	.uleb128 .Ltmp505-.Ltmp504      #   Call between .Ltmp504 and .Ltmp505
	.uleb128 .Ltmp506-.Lfunc_begin35 #     jumps to .Ltmp506
	.byte	1                       #   On action: 1
.Lcst_end35:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase23:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf7TextureEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN2sf7TextureEEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPN2sf7TextureEEvT_S3_ # -- Begin function _ZSt8_DestroyIPN2sf7TextureEEvT_S3_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf7TextureEEvT_S3_,@function
_ZSt8_DestroyIPN2sf7TextureEEvT_S3_:    # @_ZSt8_DestroyIPN2sf7TextureEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end406:
	.size	_ZSt8_DestroyIPN2sf7TextureEEvT_S3_, .Lfunc_end406-_ZSt8_DestroyIPN2sf7TextureEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_,comdat
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
.LBB407_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB407_4
# %bb.2:                                #   in Loop: Header=BB407_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf7TextureEEPT_RS2_
	movq	%rax, %rdi
	callq	_ZSt8_DestroyIN2sf7TextureEEvPT_
# %bb.3:                                #   in Loop: Header=BB407_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$40, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB407_1
.LBB407_4:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end407:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_, .Lfunc_end407-_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIN2sf7TextureEEvPT_,"axG",@progbits,_ZSt8_DestroyIN2sf7TextureEEvPT_,comdat
	.weak	_ZSt8_DestroyIN2sf7TextureEEvPT_ # -- Begin function _ZSt8_DestroyIN2sf7TextureEEvPT_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIN2sf7TextureEEvPT_,@function
_ZSt8_DestroyIN2sf7TextureEEvPT_:       # @_ZSt8_DestroyIN2sf7TextureEEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZN2sf7TextureD1Ev@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end408:
	.size	_ZSt8_DestroyIN2sf7TextureEEvPT_, .Lfunc_end408-_ZSt8_DestroyIN2sf7TextureEEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIN2sf7TextureEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN2sf7TextureEEPT_RS2_,comdat
	.weak	_ZSt11__addressofIN2sf7TextureEEPT_RS2_ # -- Begin function _ZSt11__addressofIN2sf7TextureEEPT_RS2_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIN2sf7TextureEEPT_RS2_,@function
_ZSt11__addressofIN2sf7TextureEEPT_RS2_: # @_ZSt11__addressofIN2sf7TextureEEPT_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end409:
	.size	_ZSt11__addressofIN2sf7TextureEEPT_RS2_, .Lfunc_end409-_ZSt11__addressofIN2sf7TextureEEPT_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m,comdat
	.weak	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m # -- Begin function _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m,@function
_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m: # @_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB410_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m
.LBB410_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end410:
	.size	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m, .Lfunc_end410-_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIN2sf7TextureEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end411:
	.size	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev, .Lfunc_end411-_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m,@function
_ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m: # @_ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end412:
	.size	_ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m, .Lfunc_end412-_ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m,@function
_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m: # @_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end413:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m, .Lfunc_end413-_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf7TextureEED2Ev,"axG",@progbits,_ZNSaIN2sf7TextureEED2Ev,comdat
	.weak	_ZNSaIN2sf7TextureEED2Ev # -- Begin function _ZNSaIN2sf7TextureEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf7TextureEED2Ev,@function
_ZNSaIN2sf7TextureEED2Ev:               # @_ZNSaIN2sf7TextureEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end414:
	.size	_ZNSaIN2sf7TextureEED2Ev, .Lfunc_end414-_ZNSaIN2sf7TextureEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end415:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev, .Lfunc_end415-_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEED2Ev,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEED2Ev,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEED2Ev # -- Begin function _ZNSt13_Bvector_baseISaIbEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEED2Ev,@function
_ZNSt13_Bvector_baseISaIbEED2Ev:        # @_ZNSt13_Bvector_baseISaIbEED2Ev
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception36
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
.Ltmp507:
	movq	%rax, %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
.Ltmp508:
	jmp	.LBB416_1
.LBB416_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB416_2:
	.cfi_def_cfa %rbp, 16
.Ltmp509:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end416:
	.size	_ZNSt13_Bvector_baseISaIbEED2Ev, .Lfunc_end416-_ZNSt13_Bvector_baseISaIbEED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table416:
.Lexception36:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase24-.Lttbaseref24
.Lttbaseref24:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Ltmp507-.Lfunc_begin36 # >> Call Site 1 <<
	.uleb128 .Ltmp508-.Ltmp507      #   Call between .Ltmp507 and .Ltmp508
	.uleb128 .Ltmp509-.Lfunc_begin36 #     jumps to .Ltmp509
	.byte	1                       #   On action: 1
.Lcst_end36:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase24:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv # -- Begin function _ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv,@function
_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv: # @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, (%rax)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB417_2
# %bb.1:
	movq	-24(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
	xorl	%ecx, %ecx
	movl	%ecx, %edx
	movq	-24(%rbp), %rsi         # 8-byte Reload
	movq	(%rsi), %rdi
	subq	%rdi, %rax
	sarq	$3, %rax
	movq	%rax, -16(%rbp)
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	32(%rax), %rdi
	subq	-16(%rbp), %rdx
	shlq	$3, %rdx
	addq	%rdx, %rdi
	movq	-16(%rbp), %rdx
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rsi, %rdi
	movq	-32(%rbp), %rsi         # 8-byte Reload
	callq	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
.LBB417_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end417:
	.size	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv, .Lfunc_end417-_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev # -- Begin function _ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev,@function
_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev: # @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaImED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end418:
	.size	_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev, .Lfunc_end418-_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv,"axG",@progbits,_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv,comdat
	.weak	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv # -- Begin function _ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
	.p2align	4, 0x90
	.type	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv,@function
_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv: # @_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rax
	cmpq	$0, 32(%rax)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB419_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	32(%rax), %rcx
	addq	$-8, %rcx
	movq	%rcx, %rdi
	callq	_ZSt11__addressofImEPT_RS0_
	addq	$8, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB419_3
.LBB419_2:
	movq	$0, -8(%rbp)
.LBB419_3:
	movq	-8(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end419:
	.size	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv, .Lfunc_end419-_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm,"axG",@progbits,_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm,comdat
	.weak	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm # -- Begin function _ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm,@function
_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm: # @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end420:
	.size	_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm, .Lfunc_end420-_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv # -- Begin function _ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv,@function
_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv: # @_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception37
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rax
.Ltmp510:
	leaq	-24(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZNSt13_Bit_iteratorC2Ev
.Ltmp511:
	jmp	.LBB421_1
.LBB421_1:
	movl	-16(%rbp), %eax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movl	%eax, 24(%rcx)
	movq	-24(%rbp), %rdx
	movq	%rdx, 16(%rcx)
	movl	24(%rcx), %eax
	movl	%eax, 8(%rcx)
	movq	16(%rcx), %rdx
	movq	%rdx, (%rcx)
	movq	$0, 32(%rcx)
	movq	%fs:40, %rdx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rdx
	jne	.LBB421_4
# %bb.2:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB421_3:
	.cfi_def_cfa %rbp, 16
.Ltmp512:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -44(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB421_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end421:
	.size	_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv, .Lfunc_end421-_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table421:
.Lexception37:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase25-.Lttbaseref25
.Lttbaseref25:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Ltmp510-.Lfunc_begin37 # >> Call Site 1 <<
	.uleb128 .Ltmp511-.Ltmp510      #   Call between .Ltmp510 and .Ltmp511
	.uleb128 .Ltmp512-.Lfunc_begin37 #     jumps to .Ltmp512
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp511-.Lfunc_begin37 # >> Call Site 2 <<
	.uleb128 .Lfunc_end421-.Ltmp511 #   Call between .Ltmp511 and .Lfunc_end421
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end37:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase25:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt11__addressofImEPT_RS0_,"axG",@progbits,_ZSt11__addressofImEPT_RS0_,comdat
	.weak	_ZSt11__addressofImEPT_RS0_ # -- Begin function _ZSt11__addressofImEPT_RS0_
	.p2align	4, 0x90
	.type	_ZSt11__addressofImEPT_RS0_,@function
_ZSt11__addressofImEPT_RS0_:            # @_ZSt11__addressofImEPT_RS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end422:
	.size	_ZSt11__addressofImEPT_RS0_, .Lfunc_end422-_ZSt11__addressofImEPT_RS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm # -- Begin function _ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm,@function
_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm: # @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end423:
	.size	_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm, .Lfunc_end423-_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaImED2Ev,"axG",@progbits,_ZNSaImED2Ev,comdat
	.weak	_ZNSaImED2Ev            # -- Begin function _ZNSaImED2Ev
	.p2align	4, 0x90
	.type	_ZNSaImED2Ev,@function
_ZNSaImED2Ev:                           # @_ZNSaImED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorImED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end424:
	.size	_ZNSaImED2Ev, .Lfunc_end424-_ZNSaImED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorImED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorImED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorImED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorImED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorImED2Ev,@function
_ZN9__gnu_cxx13new_allocatorImED2Ev:    # @_ZN9__gnu_cxx13new_allocatorImED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end425:
	.size	_ZN9__gnu_cxx13new_allocatorImED2Ev, .Lfunc_end425-_ZN9__gnu_cxx13new_allocatorImED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E # -- Begin function _ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E,@function
_ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E: # @_ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPP10CollectionEvT_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end426:
	.size	_ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E, .Lfunc_end426-_ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end427:
	.size	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end427-_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev # -- Begin function _ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev,@function
_ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev: # @_ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception38
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$3, %rdx
.Ltmp513:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m
.Ltmp514:
	jmp	.LBB428_1
.LBB428_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB428_2:
	.cfi_def_cfa %rbp, 16
.Ltmp515:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end428:
	.size	_ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev, .Lfunc_end428-_ZNSt12_Vector_baseIP10CollectionSaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table428:
.Lexception38:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase26-.Lttbaseref26
.Lttbaseref26:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Ltmp513-.Lfunc_begin38 # >> Call Site 1 <<
	.uleb128 .Ltmp514-.Ltmp513      #   Call between .Ltmp513 and .Ltmp514
	.uleb128 .Ltmp515-.Lfunc_begin38 #     jumps to .Ltmp515
	.byte	1                       #   On action: 1
.Lcst_end38:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase26:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPP10CollectionEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPP10CollectionEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPP10CollectionEvT_S3_ # -- Begin function _ZSt8_DestroyIPP10CollectionEvT_S3_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPP10CollectionEvT_S3_,@function
_ZSt8_DestroyIPP10CollectionEvT_S3_:    # @_ZSt8_DestroyIPP10CollectionEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end429:
	.size	_ZSt8_DestroyIPP10CollectionEvT_S3_, .Lfunc_end429-_ZSt8_DestroyIPP10CollectionEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end430:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_, .Lfunc_end430-_ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m,comdat
	.weak	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m # -- Begin function _ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m,@function
_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m: # @_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB431_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m
.LBB431_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end431:
	.size	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m, .Lfunc_end431-_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIP10CollectionED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end432:
	.size	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev, .Lfunc_end432-_ZNSt12_Vector_baseIP10CollectionSaIS1_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m,comdat
	.weak	_ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m # -- Begin function _ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m,@function
_ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m: # @_ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end433:
	.size	_ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m, .Lfunc_end433-_ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m,@function
_ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m: # @_ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end434:
	.size	_ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m, .Lfunc_end434-_ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIP10CollectionED2Ev,"axG",@progbits,_ZNSaIP10CollectionED2Ev,comdat
	.weak	_ZNSaIP10CollectionED2Ev # -- Begin function _ZNSaIP10CollectionED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIP10CollectionED2Ev,@function
_ZNSaIP10CollectionED2Ev:               # @_ZNSaIP10CollectionED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end435:
	.size	_ZNSaIP10CollectionED2Ev, .Lfunc_end435-_ZNSaIP10CollectionED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev: # @_ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end436:
	.size	_ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev, .Lfunc_end436-_ZN9__gnu_cxx13new_allocatorIP10CollectionED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E # -- Begin function _ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E,@function
_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E: # @_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPN2sf6VertexEEvT_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end437:
	.size	_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E, .Lfunc_end437-_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception39
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$2, %rdx
	movabsq	$-3689348814741910323, %rsi # imm = 0xCCCCCCCCCCCCCCCD
	imulq	%rsi, %rdx
.Ltmp516:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m
.Ltmp517:
	jmp	.LBB438_1
.LBB438_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB438_2:
	.cfi_def_cfa %rbp, 16
.Ltmp518:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end438:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev, .Lfunc_end438-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table438:
.Lexception39:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase27-.Lttbaseref27
.Lttbaseref27:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Ltmp516-.Lfunc_begin39 # >> Call Site 1 <<
	.uleb128 .Ltmp517-.Ltmp516      #   Call between .Ltmp516 and .Ltmp517
	.uleb128 .Ltmp518-.Lfunc_begin39 #     jumps to .Ltmp518
	.byte	1                       #   On action: 1
.Lcst_end39:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase27:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf6VertexEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN2sf6VertexEEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPN2sf6VertexEEvT_S3_ # -- Begin function _ZSt8_DestroyIPN2sf6VertexEEvT_S3_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf6VertexEEvT_S3_,@function
_ZSt8_DestroyIPN2sf6VertexEEvT_S3_:     # @_ZSt8_DestroyIPN2sf6VertexEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end439:
	.size	_ZSt8_DestroyIPN2sf6VertexEEvT_S3_, .Lfunc_end439-_ZSt8_DestroyIPN2sf6VertexEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end440:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_, .Lfunc_end440-_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB441_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m
.LBB441_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end441:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m, .Lfunc_end441-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIN2sf6VertexEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end442:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev, .Lfunc_end442-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m,@function
_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m: # @_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end443:
	.size	_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m, .Lfunc_end443-_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m,@function
_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m: # @_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end444:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m, .Lfunc_end444-_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_ # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_,@function
_ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_: # @_ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception40
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	-16(%rbp), %rdx
	subq	%rdx, %rcx
	sarq	$3, %rcx
	movq	%rcx, -24(%rbp)
	cmpq	$0, -24(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB445_3
# %bb.1:
	movq	-16(%rbp), %rdi
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rsi
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp519:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E
.Ltmp520:
	jmp	.LBB445_2
.LBB445_2:
	movq	-16(%rbp), %rax
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 8(%rcx)
.LBB445_3:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB445_4:
	.cfi_def_cfa %rbp, 16
.Ltmp521:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end445:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_, .Lfunc_end445-_ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table445:
.Lexception40:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase28-.Lttbaseref28
.Lttbaseref28:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Ltmp519-.Lfunc_begin40 # >> Call Site 1 <<
	.uleb128 .Ltmp520-.Ltmp519      #   Call between .Ltmp519 and .Ltmp520
	.uleb128 .Ltmp521-.Lfunc_begin40 #     jumps to .Ltmp521
	.byte	1                       #   On action: 1
.Lcst_end40:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase28:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_ # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_,@function
_ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_: # @_ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB446_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB446_3
.LBB446_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.LBB446_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end446:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_, .Lfunc_end446-_ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_,comdat
	.weak	_ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_ # -- Begin function _ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_
	.p2align	4, 0x90
	.type	_ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_,@function
_ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_: # @_ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end447:
	.size	_ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_, .Lfunc_end447-_ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end448:
	.size	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_, .Lfunc_end448-_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end449:
	.size	_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end449-_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,@function
_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_: # @_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rax
	leaq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -88(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-152(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rax,%rdx,8), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB450_2
# %bb.1:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB450_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end450:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .Lfunc_end450-_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE3endEv,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE3endEv # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE3endEv,@function
_ZNSt6vectorIP10CollectionSaIS1_EE3endEv: # @_ZNSt6vectorIP10CollectionSaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB451_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB451_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end451:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE3endEv, .Lfunc_end451-_ZNSt6vectorIP10CollectionSaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end452:
	.size	_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_, .Lfunc_end452-_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB453_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB453_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB453_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB453_5
.LBB453_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB453_6
.LBB453_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB453_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB453_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB453_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end453:
	.size	_ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc, .Lfunc_end453-_ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"axG",@progbits,_ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,comdat
	.weak	_ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ # -- Begin function _ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,@function
_ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_: # @_ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end454:
	.size	_ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, .Lfunc_end454-_ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB455_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB455_3
.LBB455_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB455_3
.LBB455_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end455:
	.size	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm, .Lfunc_end455-_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_ # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,@function
_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_: # @_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end456:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, .Lfunc_end456-_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end457:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end457-_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv,@function
_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv: # @_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end458:
	.size	_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv, .Lfunc_end458-_ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3maxImERKT_S2_S2_,"axG",@progbits,_ZSt3maxImERKT_S2_S2_,comdat
	.weak	_ZSt3maxImERKT_S2_S2_   # -- Begin function _ZSt3maxImERKT_S2_S2_
	.p2align	4, 0x90
	.type	_ZSt3maxImERKT_S2_S2_,@function
_ZSt3maxImERKT_S2_S2_:                  # @_ZSt3maxImERKT_S2_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx
	cmpq	(%rcx), %rax
	jae	.LBB459_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB459_3
.LBB459_2:
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
.LBB459_3:
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end459:
	.size	_ZSt3maxImERKT_S2_S2_, .Lfunc_end459-_ZSt3maxImERKT_S2_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_ # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_,@function
_ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_: # @_ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception41
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_
	movq	%rax, -24(%rbp)
.Ltmp522:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp523:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB460_1
.LBB460_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB460_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB460_3:
	.cfi_def_cfa %rbp, 16
.Ltmp524:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB460_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end460:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_, .Lfunc_end460-_ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table460:
.Lexception41:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase29-.Lttbaseref29
.Lttbaseref29:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Ltmp522-.Lfunc_begin41 # >> Call Site 1 <<
	.uleb128 .Ltmp523-.Ltmp522      #   Call between .Ltmp522 and .Ltmp523
	.uleb128 .Ltmp524-.Lfunc_begin41 #     jumps to .Ltmp524
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp523-.Lfunc_begin41 # >> Call Site 2 <<
	.uleb128 .Lfunc_end460-.Ltmp523 #   Call between .Ltmp523 and .Lfunc_end460
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end41:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase29:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end461:
	.size	_ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end461-_ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_,"axG",@progbits,_ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_,comdat
	.weak	_ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_ # -- Begin function _ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_,@function
_ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_: # @_ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end462:
	.size	_ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_, .Lfunc_end462-_ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt3minImERKT_S2_S2_,"axG",@progbits,_ZSt3minImERKT_S2_S2_,comdat
	.weak	_ZSt3minImERKT_S2_S2_   # -- Begin function _ZSt3minImERKT_S2_S2_
	.p2align	4, 0x90
	.type	_ZSt3minImERKT_S2_S2_,@function
_ZSt3minImERKT_S2_S2_:                  # @_ZSt3minImERKT_S2_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	cmpq	(%rcx), %rax
	jae	.LBB463_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB463_3
.LBB463_2:
	movq	-16(%rbp), %rax
	movq	%rax, -8(%rbp)
.LBB463_3:
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end463:
	.size	_ZSt3minImERKT_S2_S2_, .Lfunc_end463-_ZSt3minImERKT_S2_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end464:
	.size	_ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv, .Lfunc_end464-_ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end465:
	.size	_ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv, .Lfunc_end465-_ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m,"axG",@progbits,_ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m,comdat
	.weak	_ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m # -- Begin function _ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m,@function
_ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m: # @_ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end466:
	.size	_ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m, .Lfunc_end466-_ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB467_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB467_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end467:
	.size	_ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv, .Lfunc_end467-_ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE: # @_ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end468:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, .Lfunc_end468-_ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPP10CollectionET_S3_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPP10CollectionET_S3_
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPP10CollectionET_S3_
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end469:
	.size	_ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end469-_ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E,"axG",@progbits,_ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E,comdat
	.weak	_ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E # -- Begin function _ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E,@function
_ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E: # @_ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jle	.LBB470_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-40(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove@PLT
.LBB470_2:
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end470:
	.size	_ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E, .Lfunc_end470-_ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPP10CollectionET_S3_,"axG",@progbits,_ZSt12__niter_baseIPP10CollectionET_S3_,comdat
	.weak	_ZSt12__niter_baseIPP10CollectionET_S3_ # -- Begin function _ZSt12__niter_baseIPP10CollectionET_S3_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPP10CollectionET_S3_,@function
_ZSt12__niter_baseIPP10CollectionET_S3_: # @_ZSt12__niter_baseIPP10CollectionET_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end471:
	.size	_ZSt12__niter_baseIPP10CollectionET_S3_, .Lfunc_end471-_ZSt12__niter_baseIPP10CollectionET_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_,@function
_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_: # @_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end472:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_, .Lfunc_end472-_ZN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv,"axG",@progbits,_ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv,comdat
	.weak	_ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv # -- Begin function _ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv,@function
_ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv: # @_ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	16(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end473:
	.size	_ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv, .Lfunc_end473-_ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIbSaIbEE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIbSaIbEE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIbSaIbEE8max_sizeEv # -- Begin function _ZNKSt6vectorIbSaIbEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIbSaIbEE8max_sizeEv,@function
_ZNKSt6vectorIbSaIbEE8max_sizeEv:       # @_ZNKSt6vectorIbSaIbEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movabsq	$9223372036854775744, %rcx # imm = 0x7FFFFFFFFFFFFFC0
	movq	%rcx, -16(%rbp)
	movq	%rax, %rdi
	callq	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
	movq	%rax, -24(%rbp)
	movabsq	$144115188075855871, %rax # imm = 0x1FFFFFFFFFFFFFF
	cmpq	%rax, -24(%rbp)
	ja	.LBB474_2
# %bb.1:
	movq	-24(%rbp), %rax
	shlq	$6, %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB474_3
.LBB474_2:
	movabsq	$9223372036854775744, %rax # imm = 0x7FFFFFFFFFFFFFC0
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB474_3
.LBB474_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end474:
	.size	_ZNKSt6vectorIbSaIbEE8max_sizeEv, .Lfunc_end474-_ZNKSt6vectorIbSaIbEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIbSaIbEE8capacityEv,"axG",@progbits,_ZNKSt6vectorIbSaIbEE8capacityEv,comdat
	.weak	_ZNKSt6vectorIbSaIbEE8capacityEv # -- Begin function _ZNKSt6vectorIbSaIbEE8capacityEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIbSaIbEE8capacityEv,@function
_ZNKSt6vectorIbSaIbEE8capacityEv:       # @_ZNKSt6vectorIbSaIbEE8capacityEv
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception42
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
.Ltmp525:
	leaq	-24(%rbp), %rdi
	xorl	%edx, %edx
	movq	%rax, %rsi
	callq	_ZNSt19_Bit_const_iteratorC2EPmj
.Ltmp526:
	jmp	.LBB475_1
.LBB475_1:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIbSaIbEE5beginEv
	movq	%rax, -40(%rbp)
	movl	%edx, -32(%rbp)
.Ltmp527:
	leaq	-24(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZStmiRKSt18_Bit_iterator_baseS1_
.Ltmp528:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB475_2
.LBB475_2:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB475_5
# %bb.3:
	movq	-64(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB475_4:
	.cfi_def_cfa %rbp, 16
.Ltmp529:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -68(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB475_5:
	callq	__stack_chk_fail@PLT
.Lfunc_end475:
	.size	_ZNKSt6vectorIbSaIbEE8capacityEv, .Lfunc_end475-_ZNKSt6vectorIbSaIbEE8capacityEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table475:
.Lexception42:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase30-.Lttbaseref30
.Lttbaseref30:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Ltmp525-.Lfunc_begin42 # >> Call Site 1 <<
	.uleb128 .Ltmp528-.Ltmp525      #   Call between .Ltmp525 and .Ltmp528
	.uleb128 .Ltmp529-.Lfunc_begin42 #     jumps to .Ltmp529
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp528-.Lfunc_begin42 # >> Call Site 2 <<
	.uleb128 .Lfunc_end475-.Ltmp528 #   Call between .Ltmp528 and .Lfunc_end475
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end42:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase30:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE13_M_reallocateEm,"axG",@progbits,_ZNSt6vectorIbSaIbEE13_M_reallocateEm,comdat
	.weak	_ZNSt6vectorIbSaIbEE13_M_reallocateEm # -- Begin function _ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE13_M_reallocateEm,@function
_ZNSt6vectorIbSaIbEE13_M_reallocateEm:  # @_ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$192, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -136(%rbp)
	movq	%rsi, -144(%rbp)
	movq	-136(%rbp), %rax
	movq	-144(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm
	movq	%rax, -152(%rbp)
	movq	-152(%rbp), %rdi
	callq	_ZSt11__addressofImEPT_RS0_
	leaq	-24(%rbp), %rdi
	xorl	%edx, %edx
	movq	%rax, %rsi
	callq	_ZNSt13_Bit_iteratorC2EPmj
	movq	-160(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE5beginEv
	movq	%rax, -72(%rbp)
	movl	%edx, -64(%rbp)
	leaq	-56(%rbp), %rdi
	leaq	-72(%rbp), %rsi
	callq	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
	movq	-160(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE3endEv
	movq	%rax, -104(%rbp)
	movl	%edx, -96(%rbp)
	leaq	-88(%rbp), %rdi
	leaq	-104(%rbp), %rsi
	callq	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
	vmovdqu	-24(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-56(%rbp), %rsi
	movl	-48(%rbp), %edx
	movq	-88(%rbp), %rcx
	movl	-80(%rbp), %r8d
	vmovdqa	-128(%rbp), %xmm0
	movq	%rsp, %rax
	vmovdqu	%xmm0, (%rax)
	movq	-160(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
	movq	%rax, -40(%rbp)
	movl	%edx, -32(%rbp)
	movq	-160(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
	movl	-16(%rbp), %edx
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	%edx, 8(%rax)
	movq	-24(%rbp), %rcx
	movq	%rcx, (%rax)
	movl	-32(%rbp), %edx
	movl	%edx, 24(%rax)
	movq	-40(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movq	-152(%rbp), %rcx
	movq	-144(%rbp), %rdi
	movq	%rcx, -168(%rbp)        # 8-byte Spill
	callq	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm
	movq	-168(%rbp), %rcx        # 8-byte Reload
	leaq	(%rcx,%rax,8), %rax
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movq	%rax, 32(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rax
	jne	.LBB476_2
# %bb.1:
	addq	$192, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB476_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end476:
	.size	_ZNSt6vectorIbSaIbEE13_M_reallocateEm, .Lfunc_end476-_ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaImEE8max_sizeERKS0_,"axG",@progbits,_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_,comdat
	.weak	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_ # -- Begin function _ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_,@function
_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_: # @_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end477:
	.size	_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_, .Lfunc_end477-_ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv,"axG",@progbits,_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv,comdat
	.weak	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv # -- Begin function _ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv,@function
_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv: # @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end478:
	.size	_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv, .Lfunc_end478-_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end479:
	.size	_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv, .Lfunc_end479-_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end480:
	.size	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv, .Lfunc_end480-_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStmiRKSt18_Bit_iterator_baseS1_,"axG",@progbits,_ZStmiRKSt18_Bit_iterator_baseS1_,comdat
	.weak	_ZStmiRKSt18_Bit_iterator_baseS1_ # -- Begin function _ZStmiRKSt18_Bit_iterator_baseS1_
	.p2align	4, 0x90
	.type	_ZStmiRKSt18_Bit_iterator_baseS1_,@function
_ZStmiRKSt18_Bit_iterator_baseS1_:      # @_ZStmiRKSt18_Bit_iterator_baseS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	shlq	$6, %rax
	movq	-8(%rbp), %rcx
	movl	8(%rcx), %edx
	movl	%edx, %ecx
	addq	%rcx, %rax
	movq	-16(%rbp), %rcx
	movl	8(%rcx), %edx
	movl	%edx, %ecx
	subq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end481:
	.size	_ZStmiRKSt18_Bit_iterator_baseS1_, .Lfunc_end481-_ZStmiRKSt18_Bit_iterator_baseS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_Bit_const_iteratorC2EPmj,"axG",@progbits,_ZNSt19_Bit_const_iteratorC2EPmj,comdat
	.weak	_ZNSt19_Bit_const_iteratorC2EPmj # -- Begin function _ZNSt19_Bit_const_iteratorC2EPmj
	.p2align	4, 0x90
	.type	_ZNSt19_Bit_const_iteratorC2EPmj,@function
_ZNSt19_Bit_const_iteratorC2EPmj:       # @_ZNSt19_Bit_const_iteratorC2EPmj
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movl	-20(%rbp), %edx
	movq	%rax, %rdi
	callq	_ZNSt18_Bit_iterator_baseC2EPmj
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end482:
	.size	_ZNSt19_Bit_const_iteratorC2EPmj, .Lfunc_end482-_ZNSt19_Bit_const_iteratorC2EPmj
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIbSaIbEE5beginEv,"axG",@progbits,_ZNKSt6vectorIbSaIbEE5beginEv,comdat
	.weak	_ZNKSt6vectorIbSaIbEE5beginEv # -- Begin function _ZNKSt6vectorIbSaIbEE5beginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIbSaIbEE5beginEv,@function
_ZNKSt6vectorIbSaIbEE5beginEv:          # @_ZNKSt6vectorIbSaIbEE5beginEv
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception43
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rsi
.Ltmp530:
	leaq	-24(%rbp), %rdi
	xorl	%edx, %edx
	callq	_ZNSt19_Bit_const_iteratorC2EPmj
.Ltmp531:
	jmp	.LBB483_1
.LBB483_1:
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -36(%rbp)         # 4-byte Spill
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB483_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	-36(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB483_3:
	.cfi_def_cfa %rbp, 16
.Ltmp532:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB483_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end483:
	.size	_ZNKSt6vectorIbSaIbEE5beginEv, .Lfunc_end483-_ZNKSt6vectorIbSaIbEE5beginEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table483:
.Lexception43:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase31-.Lttbaseref31
.Lttbaseref31:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Ltmp530-.Lfunc_begin43 # >> Call Site 1 <<
	.uleb128 .Ltmp531-.Ltmp530      #   Call between .Ltmp530 and .Ltmp531
	.uleb128 .Ltmp532-.Lfunc_begin43 #     jumps to .Ltmp532
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp531-.Lfunc_begin43 # >> Call Site 2 <<
	.uleb128 .Lfunc_end483-.Ltmp531 #   Call between .Ltmp531 and .Lfunc_end483
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end43:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase31:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEE11_M_allocateEm,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm # -- Begin function _ZNSt13_Bvector_baseISaIbEE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm,@function
_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm: # @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt16allocator_traitsISaImEE8allocateERS0_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end484:
	.size	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm, .Lfunc_end484-_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bit_iteratorC2EPmj,"axG",@progbits,_ZNSt13_Bit_iteratorC2EPmj,comdat
	.weak	_ZNSt13_Bit_iteratorC2EPmj # -- Begin function _ZNSt13_Bit_iteratorC2EPmj
	.p2align	4, 0x90
	.type	_ZNSt13_Bit_iteratorC2EPmj,@function
_ZNSt13_Bit_iteratorC2EPmj:             # @_ZNSt13_Bit_iteratorC2EPmj
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movl	-20(%rbp), %edx
	movq	%rax, %rdi
	callq	_ZNSt18_Bit_iterator_baseC2EPmj
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end485:
	.size	_ZNSt13_Bit_iteratorC2EPmj, .Lfunc_end485-_ZNSt13_Bit_iteratorC2EPmj
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator,"axG",@progbits,_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator,comdat
	.weak	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator # -- Begin function _ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator,@function
_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator: # @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	leaq	16(%rbp), %rax
	movq	%fs:40, %r9
	movq	%r9, -8(%rbp)
	movq	%rsi, -40(%rbp)
	movl	%edx, -32(%rbp)
	movq	%rcx, -56(%rbp)
	movl	%r8d, -48(%rbp)
	movq	%rdi, -120(%rbp)
	movq	-40(%rbp), %rdi
	movq	-56(%rbp), %rsi
	movq	(%rax), %rdx
	callq	_ZSt4copyIPmS0_ET0_T_S2_S1_
	movq	%rax, -128(%rbp)
	movq	-56(%rbp), %rsi
	leaq	-72(%rbp), %rdi
	xorl	%r8d, %r8d
	movl	%r8d, %edx
	movl	%r8d, -132(%rbp)        # 4-byte Spill
	callq	_ZNSt19_Bit_const_iteratorC2EPmj
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -96(%rbp)
	movq	-128(%rbp), %rsi
	leaq	-112(%rbp), %rdi
	movl	-132(%rbp), %edx        # 4-byte Reload
	callq	_ZNSt13_Bit_iteratorC2EPmj
	movq	-72(%rbp), %rdi
	movl	-64(%rbp), %esi
	movq	-96(%rbp), %rdx
	movl	-88(%rbp), %ecx
	movq	-112(%rbp), %r8
	movl	-104(%rbp), %r9d
	callq	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -136(%rbp)        # 4-byte Spill
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jne	.LBB486_2
# %bb.1:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	-136(%rbp), %edx        # 4-byte Reload
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB486_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end486:
	.size	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator, .Lfunc_end486-_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE3endEv,"axG",@progbits,_ZNSt6vectorIbSaIbEE3endEv,comdat
	.weak	_ZNSt6vectorIbSaIbEE3endEv # -- Begin function _ZNSt6vectorIbSaIbEE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE3endEv,@function
_ZNSt6vectorIbSaIbEE3endEv:             # @_ZNSt6vectorIbSaIbEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movq	-40(%rbp), %rax
	vmovdqu	16(%rax), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -44(%rbp)         # 4-byte Spill
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB487_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	-44(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB487_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end487:
	.size	_ZNSt6vectorIbSaIbEE3endEv, .Lfunc_end487-_ZNSt6vectorIbSaIbEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEE8_S_nwordEm,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm # -- Begin function _ZNSt13_Bvector_baseISaIbEE8_S_nwordEm
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm,@function
_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm: # @_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	addq	$64, %rax
	subq	$1, %rax
	shrq	$6, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end488:
	.size	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm, .Lfunc_end488-_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaImEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_traitsISaImEE8allocateERS0_m,comdat
	.weak	_ZNSt16allocator_traitsISaImEE8allocateERS0_m # -- Begin function _ZNSt16allocator_traitsISaImEE8allocateERS0_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaImEE8allocateERS0_m,@function
_ZNSt16allocator_traitsISaImEE8allocateERS0_m: # @_ZNSt16allocator_traitsISaImEE8allocateERS0_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end489:
	.size	_ZNSt16allocator_traitsISaImEE8allocateERS0_m, .Lfunc_end489-_ZNSt16allocator_traitsISaImEE8allocateERS0_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB490_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB490_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end490:
	.size	_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv, .Lfunc_end490-_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyIPmS0_ET0_T_S2_S1_,"axG",@progbits,_ZSt4copyIPmS0_ET0_T_S2_S1_,comdat
	.weak	_ZSt4copyIPmS0_ET0_T_S2_S1_ # -- Begin function _ZSt4copyIPmS0_ET0_T_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt4copyIPmS0_ET0_T_S2_S1_,@function
_ZSt4copyIPmS0_ET0_T_S2_S1_:            # @_ZSt4copyIPmS0_ET0_T_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__miter_baseIPmET_S1_
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt12__miter_baseIPmET_S1_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end491:
	.size	_ZSt4copyIPmS0_ET0_T_S2_S1_, .Lfunc_end491-_ZSt4copyIPmS0_ET0_T_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_,"axG",@progbits,_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_,comdat
	.weak	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_ # -- Begin function _ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
	.p2align	4, 0x90
	.type	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_,@function
_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_: # @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$176, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -112(%rbp)
	movq	-112(%rbp), %rdi
	movl	-104(%rbp), %esi
	callq	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
	movq	%rax, -88(%rbp)
	movl	%edx, -80(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -144(%rbp)
	movq	-144(%rbp), %rdi
	movl	-136(%rbp), %esi
	callq	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
	movq	%rax, -128(%rbp)
	movl	%edx, -120(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -160(%rbp)
	movq	-88(%rbp), %rdi
	movl	-80(%rbp), %esi
	movq	-128(%rbp), %rdx
	movl	-120(%rbp), %ecx
	movq	-160(%rbp), %r8
	movl	-152(%rbp), %r9d
	callq	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -164(%rbp)        # 4-byte Spill
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jne	.LBB492_2
# %bb.1:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	-164(%rbp), %edx        # 4-byte Reload
	addq	$176, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB492_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end492:
	.size	_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_, .Lfunc_end492-_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_ # -- Begin function _ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_,@function
_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_: # @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	%rdx, -16(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt12__niter_baseIPmET_S1_
	movq	-32(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPmET_S1_
	movq	-16(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPmET_S1_
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIPmET_RKS1_S1_
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB493_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB493_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end493:
	.size	_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_, .Lfunc_end493-_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIPmET_S1_,"axG",@progbits,_ZSt12__miter_baseIPmET_S1_,comdat
	.weak	_ZSt12__miter_baseIPmET_S1_ # -- Begin function _ZSt12__miter_baseIPmET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIPmET_S1_,@function
_ZSt12__miter_baseIPmET_S1_:            # @_ZSt12__miter_baseIPmET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end494:
	.size	_ZSt12__miter_baseIPmET_S1_, .Lfunc_end494-_ZSt12__miter_baseIPmET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIPmET_RKS1_S1_,"axG",@progbits,_ZSt12__niter_wrapIPmET_RKS1_S1_,comdat
	.weak	_ZSt12__niter_wrapIPmET_RKS1_S1_ # -- Begin function _ZSt12__niter_wrapIPmET_RKS1_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIPmET_RKS1_S1_,@function
_ZSt12__niter_wrapIPmET_RKS1_S1_:       # @_ZSt12__niter_wrapIPmET_RKS1_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end495:
	.size	_ZSt12__niter_wrapIPmET_RKS1_S1_, .Lfunc_end495-_ZSt12__niter_wrapIPmET_RKS1_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_ # -- Begin function _ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_,@function
_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_: # @_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end496:
	.size	_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_, .Lfunc_end496-_ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPmET_S1_,"axG",@progbits,_ZSt12__niter_baseIPmET_S1_,comdat
	.weak	_ZSt12__niter_baseIPmET_S1_ # -- Begin function _ZSt12__niter_baseIPmET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPmET_S1_,@function
_ZSt12__niter_baseIPmET_S1_:            # @_ZSt12__niter_baseIPmET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end497:
	.size	_ZSt12__niter_baseIPmET_S1_, .Lfunc_end497-_ZSt12__niter_baseIPmET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_ # -- Begin function _ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_,@function
_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_: # @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end498:
	.size	_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_, .Lfunc_end498-_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ # -- Begin function _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_,@function
_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_: # @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB499_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove@PLT
.LBB499_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end499:
	.size	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_, .Lfunc_end499-_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,"axG",@progbits,_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,comdat
	.weak	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ # -- Begin function _ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,@function
_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_: # @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$208, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-128(%rbp), %rdi
	movl	-120(%rbp), %esi
	callq	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
	movq	%rax, -104(%rbp)
	movl	%edx, -96(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -160(%rbp)
	movq	-160(%rbp), %rdi
	movl	-152(%rbp), %esi
	callq	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
	movq	%rax, -144(%rbp)
	movl	%edx, -136(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -192(%rbp)
	movq	-192(%rbp), %rdi
	movl	-184(%rbp), %esi
	callq	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -176(%rbp)
	movl	%edx, -168(%rbp)
	movq	-104(%rbp), %rdi
	movl	-96(%rbp), %esi
	movq	-144(%rbp), %rdx
	movl	-136(%rbp), %ecx
	movq	-176(%rbp), %r8
	movl	-168(%rbp), %r9d
	callq	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	movq	%rax, -88(%rbp)
	movl	%edx, -80(%rbp)
	movq	-88(%rbp), %rsi
	movl	-80(%rbp), %edx
	leaq	-72(%rbp), %rdi
	callq	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rsi
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rsi
	movl	%edx, -196(%rbp)        # 4-byte Spill
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jne	.LBB500_2
# %bb.1:
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	-196(%rbp), %edx        # 4-byte Reload
	addq	$208, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB500_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end500:
	.size	_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_, .Lfunc_end500-_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_,"axG",@progbits,_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_,comdat
	.weak	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_ # -- Begin function _ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_,@function
_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_: # @_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movl	%esi, -40(%rbp)
	vmovdqu	-48(%rbp), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rcx
	movl	%edx, -52(%rbp)         # 4-byte Spill
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jne	.LBB501_2
# %bb.1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	-52(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB501_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end501:
	.size	_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_, .Lfunc_end501-_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_,"axG",@progbits,_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_,comdat
	.weak	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_ # -- Begin function _ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_,@function
_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_: # @_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -48(%rbp)
	movl	%edx, -40(%rbp)
	movq	%rdi, -56(%rbp)
	vmovdqu	-48(%rbp), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -60(%rbp)         # 4-byte Spill
	movq	%rax, -72(%rbp)         # 8-byte Spill
	jne	.LBB502_2
# %bb.1:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	-60(%rbp), %edx         # 4-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB502_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end502:
	.size	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_, .Lfunc_end502-_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,"axG",@progbits,_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,comdat
	.weak	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ # -- Begin function _ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,@function
_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_: # @_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -96(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -112(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-96(%rbp), %rdi
	movl	-88(%rbp), %esi
	movq	-112(%rbp), %rdx
	movl	-104(%rbp), %ecx
	movq	-128(%rbp), %r8
	movl	-120(%rbp), %r9d
	callq	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -132(%rbp)        # 4-byte Spill
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jne	.LBB503_2
# %bb.1:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	-132(%rbp), %edx        # 4-byte Reload
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB503_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end503:
	.size	_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_, .Lfunc_end503-_ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_,"axG",@progbits,_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_,comdat
	.weak	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_ # -- Begin function _ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_,@function
_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_: # @_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movl	%esi, -40(%rbp)
	vmovdqu	-48(%rbp), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rcx
	movl	%edx, -52(%rbp)         # 4-byte Spill
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jne	.LBB504_2
# %bb.1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	-52(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB504_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end504:
	.size	_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_, .Lfunc_end504-_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseISt13_Bit_iteratorET_S1_,"axG",@progbits,_ZSt12__niter_baseISt13_Bit_iteratorET_S1_,comdat
	.weak	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_ # -- Begin function _ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_,@function
_ZSt12__niter_baseISt13_Bit_iteratorET_S1_: # @_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movl	%esi, -40(%rbp)
	vmovdqu	-48(%rbp), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rcx
	movl	%edx, -52(%rbp)         # 4-byte Spill
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jne	.LBB505_2
# %bb.1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	-52(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB505_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end505:
	.size	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_, .Lfunc_end505-_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,"axG",@progbits,_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,comdat
	.weak	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_ # -- Begin function _ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_,@function
_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_: # @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -96(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -112(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-96(%rbp), %rdi
	movl	-88(%rbp), %esi
	movq	-112(%rbp), %rdx
	movl	-104(%rbp), %ecx
	movq	-128(%rbp), %r8
	movl	-120(%rbp), %r9d
	callq	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -132(%rbp)        # 4-byte Spill
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jne	.LBB506_2
# %bb.1:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	-132(%rbp), %edx        # 4-byte Reload
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB506_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end506:
	.size	_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_, .Lfunc_end506-_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_ # -- Begin function _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_,@function
_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_: # @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movl	%esi, -40(%rbp)
	movq	%rdx, -64(%rbp)
	movl	%ecx, -56(%rbp)
	movq	%r8, -80(%rbp)
	movl	%r9d, -72(%rbp)
	leaq	-64(%rbp), %rax
	leaq	-48(%rbp), %rdx
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	_ZStmiRKSt18_Bit_iterator_baseS1_
	movq	%rax, -104(%rbp)
.LBB507_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -104(%rbp)
	jle	.LBB507_4
# %bb.2:                                #   in Loop: Header=BB507_1 Depth=1
	leaq	-48(%rbp), %rdi
	callq	_ZNKSt19_Bit_const_iteratordeEv
	leaq	-80(%rbp), %rdi
	movb	%al, -105(%rbp)         # 1-byte Spill
	callq	_ZNKSt13_Bit_iteratordeEv
	movq	%rax, -96(%rbp)
	movq	%rdx, -88(%rbp)
	movb	-105(%rbp), %cl         # 1-byte Reload
	movzbl	%cl, %esi
	andl	$1, %esi
	leaq	-96(%rbp), %rdi
	callq	_ZNSt14_Bit_referenceaSEb
	leaq	-48(%rbp), %rdi
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZNSt19_Bit_const_iteratorppEv
	leaq	-80(%rbp), %rdi
	movq	%rax, -128(%rbp)        # 8-byte Spill
	callq	_ZNSt13_Bit_iteratorppEv
# %bb.3:                                #   in Loop: Header=BB507_1 Depth=1
	movq	-104(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -104(%rbp)
	jmp	.LBB507_1
.LBB507_4:
	vmovdqu	-80(%rbp), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -132(%rbp)        # 4-byte Spill
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jne	.LBB507_6
# %bb.5:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	-132(%rbp), %edx        # 4-byte Reload
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB507_6:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end507:
	.size	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_, .Lfunc_end507-_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt19_Bit_const_iteratordeEv,"axG",@progbits,_ZNKSt19_Bit_const_iteratordeEv,comdat
	.weak	_ZNKSt19_Bit_const_iteratordeEv # -- Begin function _ZNKSt19_Bit_const_iteratordeEv
	.p2align	4, 0x90
	.type	_ZNKSt19_Bit_const_iteratordeEv,@function
_ZNKSt19_Bit_const_iteratordeEv:        # @_ZNKSt19_Bit_const_iteratordeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rsi
	movb	8(%rax), %cl
                                        # implicit-def: $rax
	movb	%cl, %al
	movl	$1, %edx
	shlxq	%rax, %rdx, %rdx
	leaq	-24(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZNSt14_Bit_referenceC2EPmm
	movq	-40(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt14_Bit_referencecvbEv
	movq	%fs:40, %rdx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rdx
	movb	%al, -41(%rbp)          # 1-byte Spill
	jne	.LBB508_2
# %bb.1:
	movb	-41(%rbp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB508_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end508:
	.size	_ZNKSt19_Bit_const_iteratordeEv, .Lfunc_end508-_ZNKSt19_Bit_const_iteratordeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt13_Bit_iteratordeEv,"axG",@progbits,_ZNKSt13_Bit_iteratordeEv,comdat
	.weak	_ZNKSt13_Bit_iteratordeEv # -- Begin function _ZNKSt13_Bit_iteratordeEv
	.p2align	4, 0x90
	.type	_ZNKSt13_Bit_iteratordeEv,@function
_ZNKSt13_Bit_iteratordeEv:              # @_ZNKSt13_Bit_iteratordeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rsi
	movb	8(%rax), %cl
                                        # implicit-def: $rax
	movb	%cl, %al
	movl	$1, %edx
	shlxq	%rax, %rdx, %rdx
	leaq	-24(%rbp), %rdi
	callq	_ZNSt14_Bit_referenceC2EPmm
	movq	-24(%rbp), %rax
	movq	-16(%rbp), %rdx
	movq	%fs:40, %rsi
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rsi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	jne	.LBB509_2
# %bb.1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	-48(%rbp), %rdx         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB509_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end509:
	.size	_ZNKSt13_Bit_iteratordeEv, .Lfunc_end509-_ZNKSt13_Bit_iteratordeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_Bit_const_iteratorppEv,"axG",@progbits,_ZNSt19_Bit_const_iteratorppEv,comdat
	.weak	_ZNSt19_Bit_const_iteratorppEv # -- Begin function _ZNSt19_Bit_const_iteratorppEv
	.p2align	4, 0x90
	.type	_ZNSt19_Bit_const_iteratorppEv,@function
_ZNSt19_Bit_const_iteratorppEv:         # @_ZNSt19_Bit_const_iteratorppEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSt18_Bit_iterator_base10_M_bump_upEv
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end510:
	.size	_ZNSt19_Bit_const_iteratorppEv, .Lfunc_end510-_ZNSt19_Bit_const_iteratorppEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bit_iteratorppEv,"axG",@progbits,_ZNSt13_Bit_iteratorppEv,comdat
	.weak	_ZNSt13_Bit_iteratorppEv # -- Begin function _ZNSt13_Bit_iteratorppEv
	.p2align	4, 0x90
	.type	_ZNSt13_Bit_iteratorppEv,@function
_ZNSt13_Bit_iteratorppEv:               # @_ZNSt13_Bit_iteratorppEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSt18_Bit_iterator_base10_M_bump_upEv
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end511:
	.size	_ZNSt13_Bit_iteratorppEv, .Lfunc_end511-_ZNSt13_Bit_iteratorppEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Bit_referenceC2EPmm,"axG",@progbits,_ZNSt14_Bit_referenceC2EPmm,comdat
	.weak	_ZNSt14_Bit_referenceC2EPmm # -- Begin function _ZNSt14_Bit_referenceC2EPmm
	.p2align	4, 0x90
	.type	_ZNSt14_Bit_referenceC2EPmm,@function
_ZNSt14_Bit_referenceC2EPmm:            # @_ZNSt14_Bit_referenceC2EPmm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-24(%rbp), %rcx
	movq	%rcx, 8(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end512:
	.size	_ZNSt14_Bit_referenceC2EPmm, .Lfunc_end512-_ZNSt14_Bit_referenceC2EPmm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt18_Bit_iterator_base10_M_bump_upEv,"axG",@progbits,_ZNSt18_Bit_iterator_base10_M_bump_upEv,comdat
	.weak	_ZNSt18_Bit_iterator_base10_M_bump_upEv # -- Begin function _ZNSt18_Bit_iterator_base10_M_bump_upEv
	.p2align	4, 0x90
	.type	_ZNSt18_Bit_iterator_base10_M_bump_upEv,@function
_ZNSt18_Bit_iterator_base10_M_bump_upEv: # @_ZNSt18_Bit_iterator_base10_M_bump_upEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movl	8(%rax), %ecx
	movl	%ecx, %edx
	addl	$1, %edx
	movl	%edx, 8(%rax)
	cmpl	$63, %ecx
	movq	%rax, -16(%rbp)         # 8-byte Spill
	jne	.LBB513_2
# %bb.1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movl	$0, 8(%rax)
	movq	(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, (%rax)
.LBB513_2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end513:
	.size	_ZNSt18_Bit_iterator_base10_M_bump_upEv, .Lfunc_end513-_ZNSt18_Bit_iterator_base10_M_bump_upEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv,@function
_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv: # @_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end514:
	.size	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv, .Lfunc_end514-_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv,"axG",@progbits,_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv,comdat
	.weak	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv # -- Begin function _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv,@function
_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv: # @_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	16(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$24, %ecx
	idivq	%rcx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end515:
	.size	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv, .Lfunc_end515-_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm: # @_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB516_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB516_3
.LBB516_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB516_3
.LBB516_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end516:
	.size	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm, .Lfunc_end516-_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_ # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end517:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_, .Lfunc_end517-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_ # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception44
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$384307168202282325, %rax # imm = 0x555555555555555
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_
	movq	%rax, -24(%rbp)
.Ltmp533:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp534:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB518_1
.LBB518_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB518_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB518_3:
	.cfi_def_cfa %rbp, 16
.Ltmp535:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB518_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end518:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_, .Lfunc_end518-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table518:
.Lexception44:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase32-.Lttbaseref32
.Lttbaseref32:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Ltmp533-.Lfunc_begin44 # >> Call Site 1 <<
	.uleb128 .Ltmp534-.Ltmp533      #   Call between .Ltmp533 and .Ltmp534
	.uleb128 .Ltmp535-.Lfunc_begin44 #     jumps to .Ltmp535
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp534-.Lfunc_begin44 # >> Call Site 2 <<
	.uleb128 .Lfunc_end518-.Ltmp534 #   Call between .Ltmp534 and .Lfunc_end518
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end44:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase32:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end519:
	.size	_ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv, .Lfunc_end519-_ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_,"axG",@progbits,_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_,comdat
	.weak	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_ # -- Begin function _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_,@function
_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_: # @_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end520:
	.size	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_, .Lfunc_end520-_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end521:
	.size	_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv, .Lfunc_end521-_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$384307168202282325, %rax # imm = 0x555555555555555
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end522:
	.size	_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv, .Lfunc_end522-_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m,"axG",@progbits,_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m,comdat
	.weak	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m # -- Begin function _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m,@function
_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m: # @_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end523:
	.size	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m, .Lfunc_end523-_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB524_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB524_2:
	imulq	$24, -16(%rbp), %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end524:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv, .Lfunc_end524-_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end525:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE, .Lfunc_end525-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_,"axG",@progbits,_ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_,comdat
	.weak	_ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_ # -- Begin function _ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	.p2align	4, 0x90
	.type	_ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_,@function
_ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_: # @_ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end526:
	.size	_ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_, .Lfunc_end526-_ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_,"axG",@progbits,_ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_,comdat
	.weak	_ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_ # -- Begin function _ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	.p2align	4, 0x90
	.type	_ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_,@function
_ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_: # @_ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
.LBB527_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB527_4
# %bb.2:                                #   in Loop: Header=BB527_1 Depth=1
	movq	-40(%rbp), %rdi
	callq	_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_
	movq	-8(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_
	movq	-32(%rbp), %rdx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_
# %bb.3:                                #   in Loop: Header=BB527_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$24, %rax
	movq	%rax, -8(%rbp)
	movq	-40(%rbp), %rax
	addq	$24, %rax
	movq	%rax, -40(%rbp)
	jmp	.LBB527_1
.LBB527_4:
	movq	-40(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end527:
	.size	_ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_, .Lfunc_end527-_ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_,"axG",@progbits,_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_,comdat
	.weak	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_ # -- Begin function _ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_,@function
_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_: # @_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end528:
	.size	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_, .Lfunc_end528-_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_,"axG",@progbits,_ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_,comdat
	.weak	_ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_ # -- Begin function _ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_
	.p2align	4, 0x90
	.type	_ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_,@function
_ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_: # @_ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rax
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	movq	-24(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end529:
	.size	_ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_, .Lfunc_end529-_ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_: # @_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end530:
	.size	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_, .Lfunc_end530-_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_ # -- Begin function _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_,@function
_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_: # @_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end531:
	.size	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_, .Lfunc_end531-_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end532:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_, .Lfunc_end532-_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE,"axG",@progbits,_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE,comdat
	.weak	_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE # -- Begin function _ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE,@function
_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE: # @_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end533:
	.size	_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE, .Lfunc_end533-_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end534:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_, .Lfunc_end534-_ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_ # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end535:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_, .Lfunc_end535-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EOS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_ # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	callq	_ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSaIN2sf6VertexEEC2ERKS1_
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end536:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_, .Lfunc_end536-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2EOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_,"axG",@progbits,_ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_,comdat
	.weak	_ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_ # -- Begin function _ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_
	.p2align	4, 0x90
	.type	_ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_,@function
_ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_: # @_ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end537:
	.size	_ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_, .Lfunc_end537-_ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_ # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	movq	-16(%rbp), %rcx
	movq	8(%rcx), %rcx
	movq	%rcx, 8(%rax)
	movq	-16(%rbp), %rcx
	movq	16(%rcx), %rcx
	movq	%rcx, 16(%rax)
	movq	-16(%rbp), %rax
	movq	$0, 16(%rax)
	movq	-16(%rbp), %rax
	movq	$0, 8(%rax)
	movq	-16(%rbp), %rax
	movq	$0, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end538:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_, .Lfunc_end538-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_dataC2EOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end539:
	.size	_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_, .Lfunc_end539-_ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function _ZSt7forwardIZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS2_E4typeE
	.type	_ZSt7forwardIZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS2_E4typeE: # @"_ZSt7forwardIZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS2_E4typeE"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end540:
	.size	_ZSt7forwardIZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end540-_ZSt7forwardIZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNSt8functionIFvhEEC2IZN5PlaneC1EbE3$_0vvEET_
	.type	_ZNSt8functionIFvhEEC2IZN5PlaneC1EbE3$_0vvEET_,@function
_ZNSt8functionIFvhEEC2IZN5PlaneC1EbE3$_0vvEET_: # @"_ZNSt8functionIFvhEEC2IZN5PlaneC1EbE3$_0vvEET_"
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception45
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt14_Function_baseC2Ev
.Ltmp536:
	leaq	-16(%rbp), %rdi
	callq	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E21_M_not_empty_functionIS2_EEbRKT_
.Ltmp537:
	movb	%al, -49(%rbp)          # 1-byte Spill
	jmp	.LBB541_1
.LBB541_1:
	movb	-49(%rbp), %al          # 1-byte Reload
	testb	$1, %al
	jne	.LBB541_2
	jmp	.LBB541_5
.LBB541_2:
	leaq	-16(%rbp), %rdi
	callq	_ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_
.Ltmp538:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_
.Ltmp539:
	jmp	.LBB541_3
.LBB541_3:
	leaq	_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E9_M_invokeERKSt9_Any_dataOh(%rip), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 24(%rcx)
	leaq	_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation(%rip), %rax
	movq	%rax, 16(%rcx)
	jmp	.LBB541_5
.LBB541_4:
.Ltmp540:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -32(%rbp)
	movl	%edx, -36(%rbp)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt14_Function_baseD2Ev
	jmp	.LBB541_7
.LBB541_5:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB541_8
# %bb.6:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB541_7:
	.cfi_def_cfa %rbp, 16
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB541_8:
	callq	__stack_chk_fail@PLT
.Lfunc_end541:
	.size	_ZNSt8functionIFvhEEC2IZN5PlaneC1EbE3$_0vvEET_, .Lfunc_end541-_ZNSt8functionIFvhEEC2IZN5PlaneC1EbE3$_0vvEET_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table541:
.Lexception45:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Ltmp536-.Lfunc_begin45 # >> Call Site 1 <<
	.uleb128 .Ltmp539-.Ltmp536      #   Call between .Ltmp536 and .Ltmp539
	.uleb128 .Ltmp540-.Lfunc_begin45 #     jumps to .Ltmp540
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp539-.Lfunc_begin45 # >> Call Site 2 <<
	.uleb128 .Lfunc_end541-.Ltmp539 #   Call between .Ltmp539 and .Lfunc_end541
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end45:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt8functionIFvhEE4swapERS1_,"axG",@progbits,_ZNSt8functionIFvhEE4swapERS1_,comdat
	.weak	_ZNSt8functionIFvhEE4swapERS1_ # -- Begin function _ZNSt8functionIFvhEE4swapERS1_
	.p2align	4, 0x90
	.type	_ZNSt8functionIFvhEE4swapERS1_,@function
_ZNSt8functionIFvhEE4swapERS1_:         # @_ZNSt8functionIFvhEE4swapERS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	-16(%rbp), %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$16, %rax
	movq	-16(%rbp), %rcx
	addq	$16, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$24, %rax
	movq	-16(%rbp), %rcx
	addq	$24, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end542:
	.size	_ZNSt8functionIFvhEE4swapERS1_, .Lfunc_end542-_ZNSt8functionIFvhEE4swapERS1_
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E21_M_not_empty_functionIS2_EEbRKT_
	.type	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E21_M_not_empty_functionIS2_EEbRKT_,@function
_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E21_M_not_empty_functionIS2_EEbRKT_: # @"_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E21_M_not_empty_functionIS2_EEbRKT_"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movb	$1, %al
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end543:
	.size	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E21_M_not_empty_functionIS2_EEbRKT_, .Lfunc_end543-_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E21_M_not_empty_functionIS2_EEbRKT_
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_
	.type	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_,@function
_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_: # @"_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_St17integral_constantIbLb1EE
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end544:
	.size	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_, .Lfunc_end544-_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_
	.type	_ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_,@function
_ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_: # @"_ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end545:
	.size	_ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_, .Lfunc_end545-_ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E9_M_invokeERKSt9_Any_dataOh
	.type	_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E9_M_invokeERKSt9_Any_dataOh,@function
_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E9_M_invokeERKSt9_Any_dataOh: # @"_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E9_M_invokeERKSt9_Any_dataOh"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt10__invoke_rIvRZN5PlaneC1EbE3$_0JhEENSt9enable_ifIXsr6__and_ISt7is_voidIT_ESt14__is_invocableIT0_JDpT1_EEEE5valueES5_E4typeEOS8_DpOS9_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end546:
	.size	_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E9_M_invokeERKSt9_Any_dataOh, .Lfunc_end546-_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E9_M_invokeERKSt9_Any_dataOh
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation
	.type	_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation,@function
_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation: # @"_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	movl	-20(%rbp), %eax
	testl	%eax, %eax
	movl	%eax, -24(%rbp)         # 4-byte Spill
	je	.LBB547_1
	jmp	.LBB547_5
.LBB547_5:
	movl	-24(%rbp), %eax         # 4-byte Reload
	subl	$1, %eax
	je	.LBB547_2
	jmp	.LBB547_3
.LBB547_1:
	movq	-8(%rbp), %rdi
	callq	_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v
	leaq	_ZTIZN5PlaneC1EbE3$_0(%rip), %rcx
	movq	%rcx, (%rax)
	jmp	.LBB547_4
.LBB547_2:
	movq	-16(%rbp), %rdi
	callq	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data
	movq	-8(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt9_Any_data9_M_accessIPZN5PlaneC1EbE3$_0EERT_v
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rcx, (%rax)
	jmp	.LBB547_4
.LBB547_3:
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movl	-20(%rbp), %edx
	callq	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation
.LBB547_4:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	andb	$1, %al
	movzbl	%al, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end547:
	.size	_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation, .Lfunc_end547-_ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_St17integral_constantIbLb1EE
	.type	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_St17integral_constantIbLb1EE,@function
_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_St17integral_constantIbLb1EE: # @"_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_St17integral_constantIbLb1EE"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNSt9_Any_data9_M_accessEv
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end548:
	.size	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_St17integral_constantIbLb1EE, .Lfunc_end548-_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt9_Any_data9_M_accessEv,"axG",@progbits,_ZNSt9_Any_data9_M_accessEv,comdat
	.weak	_ZNSt9_Any_data9_M_accessEv # -- Begin function _ZNSt9_Any_data9_M_accessEv
	.p2align	4, 0x90
	.type	_ZNSt9_Any_data9_M_accessEv,@function
_ZNSt9_Any_data9_M_accessEv:            # @_ZNSt9_Any_data9_M_accessEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end549:
	.size	_ZNSt9_Any_data9_M_accessEv, .Lfunc_end549-_ZNSt9_Any_data9_M_accessEv
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function _ZSt10__invoke_rIvRZN5PlaneC1EbE3$_0JhEENSt9enable_ifIXsr6__and_ISt7is_voidIT_ESt14__is_invocableIT0_JDpT1_EEEE5valueES5_E4typeEOS8_DpOS9_
	.type	_ZSt10__invoke_rIvRZN5PlaneC1EbE3$_0JhEENSt9enable_ifIXsr6__and_ISt7is_voidIT_ESt14__is_invocableIT0_JDpT1_EEEE5valueES5_E4typeEOS8_DpOS9_,@function
_ZSt10__invoke_rIvRZN5PlaneC1EbE3$_0JhEENSt9enable_ifIXsr6__and_ISt7is_voidIT_ESt14__is_invocableIT0_JDpT1_EEEE5valueES5_E4typeEOS8_DpOS9_: # @"_ZSt10__invoke_rIvRZN5PlaneC1EbE3$_0JhEENSt9enable_ifIXsr6__and_ISt7is_voidIT_ESt14__is_invocableIT0_JDpT1_EEEE5valueES5_E4typeEOS8_DpOS9_"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt7forwardIRZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS3_E4typeE
	movq	-16(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt13__invoke_implIvRZN5PlaneC1EbE3$_0JhEET_St14__invoke_otherOT0_DpOT1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end550:
	.size	_ZSt10__invoke_rIvRZN5PlaneC1EbE3$_0JhEENSt9enable_ifIXsr6__and_ISt7is_voidIT_ESt14__is_invocableIT0_JDpT1_EEEE5valueES5_E4typeEOS8_DpOS9_, .Lfunc_end550-_ZSt10__invoke_rIvRZN5PlaneC1EbE3$_0JhEENSt9enable_ifIXsr6__and_ISt7is_voidIT_ESt14__is_invocableIT0_JDpT1_EEEE5valueES5_E4typeEOS8_DpOS9_
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data
	.type	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data,@function
_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data: # @"_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERKT_v
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt11__addressofIKZN5PlaneC1EbE3$_0EPT_RS3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end551:
	.size	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data, .Lfunc_end551-_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE,"axG",@progbits,_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE,comdat
	.weak	_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE # -- Begin function _ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE,@function
_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE: # @_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end552:
	.size	_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE, .Lfunc_end552-_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function _ZSt13__invoke_implIvRZN5PlaneC1EbE3$_0JhEET_St14__invoke_otherOT0_DpOT1_
	.type	_ZSt13__invoke_implIvRZN5PlaneC1EbE3$_0JhEET_St14__invoke_otherOT0_DpOT1_,@function
_ZSt13__invoke_implIvRZN5PlaneC1EbE3$_0JhEET_St14__invoke_otherOT0_DpOT1_: # @"_ZSt13__invoke_implIvRZN5PlaneC1EbE3$_0JhEET_St14__invoke_otherOT0_DpOT1_"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIRZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS3_E4typeE
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movzbl	(%rax), %esi
	callq	_ZZN5PlaneC1EbENK3$_0clEh
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end553:
	.size	_ZSt13__invoke_implIvRZN5PlaneC1EbE3$_0JhEET_St14__invoke_otherOT0_DpOT1_, .Lfunc_end553-_ZSt13__invoke_implIvRZN5PlaneC1EbE3$_0JhEET_St14__invoke_otherOT0_DpOT1_
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZSt7forwardIRZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS3_E4typeE
	.type	_ZSt7forwardIRZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS3_E4typeE,@function
_ZSt7forwardIRZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS3_E4typeE: # @"_ZSt7forwardIRZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS3_E4typeE"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end554:
	.size	_ZSt7forwardIRZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS3_E4typeE, .Lfunc_end554-_ZSt7forwardIRZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS3_E4typeE
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZZN5PlaneC1EbENK3$_0clEh
	.type	_ZZN5PlaneC1EbENK3$_0clEh,@function
_ZZN5PlaneC1EbENK3$_0clEh:              # @"_ZZN5PlaneC1EbENK3$_0clEh"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
                                        # kill: def $sil killed $sil killed $esi
	movq	%rdi, -8(%rbp)
	movb	%sil, -9(%rbp)
	movzbl	-9(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB555_2
# %bb.1:
	jmp	.LBB555_11
.LBB555_2:
	movzbl	-9(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB555_4
# %bb.3:
	jmp	.LBB555_10
.LBB555_4:
	movzbl	-9(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB555_6
# %bb.5:
	jmp	.LBB555_9
.LBB555_6:
	movzbl	-9(%rbp), %eax
	cmpl	$0, %eax
	jne	.LBB555_8
# %bb.7:
	jmp	.LBB555_8
.LBB555_8:
	jmp	.LBB555_9
.LBB555_9:
	jmp	.LBB555_10
.LBB555_10:
	jmp	.LBB555_11
.LBB555_11:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end555:
	.size	_ZZN5PlaneC1EbENK3$_0clEh, .Lfunc_end555-_ZZN5PlaneC1EbENK3$_0clEh
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNKSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERKT_v
	.type	_ZNKSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERKT_v,@function
_ZNKSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERKT_v: # @"_ZNKSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERKT_v"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNKSt9_Any_data9_M_accessEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end556:
	.size	_ZNKSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERKT_v, .Lfunc_end556-_ZNKSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERKT_v
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZSt11__addressofIKZN5PlaneC1EbE3$_0EPT_RS3_
	.type	_ZSt11__addressofIKZN5PlaneC1EbE3$_0EPT_RS3_,@function
_ZSt11__addressofIKZN5PlaneC1EbE3$_0EPT_RS3_: # @"_ZSt11__addressofIKZN5PlaneC1EbE3$_0EPT_RS3_"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end557:
	.size	_ZSt11__addressofIKZN5PlaneC1EbE3$_0EPT_RS3_, .Lfunc_end557-_ZSt11__addressofIKZN5PlaneC1EbE3$_0EPT_RS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt9_Any_data9_M_accessEv,"axG",@progbits,_ZNKSt9_Any_data9_M_accessEv,comdat
	.weak	_ZNKSt9_Any_data9_M_accessEv # -- Begin function _ZNKSt9_Any_data9_M_accessEv
	.p2align	4, 0x90
	.type	_ZNKSt9_Any_data9_M_accessEv,@function
_ZNKSt9_Any_data9_M_accessEv:           # @_ZNKSt9_Any_data9_M_accessEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end558:
	.size	_ZNKSt9_Any_data9_M_accessEv, .Lfunc_end558-_ZNKSt9_Any_data9_M_accessEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v,"axG",@progbits,_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v,comdat
	.weak	_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v # -- Begin function _ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v
	.p2align	4, 0x90
	.type	_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v,@function
_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v: # @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt9_Any_data9_M_accessEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end559:
	.size	_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v, .Lfunc_end559-_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function _ZNSt9_Any_data9_M_accessIPZN5PlaneC1EbE3$_0EERT_v
	.type	_ZNSt9_Any_data9_M_accessIPZN5PlaneC1EbE3$_0EERT_v,@function
_ZNSt9_Any_data9_M_accessIPZN5PlaneC1EbE3$_0EERT_v: # @"_ZNSt9_Any_data9_M_accessIPZN5PlaneC1EbE3$_0EERT_v"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt9_Any_data9_M_accessEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end560:
	.size	_ZNSt9_Any_data9_M_accessIPZN5PlaneC1EbE3$_0EERT_v, .Lfunc_end560-_ZNSt9_Any_data9_M_accessIPZN5PlaneC1EbE3$_0EERT_v
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation
	.type	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation,@function
_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation: # @"_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movl	%edx, -20(%rbp)
	movl	-20(%rbp), %eax
	movl	%eax, %ecx
	movq	%rcx, %rsi
	subq	$3, %rsi
	movq	%rcx, -40(%rbp)         # 8-byte Spill
	ja	.LBB561_5
# %bb.6:
	leaq	.LJTI561_0(%rip), %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movslq	(%rax,%rcx,4), %rdx
	addq	%rax, %rdx
	jmpq	*%rdx
.LBB561_1:
	movq	-8(%rbp), %rdi
	callq	_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v
	leaq	_ZTIZN5PlaneC1EbE3$_0(%rip), %rcx
	movq	%rcx, (%rax)
	jmp	.LBB561_5
.LBB561_2:
	movq	-16(%rbp), %rdi
	callq	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data
	movq	-8(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt9_Any_data9_M_accessIPZN5PlaneC1EbE3$_0EERT_v
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	%rcx, (%rax)
	jmp	.LBB561_5
.LBB561_3:
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E8_M_cloneERSt9_Any_dataRKS4_St17integral_constantIbLb1EE
	jmp	.LBB561_5
.LBB561_4:
	movq	-8(%rbp), %rdi
	callq	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE
.LBB561_5:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	andb	$1, %al
	movzbl	%al, %eax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end561:
	.size	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation, .Lfunc_end561-_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	2
.LJTI561_0:
	.long	.LBB561_1-.LJTI561_0
	.long	.LBB561_2-.LJTI561_0
	.long	.LBB561_3-.LJTI561_0
	.long	.LBB561_4-.LJTI561_0
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E8_M_cloneERSt9_Any_dataRKS4_St17integral_constantIbLb1EE
	.type	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E8_M_cloneERSt9_Any_dataRKS4_St17integral_constantIbLb1EE,@function
_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E8_M_cloneERSt9_Any_dataRKS4_St17integral_constantIbLb1EE: # @"_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E8_M_cloneERSt9_Any_dataRKS4_St17integral_constantIbLb1EE"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNSt9_Any_data9_M_accessEv
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNKSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERKT_v
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end562:
	.size	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E8_M_cloneERSt9_Any_dataRKS4_St17integral_constantIbLb1EE, .Lfunc_end562-_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E8_M_cloneERSt9_Any_dataRKS4_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE
	.type	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE,@function
_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE: # @"_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZNSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERT_v
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end563:
	.size	_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE, .Lfunc_end563-_ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function _ZNSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERT_v
	.type	_ZNSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERT_v,@function
_ZNSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERT_v: # @"_ZNSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERT_v"
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNSt9_Any_data9_M_accessEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end564:
	.size	_ZNSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERT_v, .Lfunc_end564-_ZNSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERT_v
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_,"axG",@progbits,_ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_,comdat
	.weak	_ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_ # -- Begin function _ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_
	.p2align	4, 0x90
	.type	_ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_,@function
_ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_: # @_ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movq	%rsi, -48(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_
	vmovdqu	(%rax), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_
	movq	-40(%rbp), %rcx
	vmovdqu	(%rax), %xmm0
	vmovdqu	%xmm0, (%rcx)
	leaq	-32(%rbp), %rdi
	callq	_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_
	movq	-48(%rbp), %rcx
	vmovdqu	(%rax), %xmm0
	vmovdqu	%xmm0, (%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB565_2
# %bb.1:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB565_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end565:
	.size	_ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_, .Lfunc_end565-_ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_,"axG",@progbits,_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_,comdat
	.weak	_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_ # -- Begin function _ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_
	.p2align	4, 0x90
	.type	_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_,@function
_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_: # @_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx
	movq	%rax, (%rcx)
	leaq	-16(%rbp), %rdi
	callq	_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_
	movq	(%rax), %rax
	movq	-32(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB566_2
# %bb.1:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB566_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end566:
	.size	_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_, .Lfunc_end566-_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_,"axG",@progbits,_ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_,comdat
	.weak	_ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_ # -- Begin function _ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_
	.p2align	4, 0x90
	.type	_ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_,@function
_ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_: # @_ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rdi
	callq	_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_
	movq	(%rax), %rax
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx
	movq	%rax, (%rcx)
	leaq	-16(%rbp), %rdi
	callq	_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_
	movq	(%rax), %rax
	movq	-32(%rbp), %rcx
	movq	%rax, (%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB567_2
# %bb.1:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB567_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end567:
	.size	_ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_, .Lfunc_end567-_ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_,"axG",@progbits,_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_,comdat
	.weak	_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_ # -- Begin function _ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_
	.p2align	4, 0x90
	.type	_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_,@function
_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_: # @_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end568:
	.size	_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_, .Lfunc_end568-_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_,"axG",@progbits,_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_,comdat
	.weak	_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_ # -- Begin function _ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_
	.p2align	4, 0x90
	.type	_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_,@function
_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_: # @_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end569:
	.size	_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_, .Lfunc_end569-_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_,"axG",@progbits,_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_,comdat
	.weak	_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_ # -- Begin function _ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_
	.p2align	4, 0x90
	.type	_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_,@function
_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_: # @_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end570:
	.size	_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_, .Lfunc_end570-_ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end571:
	.size	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, .Lfunc_end571-_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,@function
_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_: # @_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rax
	leaq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -88(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-152(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rax,%rdx,8), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB572_2
# %bb.1:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB572_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end572:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .Lfunc_end572-_ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end573:
	.size	_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_, .Lfunc_end573-_ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE # -- Begin function _ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE: # @_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end574:
	.size	_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end574-_ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bit_iteratorppEi,"axG",@progbits,_ZNSt13_Bit_iteratorppEi,comdat
	.weak	_ZNSt13_Bit_iteratorppEi # -- Begin function _ZNSt13_Bit_iteratorppEi
	.p2align	4, 0x90
	.type	_ZNSt13_Bit_iteratorppEi,@function
_ZNSt13_Bit_iteratorppEi:               # @_ZNSt13_Bit_iteratorppEi
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -44(%rbp)
	movq	-40(%rbp), %rax
	vmovdqu	(%rax), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt18_Bit_iterator_base10_M_bump_upEv
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rcx
	movl	%edx, -48(%rbp)         # 4-byte Spill
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB575_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	-48(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB575_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end575:
	.size	_ZNSt13_Bit_iteratorppEi, .Lfunc_end575-_ZNSt13_Bit_iteratorppEi
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,"axG",@progbits,_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,comdat
	.weak	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb # -- Begin function _ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,@function
_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb: # @_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$400, %rsp              # imm = 0x190
                                        # kill: def $cl killed $cl killed $ecx
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -24(%rbp)
	movl	%edx, -16(%rbp)
	movq	%rdi, -304(%rbp)
	andb	$1, %cl
	movb	%cl, -305(%rbp)
	movq	-304(%rbp), %rax
	movq	16(%rax), %rsi
	movq	%rax, %rdi
	movq	%rax, -336(%rbp)        # 8-byte Spill
	movq	%rsi, -344(%rbp)        # 8-byte Spill
	callq	_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
	movq	-344(%rbp), %rsi        # 8-byte Reload
	cmpq	%rax, %rsi
	je	.LBB576_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-336(%rbp), %rax        # 8-byte Reload
	movq	16(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	24(%rax), %rcx
	movq	%rcx, -48(%rbp)
	addq	$16, %rax
	movq	%rax, %rdi
	movl	$1, %esi
	callq	_ZStplRKSt13_Bit_iteratorl
	movq	%rax, -72(%rbp)
	movl	%edx, -64(%rbp)
	movq	-40(%rbp), %rdi
	movl	-32(%rbp), %esi
	movq	-56(%rbp), %rdx
	movl	-48(%rbp), %ecx
	movq	-72(%rbp), %r8
	movl	-64(%rbp), %r9d
	callq	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
	movq	%rax, -88(%rbp)
	movl	%edx, -80(%rbp)
	movb	-305(%rbp), %r10b
	leaq	-24(%rbp), %rdi
	movb	%r10b, -345(%rbp)       # 1-byte Spill
	callq	_ZNKSt13_Bit_iteratordeEv
	movq	%rax, -280(%rbp)
	movq	%rdx, -272(%rbp)
	movb	-345(%rbp), %r10b       # 1-byte Reload
	andb	$1, %r10b
	leaq	-280(%rbp), %rdi
	movzbl	%r10b, %esi
	callq	_ZNSt14_Bit_referenceaSEb
	movq	-336(%rbp), %rdx        # 8-byte Reload
	addq	$16, %rdx
	movq	%rdx, %rdi
	movq	%rax, -360(%rbp)        # 8-byte Spill
	callq	_ZNSt13_Bit_iteratorppEv
	jmp	.LBB576_3
.LBB576_2:
	movq	-336(%rbp), %rdi        # 8-byte Reload
	movl	$1, %esi
	leaq	.L.str.19(%rip), %rdx
	callq	_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc
	movq	%rax, -320(%rbp)
	movq	-336(%rbp), %rax        # 8-byte Reload
	movq	-320(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13_Bvector_baseISaIbEE11_M_allocateEm
	movq	%rax, -328(%rbp)
	movq	-328(%rbp), %rdi
	callq	_ZSt11__addressofImEPT_RS0_
	xorl	%edx, %edx
	leaq	-104(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNSt13_Bit_iteratorC2EPmj
	movq	-336(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE5beginEv
	movq	%rax, -152(%rbp)
	movl	%edx, -144(%rbp)
	leaq	-136(%rbp), %rdi
	leaq	-152(%rbp), %rsi
	callq	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
	leaq	-168(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
	movq	-104(%rbp), %rax
	movq	%rax, -184(%rbp)
	movq	-96(%rbp), %rax
	movq	%rax, -176(%rbp)
	movq	-136(%rbp), %rsi
	movl	-128(%rbp), %edx
	movq	-168(%rbp), %rcx
	movl	-160(%rbp), %r8d
	movq	-336(%rbp), %rdi        # 8-byte Reload
	leaq	-184(%rbp), %rax
	movq	(%rax), %r9
	movq	%r9, (%rsp)
	movq	8(%rax), %rax
	movq	%rax, 8(%rsp)
	callq	_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
	xorl	%esi, %esi
	movq	%rax, -120(%rbp)
	movl	%edx, -112(%rbp)
	movb	-305(%rbp), %r10b
	leaq	-120(%rbp), %rdi
	movb	%r10b, -361(%rbp)       # 1-byte Spill
	callq	_ZNSt13_Bit_iteratorppEi
	movq	%rax, -200(%rbp)
	movl	%edx, -192(%rbp)
	leaq	-200(%rbp), %rdi
	callq	_ZNKSt13_Bit_iteratordeEv
	movq	%rax, -296(%rbp)
	movq	%rdx, -288(%rbp)
	movb	-361(%rbp), %r10b       # 1-byte Reload
	andb	$1, %r10b
	leaq	-296(%rbp), %rdi
	movzbl	%r10b, %esi
	callq	_ZNSt14_Bit_referenceaSEb
	movq	-24(%rbp), %rcx
	movq	%rcx, -232(%rbp)
	movq	-16(%rbp), %rcx
	movq	%rcx, -224(%rbp)
	movq	-336(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -376(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIbSaIbEE3endEv
	movq	%rax, -248(%rbp)
	movl	%edx, -240(%rbp)
	movq	-120(%rbp), %rax
	movq	%rax, -264(%rbp)
	movq	-112(%rbp), %rax
	movq	%rax, -256(%rbp)
	movq	-232(%rbp), %rdi
	movl	-224(%rbp), %esi
	movq	-248(%rbp), %rdx
	movl	-240(%rbp), %ecx
	movq	-264(%rbp), %r8
	movl	-256(%rbp), %r9d
	callq	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
	movq	%rax, -216(%rbp)
	movl	%edx, -208(%rbp)
	movq	-336(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
	movq	-328(%rbp), %rax
	movq	-320(%rbp), %rdi
	movq	%rax, -384(%rbp)        # 8-byte Spill
	callq	_ZNSt13_Bvector_baseISaIbEE8_S_nwordEm
	shlq	$3, %rax
	movq	-384(%rbp), %rdi        # 8-byte Reload
	addq	%rax, %rdi
	movq	-336(%rbp), %rax        # 8-byte Reload
	movq	%rdi, 32(%rax)
	movq	-104(%rbp), %rdi
	movq	%rdi, (%rax)
	movl	-96(%rbp), %ecx
	movl	%ecx, 8(%rax)
	movq	-216(%rbp), %rdi
	movq	%rdi, 16(%rax)
	movl	-208(%rbp), %ecx
	movl	%ecx, 24(%rax)
.LBB576_3:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB576_5
# %bb.4:
	addq	$400, %rsp              # imm = 0x190
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB576_5:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end576:
	.size	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb, .Lfunc_end576-_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_,"axG",@progbits,_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_,comdat
	.weak	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_ # -- Begin function _ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_,@function
_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_: # @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$176, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -112(%rbp)
	movq	-112(%rbp), %rdi
	movl	-104(%rbp), %esi
	callq	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -88(%rbp)
	movl	%edx, -80(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -144(%rbp)
	movq	-144(%rbp), %rdi
	movl	-136(%rbp), %esi
	callq	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -128(%rbp)
	movl	%edx, -120(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -160(%rbp)
	movq	-88(%rbp), %rdi
	movl	-80(%rbp), %esi
	movq	-128(%rbp), %rdx
	movl	-120(%rbp), %ecx
	movq	-160(%rbp), %r8
	movl	-152(%rbp), %r9d
	callq	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -164(%rbp)        # 4-byte Spill
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jne	.LBB577_2
# %bb.1:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	-164(%rbp), %edx        # 4-byte Reload
	addq	$176, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB577_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end577:
	.size	_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_, .Lfunc_end577-_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc: # @_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB578_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB578_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIbSaIbEE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB578_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB578_5
.LBB578_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIbSaIbEE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB578_6
.LBB578_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB578_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB578_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB578_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end578:
	.size	_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc, .Lfunc_end578-_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_,"axG",@progbits,_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_,comdat
	.weak	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_ # -- Begin function _ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_,@function
_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_: # @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$176, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -112(%rbp)
	movq	-112(%rbp), %rdi
	movl	-104(%rbp), %esi
	callq	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -88(%rbp)
	movl	%edx, -80(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -144(%rbp)
	movq	-144(%rbp), %rdi
	movl	-136(%rbp), %esi
	callq	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -128(%rbp)
	movl	%edx, -120(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -160(%rbp)
	movq	-88(%rbp), %rdi
	movl	-80(%rbp), %esi
	movq	-128(%rbp), %rdx
	movl	-120(%rbp), %ecx
	movq	-160(%rbp), %r8
	movl	-152(%rbp), %r9d
	callq	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -164(%rbp)        # 4-byte Spill
	movq	%rax, -176(%rbp)        # 8-byte Spill
	jne	.LBB579_2
# %bb.1:
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	-164(%rbp), %edx        # 4-byte Reload
	addq	$176, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB579_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end579:
	.size	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_, .Lfunc_end579-_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ # -- Begin function _ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,@function
_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_: # @_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$208, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-128(%rbp), %rdi
	movl	-120(%rbp), %esi
	callq	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -104(%rbp)
	movl	%edx, -96(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -160(%rbp)
	movq	-160(%rbp), %rdi
	movl	-152(%rbp), %esi
	callq	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -144(%rbp)
	movl	%edx, -136(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -192(%rbp)
	movq	-192(%rbp), %rdi
	movl	-184(%rbp), %esi
	callq	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -176(%rbp)
	movl	%edx, -168(%rbp)
	movq	-104(%rbp), %rdi
	movl	-96(%rbp), %esi
	movq	-144(%rbp), %rdx
	movl	-136(%rbp), %ecx
	movq	-176(%rbp), %r8
	movl	-168(%rbp), %r9d
	callq	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	movq	%rax, -88(%rbp)
	movl	%edx, -80(%rbp)
	movq	-88(%rbp), %rsi
	movl	-80(%rbp), %edx
	leaq	-72(%rbp), %rdi
	callq	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rsi
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rsi
	movl	%edx, -196(%rbp)        # 4-byte Spill
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jne	.LBB580_2
# %bb.1:
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	-196(%rbp), %edx        # 4-byte Reload
	addq	$208, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB580_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end580:
	.size	_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_, .Lfunc_end580-_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseISt13_Bit_iteratorET_S1_,"axG",@progbits,_ZSt12__miter_baseISt13_Bit_iteratorET_S1_,comdat
	.weak	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_ # -- Begin function _ZSt12__miter_baseISt13_Bit_iteratorET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_,@function
_ZSt12__miter_baseISt13_Bit_iteratorET_S1_: # @_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movl	%esi, -40(%rbp)
	vmovdqu	-48(%rbp), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rcx
	movl	%edx, -52(%rbp)         # 4-byte Spill
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jne	.LBB581_2
# %bb.1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	-52(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB581_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end581:
	.size	_ZSt12__miter_baseISt13_Bit_iteratorET_S1_, .Lfunc_end581-_ZSt12__miter_baseISt13_Bit_iteratorET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ # -- Begin function _ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,@function
_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_: # @_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -96(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -112(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-96(%rbp), %rdi
	movl	-88(%rbp), %esi
	movq	-112(%rbp), %rdx
	movl	-104(%rbp), %ecx
	movq	-128(%rbp), %r8
	movl	-120(%rbp), %r9d
	callq	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -132(%rbp)        # 4-byte Spill
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jne	.LBB582_2
# %bb.1:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	-132(%rbp), %edx        # 4-byte Reload
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB582_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end582:
	.size	_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_, .Lfunc_end582-_ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ # -- Begin function _ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,@function
_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_: # @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -96(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -112(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-96(%rbp), %rdi
	movl	-88(%rbp), %esi
	movq	-112(%rbp), %rdx
	movl	-104(%rbp), %ecx
	movq	-128(%rbp), %r8
	movl	-120(%rbp), %r9d
	callq	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -132(%rbp)        # 4-byte Spill
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jne	.LBB583_2
# %bb.1:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	-132(%rbp), %edx        # 4-byte Reload
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB583_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end583:
	.size	_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_, .Lfunc_end583-_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_,"axG",@progbits,_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_,comdat
	.weak	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_ # -- Begin function _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.p2align	4, 0x90
	.type	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_,@function
_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_: # @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movl	%esi, -40(%rbp)
	movq	%rdx, -64(%rbp)
	movl	%ecx, -56(%rbp)
	movq	%r8, -80(%rbp)
	movl	%r9d, -72(%rbp)
	leaq	-64(%rbp), %rax
	leaq	-48(%rbp), %rdx
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	_ZStmiRKSt18_Bit_iterator_baseS1_
	movq	%rax, -120(%rbp)
.LBB584_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -120(%rbp)
	jle	.LBB584_4
# %bb.2:                                #   in Loop: Header=BB584_1 Depth=1
	leaq	-64(%rbp), %rdi
	callq	_ZNSt13_Bit_iteratormmEv
	movq	%rax, %rdi
	callq	_ZNKSt13_Bit_iteratordeEv
	movq	%rax, -96(%rbp)
	movq	%rdx, -88(%rbp)
	leaq	-80(%rbp), %rdi
	callq	_ZNSt13_Bit_iteratormmEv
	movq	%rax, %rdi
	callq	_ZNKSt13_Bit_iteratordeEv
	movq	%rax, -112(%rbp)
	movq	%rdx, -104(%rbp)
	leaq	-112(%rbp), %rdi
	leaq	-96(%rbp), %rsi
	callq	_ZNSt14_Bit_referenceaSERKS_
# %bb.3:                                #   in Loop: Header=BB584_1 Depth=1
	movq	-120(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -120(%rbp)
	jmp	.LBB584_1
.LBB584_4:
	vmovdqu	-80(%rbp), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -124(%rbp)        # 4-byte Spill
	movq	%rax, -136(%rbp)        # 8-byte Spill
	jne	.LBB584_6
# %bb.5:
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	-124(%rbp), %edx        # 4-byte Reload
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB584_6:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end584:
	.size	_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_, .Lfunc_end584-_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13_Bit_iteratormmEv,"axG",@progbits,_ZNSt13_Bit_iteratormmEv,comdat
	.weak	_ZNSt13_Bit_iteratormmEv # -- Begin function _ZNSt13_Bit_iteratormmEv
	.p2align	4, 0x90
	.type	_ZNSt13_Bit_iteratormmEv,@function
_ZNSt13_Bit_iteratormmEv:               # @_ZNSt13_Bit_iteratormmEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	%rcx, %rdi
	movq	%rax, -16(%rbp)         # 8-byte Spill
	callq	_ZNSt18_Bit_iterator_base12_M_bump_downEv
	movq	-16(%rbp), %rax         # 8-byte Reload
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end585:
	.size	_ZNSt13_Bit_iteratormmEv, .Lfunc_end585-_ZNSt13_Bit_iteratormmEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Bit_referenceaSERKS_,"axG",@progbits,_ZNSt14_Bit_referenceaSERKS_,comdat
	.weak	_ZNSt14_Bit_referenceaSERKS_ # -- Begin function _ZNSt14_Bit_referenceaSERKS_
	.p2align	4, 0x90
	.type	_ZNSt14_Bit_referenceaSERKS_,@function
_ZNSt14_Bit_referenceaSERKS_:           # @_ZNSt14_Bit_referenceaSERKS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -24(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNKSt14_Bit_referencecvbEv
	movzbl	%al, %ecx
	andl	$1, %ecx
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movl	%ecx, %esi
	callq	_ZNSt14_Bit_referenceaSEb
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end586:
	.size	_ZNSt14_Bit_referenceaSERKS_, .Lfunc_end586-_ZNSt14_Bit_referenceaSERKS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt18_Bit_iterator_base12_M_bump_downEv,"axG",@progbits,_ZNSt18_Bit_iterator_base12_M_bump_downEv,comdat
	.weak	_ZNSt18_Bit_iterator_base12_M_bump_downEv # -- Begin function _ZNSt18_Bit_iterator_base12_M_bump_downEv
	.p2align	4, 0x90
	.type	_ZNSt18_Bit_iterator_base12_M_bump_downEv,@function
_ZNSt18_Bit_iterator_base12_M_bump_downEv: # @_ZNSt18_Bit_iterator_base12_M_bump_downEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movl	8(%rax), %ecx
	movl	%ecx, %edx
	addl	$-1, %edx
	movl	%edx, 8(%rax)
	cmpl	$0, %ecx
	movq	%rax, -16(%rbp)         # 8-byte Spill
	jne	.LBB587_2
# %bb.1:
	movq	-16(%rbp), %rax         # 8-byte Reload
	movl	$63, 8(%rax)
	movq	(%rax), %rcx
	addq	$-8, %rcx
	movq	%rcx, (%rax)
.LBB587_2:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end587:
	.size	_ZNSt18_Bit_iterator_base12_M_bump_downEv, .Lfunc_end587-_ZNSt18_Bit_iterator_base12_M_bump_downEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIbSaIbEE4sizeEv,"axG",@progbits,_ZNKSt6vectorIbSaIbEE4sizeEv,comdat
	.weak	_ZNKSt6vectorIbSaIbEE4sizeEv # -- Begin function _ZNKSt6vectorIbSaIbEE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIbSaIbEE4sizeEv,@function
_ZNKSt6vectorIbSaIbEE4sizeEv:           # @_ZNKSt6vectorIbSaIbEE4sizeEv
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception46
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$80, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE3endEv
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIbSaIbEE5beginEv
	movq	%rax, -40(%rbp)
	movl	%edx, -32(%rbp)
.Ltmp541:
	leaq	-24(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZStmiRKSt18_Bit_iterator_baseS1_
.Ltmp542:
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jmp	.LBB588_1
.LBB588_1:
	movq	%fs:40, %rax
	movq	-8(%rbp), %rcx
	cmpq	%rcx, %rax
	jne	.LBB588_4
# %bb.2:
	movq	-64(%rbp), %rax         # 8-byte Reload
	addq	$80, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB588_3:
	.cfi_def_cfa %rbp, 16
.Ltmp543:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -68(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB588_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end588:
	.size	_ZNKSt6vectorIbSaIbEE4sizeEv, .Lfunc_end588-_ZNKSt6vectorIbSaIbEE4sizeEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table588:
.Lexception46:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase33-.Lttbaseref33
.Lttbaseref33:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Ltmp541-.Lfunc_begin46 # >> Call Site 1 <<
	.uleb128 .Ltmp542-.Ltmp541      #   Call between .Ltmp541 and .Ltmp542
	.uleb128 .Ltmp543-.Lfunc_begin46 #     jumps to .Ltmp543
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp542-.Lfunc_begin46 # >> Call Site 2 <<
	.uleb128 .Lfunc_end588-.Ltmp542 #   Call between .Ltmp542 and .Lfunc_end588
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end46:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase33:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt6vectorIbSaIbEE3endEv,"axG",@progbits,_ZNKSt6vectorIbSaIbEE3endEv,comdat
	.weak	_ZNKSt6vectorIbSaIbEE3endEv # -- Begin function _ZNKSt6vectorIbSaIbEE3endEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIbSaIbEE3endEv,@function
_ZNKSt6vectorIbSaIbEE3endEv:            # @_ZNKSt6vectorIbSaIbEE3endEv
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception47
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rax
	addq	$16, %rax
.Ltmp544:
	leaq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNSt19_Bit_const_iteratorC2ERKSt13_Bit_iterator
.Ltmp545:
	jmp	.LBB589_1
.LBB589_1:
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -36(%rbp)         # 4-byte Spill
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB589_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	-36(%rbp), %edx         # 4-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB589_3:
	.cfi_def_cfa %rbp, 16
.Ltmp546:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB589_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end589:
	.size	_ZNKSt6vectorIbSaIbEE3endEv, .Lfunc_end589-_ZNKSt6vectorIbSaIbEE3endEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table589:
.Lexception47:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase34-.Lttbaseref34
.Lttbaseref34:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Ltmp544-.Lfunc_begin47 # >> Call Site 1 <<
	.uleb128 .Ltmp545-.Ltmp544      #   Call between .Ltmp544 and .Ltmp545
	.uleb128 .Ltmp546-.Lfunc_begin47 #     jumps to .Ltmp546
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp545-.Lfunc_begin47 # >> Call Site 2 <<
	.uleb128 .Lfunc_end589-.Ltmp545 #   Call between .Ltmp545 and .Lfunc_end589
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end47:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase34:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ # -- Begin function _ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,@function
_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_: # @_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$208, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-128(%rbp), %rdi
	movl	-120(%rbp), %esi
	callq	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -104(%rbp)
	movl	%edx, -96(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -160(%rbp)
	movq	-160(%rbp), %rdi
	movl	-152(%rbp), %esi
	callq	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -144(%rbp)
	movl	%edx, -136(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -192(%rbp)
	movq	-192(%rbp), %rdi
	movl	-184(%rbp), %esi
	callq	_ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	movq	%rax, -176(%rbp)
	movl	%edx, -168(%rbp)
	movq	-104(%rbp), %rdi
	movl	-96(%rbp), %esi
	movq	-144(%rbp), %rdx
	movl	-136(%rbp), %ecx
	movq	-176(%rbp), %r8
	movl	-168(%rbp), %r9d
	callq	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	movq	%rax, -88(%rbp)
	movl	%edx, -80(%rbp)
	movq	-88(%rbp), %rsi
	movl	-80(%rbp), %edx
	leaq	-72(%rbp), %rdi
	callq	_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rsi
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rsi
	movl	%edx, -196(%rbp)        # 4-byte Spill
	movq	%rax, -208(%rbp)        # 8-byte Spill
	jne	.LBB590_2
# %bb.1:
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	-196(%rbp), %edx        # 4-byte Reload
	addq	$208, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB590_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end590:
	.size	_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_, .Lfunc_end590-_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ # -- Begin function _ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,@function
_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_: # @_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -96(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -112(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-96(%rbp), %rdi
	movl	-88(%rbp), %esi
	movq	-112(%rbp), %rdx
	movl	-104(%rbp), %ecx
	movq	-128(%rbp), %r8
	movl	-120(%rbp), %r9d
	callq	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -132(%rbp)        # 4-byte Spill
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jne	.LBB591_2
# %bb.1:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	-132(%rbp), %edx        # 4-byte Reload
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB591_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end591:
	.size	_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_, .Lfunc_end591-_ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,comdat
	.weak	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_ # -- Begin function _ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_,@function
_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_: # @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$144, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -40(%rbp)
	movl	%esi, -32(%rbp)
	movq	%rdx, -56(%rbp)
	movl	%ecx, -48(%rbp)
	movq	%r8, -72(%rbp)
	movl	%r9d, -64(%rbp)
	vmovdqu	-40(%rbp), %xmm0
	vmovdqa	%xmm0, -96(%rbp)
	vmovdqu	-56(%rbp), %xmm0
	vmovdqa	%xmm0, -112(%rbp)
	vmovdqu	-72(%rbp), %xmm0
	vmovdqa	%xmm0, -128(%rbp)
	movq	-96(%rbp), %rdi
	movl	-88(%rbp), %esi
	movq	-112(%rbp), %rdx
	movl	-104(%rbp), %ecx
	movq	-128(%rbp), %r8
	movl	-120(%rbp), %r9d
	callq	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_
	movq	%rax, -24(%rbp)
	movl	%edx, -16(%rbp)
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rdi
	movq	-8(%rbp), %r8
	cmpq	%r8, %rdi
	movl	%edx, -132(%rbp)        # 4-byte Spill
	movq	%rax, -144(%rbp)        # 8-byte Spill
	jne	.LBB592_2
# %bb.1:
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	-132(%rbp), %edx        # 4-byte Reload
	addq	$144, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB592_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end592:
	.size	_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_, .Lfunc_end592-_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_,"axG",@progbits,_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_,comdat
	.weak	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_ # -- Begin function _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_,@function
_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_: # @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -48(%rbp)
	movl	%esi, -40(%rbp)
	movq	%rdx, -64(%rbp)
	movl	%ecx, -56(%rbp)
	movq	%r8, -80(%rbp)
	movl	%r9d, -72(%rbp)
	leaq	-64(%rbp), %rax
	leaq	-48(%rbp), %rdx
	movq	%rax, %rdi
	movq	%rdx, %rsi
	callq	_ZStmiRKSt18_Bit_iterator_baseS1_
	movq	%rax, -120(%rbp)
.LBB593_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -120(%rbp)
	jle	.LBB593_4
# %bb.2:                                #   in Loop: Header=BB593_1 Depth=1
	leaq	-48(%rbp), %rdi
	callq	_ZNKSt13_Bit_iteratordeEv
	movq	%rax, -96(%rbp)
	movq	%rdx, -88(%rbp)
	leaq	-80(%rbp), %rdi
	callq	_ZNKSt13_Bit_iteratordeEv
	movq	%rax, -112(%rbp)
	movq	%rdx, -104(%rbp)
	leaq	-112(%rbp), %rdi
	leaq	-96(%rbp), %rsi
	callq	_ZNSt14_Bit_referenceaSERKS_
	leaq	-48(%rbp), %rdi
	movq	%rax, -128(%rbp)        # 8-byte Spill
	callq	_ZNSt13_Bit_iteratorppEv
	leaq	-80(%rbp), %rdi
	movq	%rax, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt13_Bit_iteratorppEv
# %bb.3:                                #   in Loop: Header=BB593_1 Depth=1
	movq	-120(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -120(%rbp)
	jmp	.LBB593_1
.LBB593_4:
	vmovdqu	-80(%rbp), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -140(%rbp)        # 4-byte Spill
	movq	%rax, -152(%rbp)        # 8-byte Spill
	jne	.LBB593_6
# %bb.5:
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	-140(%rbp), %edx        # 4-byte Reload
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB593_6:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end593:
	.size	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_, .Lfunc_end593-_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_,@function
_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_: # @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end594:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_, .Lfunc_end594-_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdi, -56(%rbp)
	movq	-56(%rbp), %rax
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv
	movq	%rax, -40(%rbp)
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_
	testb	$1, %al
	jne	.LBB595_1
	jmp	.LBB595_2
.LBB595_1:
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl
	movq	%rax, -64(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-64(%rbp), %rdi
	movq	-72(%rbp), %rsi
	movq	-48(%rbp), %rdx
	callq	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_
	movq	%rax, -80(%rbp)
.LBB595_2:
	movq	-88(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-24, %rcx
	movq	%rcx, 8(%rax)
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB595_4
# %bb.3:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB595_4:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end595:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE, .Lfunc_end595-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_,"axG",@progbits,_ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_,comdat
	.weak	_ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_ # -- Begin function _ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_,@function
_ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_: # @_ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$24, %ecx
	idivq	%rcx
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end596:
	.size	_ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_, .Lfunc_end596-_ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv,"axG",@progbits,_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv,comdat
	.weak	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv # -- Begin function _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv,@function
_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv: # @_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB597_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB597_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end597:
	.size	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv, .Lfunc_end597-_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_,"axG",@progbits,_ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_,comdat
	.weak	_ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_ # -- Begin function _ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_,@function
_ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_: # @_ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	-24(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	setne	%dl
	andb	$1, %dl
	movzbl	%dl, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end598:
	.size	_ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_, .Lfunc_end598-_ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB599_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB599_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end599:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv, .Lfunc_end599-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_,"axG",@progbits,_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_,comdat
	.weak	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_ # -- Begin function _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_
	.p2align	4, 0x90
	.type	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_,@function
_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_: # @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_
	movq	%rax, -80(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-72(%rbp), %rdi
	movq	-80(%rbp), %rsi
	movq	-56(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB600_2
# %bb.1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB600_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end600:
	.size	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_, .Lfunc_end600-_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end601:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv, .Lfunc_end601-_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_,"axG",@progbits,_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_,comdat
	.weak	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_ # -- Begin function _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_,@function
_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_: # @_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE
	movq	-24(%rbp), %rcx
	movq	%rcx, -56(%rbp)
	movq	-56(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE
	movq	-32(%rbp), %rcx
	movq	%rcx, -64(%rbp)
	movq	-64(%rbp), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	movq	-40(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB602_2
# %bb.1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB602_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end602:
	.size	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_, .Lfunc_end602-_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_,"axG",@progbits,_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_,comdat
	.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_ # -- Begin function _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_,@function
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_: # @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB603_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB603_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end603:
	.size	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_, .Lfunc_end603-_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_,"axG",@progbits,_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_,comdat
	.weak	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_ # -- Begin function _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_,@function
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_: # @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$3, %rcx
	movabsq	$-6148914691236517205, %rax # imm = 0xAAAAAAAAAAAAAAAB
	imulq	%rax, %rcx
	leaq	-16(%rbp), %rdi
	movq	%rcx, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB604_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB604_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end604:
	.size	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_, .Lfunc_end604-_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_,"axG",@progbits,_ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_,comdat
	.weak	_ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_ # -- Begin function _ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_,@function
_ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_: # @_ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end605:
	.size	_ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_, .Lfunc_end605-_ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE # -- Begin function _ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE,@function
_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE: # @_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -24(%rbp)         # 8-byte Spill
	jne	.LBB606_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB606_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end606:
	.size	_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE, .Lfunc_end606-_ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_,"axG",@progbits,_ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_,comdat
	.weak	_ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_ # -- Begin function _ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_,@function
_ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_: # @_ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end607:
	.size	_ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_, .Lfunc_end607-_ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_,"axG",@progbits,_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_,comdat
	.weak	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_ # -- Begin function _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_,@function
_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_: # @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	cqto
	movl	$24, %ecx
	idivq	%rcx
	movq	%rax, -32(%rbp)
.LBB608_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -32(%rbp)
	jle	.LBB608_4
# %bb.2:                                #   in Loop: Header=BB608_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_
	movq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_
	movq	-8(%rbp), %rcx
	addq	$24, %rcx
	movq	%rcx, -8(%rbp)
	movq	-24(%rbp), %rcx
	addq	$24, %rcx
	movq	%rcx, -24(%rbp)
# %bb.3:                                #   in Loop: Header=BB608_1 Depth=1
	movq	-32(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB608_1
.LBB608_4:
	movq	-24(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end608:
	.size	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_, .Lfunc_end608-_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end609:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv, .Lfunc_end609-_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_: # @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end610:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_, .Lfunc_end610-_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_,@function
_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_: # @_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end611:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_, .Lfunc_end611-_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdi, -56(%rbp)
	movq	-56(%rbp), %rax
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv
	movq	%rax, -40(%rbp)
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	testb	$1, %al
	jne	.LBB612_1
	jmp	.LBB612_2
.LBB612_1:
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -64(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-64(%rbp), %rdi
	movq	-72(%rbp), %rsi
	movq	-48(%rbp), %rdx
	callq	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	movq	%rax, -80(%rbp)
.LBB612_2:
	movq	-88(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-32, %rcx
	movq	%rcx, 8(%rax)
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB612_4
# %bb.3:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB612_4:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end612:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE, .Lfunc_end612-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,"axG",@progbits,_ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,comdat
	.weak	_ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ # -- Begin function _ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,@function
_ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_: # @_ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$5, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end613:
	.size	_ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_, .Lfunc_end613-_ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv,"axG",@progbits,_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv,comdat
	.weak	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv # -- Begin function _ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv,@function
_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv: # @_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB614_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB614_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end614:
	.size	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv, .Lfunc_end614-_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,"axG",@progbits,_ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,comdat
	.weak	_ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ # -- Begin function _ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,@function
_ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_: # @_ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	-24(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	setne	%dl
	andb	$1, %dl
	movzbl	%dl, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end615:
	.size	_ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, .Lfunc_end615-_ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB616_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB616_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end616:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv, .Lfunc_end616-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,"axG",@progbits,_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,comdat
	.weak	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ # -- Begin function _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,@function
_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_: # @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -80(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-72(%rbp), %rdi
	movq	-80(%rbp), %rsi
	movq	-56(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB617_2
# %bb.1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB617_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end617:
	.size	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_, .Lfunc_end617-_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_,@function
_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_: # @_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end618:
	.size	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_, .Lfunc_end618-_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end619:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end619-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,"axG",@progbits,_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,comdat
	.weak	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ # -- Begin function _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,@function
_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_: # @_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-24(%rbp), %rcx
	movq	%rcx, -56(%rbp)
	movq	-56(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-32(%rbp), %rcx
	movq	%rcx, -64(%rbp)
	movq	-64(%rbp), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	movq	-40(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB620_2
# %bb.1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB620_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end620:
	.size	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_, .Lfunc_end620-_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_,"axG",@progbits,_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_,comdat
	.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_ # -- Begin function _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_,@function
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_: # @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB621_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB621_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end621:
	.size	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_, .Lfunc_end621-_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,"axG",@progbits,_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,comdat
	.weak	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_ # -- Begin function _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,@function
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_: # @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$5, %rcx
	leaq	-16(%rbp), %rdi
	movq	%rcx, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB622_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB622_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end622:
	.size	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, .Lfunc_end622-_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end623:
	.size	_ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_, .Lfunc_end623-_ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE # -- Begin function _ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,@function
_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE: # @_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -24(%rbp)         # 8-byte Spill
	jne	.LBB624_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB624_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end624:
	.size	_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, .Lfunc_end624-_ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end625:
	.size	_ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_, .Lfunc_end625-_ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_,"axG",@progbits,_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_,comdat
	.weak	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_ # -- Begin function _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_,@function
_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_: # @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$5, %rax
	movq	%rax, -32(%rbp)
.LBB626_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -32(%rbp)
	jle	.LBB626_4
# %bb.2:                                #   in Loop: Header=BB626_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sf12VertexBufferaSERKS0_@PLT
	movq	-8(%rbp), %rcx
	addq	$32, %rcx
	movq	%rcx, -8(%rbp)
	movq	-24(%rbp), %rcx
	addq	$32, %rcx
	movq	%rcx, -24(%rbp)
# %bb.3:                                #   in Loop: Header=BB626_1 Depth=1
	movq	-32(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB626_1
.LBB626_4:
	movq	-24(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end626:
	.size	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_, .Lfunc_end626-_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_,comdat
	.weak	_ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_ # -- Begin function _ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_
	.p2align	4, 0x90
	.type	_ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_,@function
_ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_: # @_ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end627:
	.size	_ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_, .Lfunc_end627-_ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*(%rcx)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end628:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_, .Lfunc_end628-_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end629:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end629-_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end630:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_, .Lfunc_end630-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_,@function
_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_: # @_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end631:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_, .Lfunc_end631-_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdi, -56(%rbp)
	movq	-56(%rbp), %rax
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv
	movq	%rax, -40(%rbp)
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	testb	$1, %al
	jne	.LBB632_1
	jmp	.LBB632_2
.LBB632_1:
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -64(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-64(%rbp), %rdi
	movq	-72(%rbp), %rsi
	movq	-48(%rbp), %rdx
	callq	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	movq	%rax, -80(%rbp)
.LBB632_2:
	movq	-88(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-64, %rcx
	movq	%rcx, 8(%rax)
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB632_4
# %bb.3:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB632_4:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end632:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE, .Lfunc_end632-_ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,"axG",@progbits,_ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,comdat
	.weak	_ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ # -- Begin function _ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,@function
_ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_: # @_ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$6, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end633:
	.size	_ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_, .Lfunc_end633-_ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv,"axG",@progbits,_ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv,comdat
	.weak	_ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv # -- Begin function _ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv,@function
_ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv: # @_ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB634_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB634_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end634:
	.size	_ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv, .Lfunc_end634-_ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,"axG",@progbits,_ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,comdat
	.weak	_ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ # -- Begin function _ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,@function
_ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_: # @_ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	-24(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	setne	%dl
	andb	$1, %dl
	movzbl	%dl, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end635:
	.size	_ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, .Lfunc_end635-_ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB636_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB636_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end636:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv, .Lfunc_end636-_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,"axG",@progbits,_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,comdat
	.weak	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ # -- Begin function _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,@function
_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_: # @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -80(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-72(%rbp), %rdi
	movq	-80(%rbp), %rsi
	movq	-56(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB637_2
# %bb.1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB637_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end637:
	.size	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_, .Lfunc_end637-_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_,@function
_ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_: # @_ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end638:
	.size	_ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_, .Lfunc_end638-_ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end639:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end639-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,"axG",@progbits,_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,comdat
	.weak	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ # -- Begin function _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,@function
_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_: # @_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-24(%rbp), %rcx
	movq	%rcx, -56(%rbp)
	movq	-56(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-32(%rbp), %rcx
	movq	%rcx, -64(%rbp)
	movq	-64(%rbp), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	movq	-40(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB640_2
# %bb.1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB640_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end640:
	.size	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_, .Lfunc_end640-_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_,"axG",@progbits,_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_,comdat
	.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_ # -- Begin function _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_,@function
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_: # @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB641_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB641_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end641:
	.size	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_, .Lfunc_end641-_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,"axG",@progbits,_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,comdat
	.weak	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_ # -- Begin function _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,@function
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_: # @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$6, %rcx
	leaq	-16(%rbp), %rdi
	movq	%rcx, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB642_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB642_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end642:
	.size	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, .Lfunc_end642-_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end643:
	.size	_ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_, .Lfunc_end643-_ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE # -- Begin function _ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,@function
_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE: # @_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -24(%rbp)         # 8-byte Spill
	jne	.LBB644_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB644_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end644:
	.size	_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, .Lfunc_end644-_ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end645:
	.size	_ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_, .Lfunc_end645-_ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_,"axG",@progbits,_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_,comdat
	.weak	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_ # -- Begin function _ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_,@function
_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_: # @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$6, %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB646_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$6, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove@PLT
.LBB646_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$6, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end646:
	.size	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_, .Lfunc_end646-_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end647:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_, .Lfunc_end647-_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end648:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end648-_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end649:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_, .Lfunc_end649-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_,@function
_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_: # @_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end650:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_, .Lfunc_end650-_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE: # @_ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdi, -56(%rbp)
	movq	-56(%rbp), %rax
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv
	movq	%rax, -40(%rbp)
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	testb	$1, %al
	jne	.LBB651_1
	jmp	.LBB651_2
.LBB651_1:
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -64(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-64(%rbp), %rdi
	movq	-72(%rbp), %rsi
	movq	-48(%rbp), %rdx
	callq	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	movq	%rax, -80(%rbp)
.LBB651_2:
	movq	-88(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-32, %rcx
	movq	%rcx, 8(%rax)
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB651_4
# %bb.3:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB651_4:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end651:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE, .Lfunc_end651-_ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,"axG",@progbits,_ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,comdat
	.weak	_ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ # -- Begin function _ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,@function
_ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_: # @_ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$5, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end652:
	.size	_ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_, .Lfunc_end652-_ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv,"axG",@progbits,_ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv,comdat
	.weak	_ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv # -- Begin function _ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv,@function
_ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv: # @_ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB653_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB653_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end653:
	.size	_ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv, .Lfunc_end653-_ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,"axG",@progbits,_ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,comdat
	.weak	_ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ # -- Begin function _ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,@function
_ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_: # @_ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	-24(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	setne	%dl
	andb	$1, %dl
	movzbl	%dl, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end654:
	.size	_ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, .Lfunc_end654-_ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv: # @_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB655_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB655_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end655:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv, .Lfunc_end655-_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,"axG",@progbits,_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,comdat
	.weak	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ # -- Begin function _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,@function
_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_: # @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -80(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-72(%rbp), %rdi
	movq	-80(%rbp), %rsi
	movq	-56(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB656_2
# %bb.1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB656_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end656:
	.size	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_, .Lfunc_end656-_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_,@function
_ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_: # @_ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end657:
	.size	_ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_, .Lfunc_end657-_ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end658:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end658-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,"axG",@progbits,_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,comdat
	.weak	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ # -- Begin function _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,@function
_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_: # @_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-24(%rbp), %rcx
	movq	%rcx, -56(%rbp)
	movq	-56(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-32(%rbp), %rcx
	movq	%rcx, -64(%rbp)
	movq	-64(%rbp), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	movq	-40(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB659_2
# %bb.1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB659_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end659:
	.size	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_, .Lfunc_end659-_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_,"axG",@progbits,_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_,comdat
	.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_ # -- Begin function _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_,@function
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_: # @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB660_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB660_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end660:
	.size	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_, .Lfunc_end660-_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,"axG",@progbits,_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,comdat
	.weak	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_ # -- Begin function _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,@function
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_: # @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$5, %rcx
	leaq	-16(%rbp), %rdi
	movq	%rcx, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB661_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB661_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end661:
	.size	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, .Lfunc_end661-_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end662:
	.size	_ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_, .Lfunc_end662-_ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE # -- Begin function _ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,@function
_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE: # @_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -24(%rbp)         # 8-byte Spill
	jne	.LBB663_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB663_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end663:
	.size	_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, .Lfunc_end663-_ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end664:
	.size	_ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_, .Lfunc_end664-_ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_,"axG",@progbits,_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_,comdat
	.weak	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_ # -- Begin function _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_,@function
_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_: # @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$5, %rax
	movq	%rax, -32(%rbp)
.LBB665_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -32(%rbp)
	jle	.LBB665_4
# %bb.2:                                #   in Loop: Header=BB665_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sf5ImageaSERKS0_
	movq	-8(%rbp), %rcx
	addq	$32, %rcx
	movq	%rcx, -8(%rbp)
	movq	-24(%rbp), %rcx
	addq	$32, %rcx
	movq	%rcx, -24(%rbp)
# %bb.3:                                #   in Loop: Header=BB665_1 Depth=1
	movq	-32(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB665_1
.LBB665_4:
	movq	-24(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end665:
	.size	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_, .Lfunc_end665-_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_,comdat
	.weak	_ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_ # -- Begin function _ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_
	.p2align	4, 0x90
	.type	_ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_,@function
_ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_: # @_ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end666:
	.size	_ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_, .Lfunc_end666-_ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZN2sf5ImageD1Ev@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end667:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_, .Lfunc_end667-_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end668:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end668-_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end669:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_, .Lfunc_end669-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_,@function
_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_: # @_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end670:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_, .Lfunc_end670-_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE: # @_ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdi, -56(%rbp)
	movq	-56(%rbp), %rax
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv
	movq	%rax, -40(%rbp)
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	testb	$1, %al
	jne	.LBB671_1
	jmp	.LBB671_2
.LBB671_1:
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -64(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-64(%rbp), %rdi
	movq	-72(%rbp), %rsi
	movq	-48(%rbp), %rdx
	callq	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	movq	%rax, -80(%rbp)
.LBB671_2:
	movq	-88(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-40, %rcx
	movq	%rcx, 8(%rax)
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB671_4
# %bb.3:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB671_4:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end671:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE, .Lfunc_end671-_ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,"axG",@progbits,_ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,comdat
	.weak	_ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ # -- Begin function _ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,@function
_ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_: # @_ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$40, %ecx
	idivq	%rcx
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end672:
	.size	_ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_, .Lfunc_end672-_ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv,"axG",@progbits,_ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv,comdat
	.weak	_ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv # -- Begin function _ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv,@function
_ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv: # @_ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB673_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB673_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end673:
	.size	_ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv, .Lfunc_end673-_ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,"axG",@progbits,_ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,comdat
	.weak	_ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ # -- Begin function _ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,@function
_ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_: # @_ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	-24(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	setne	%dl
	andb	$1, %dl
	movzbl	%dl, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end674:
	.size	_ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, .Lfunc_end674-_ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv: # @_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB675_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB675_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end675:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv, .Lfunc_end675-_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,"axG",@progbits,_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,comdat
	.weak	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ # -- Begin function _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,@function
_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_: # @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -80(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-72(%rbp), %rdi
	movq	-80(%rbp), %rsi
	movq	-56(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB676_2
# %bb.1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB676_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end676:
	.size	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_, .Lfunc_end676-_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_,@function
_ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_: # @_ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end677:
	.size	_ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_, .Lfunc_end677-_ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end678:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end678-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,"axG",@progbits,_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,comdat
	.weak	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ # -- Begin function _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,@function
_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_: # @_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-24(%rbp), %rcx
	movq	%rcx, -56(%rbp)
	movq	-56(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-32(%rbp), %rcx
	movq	%rcx, -64(%rbp)
	movq	-64(%rbp), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	movq	-40(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB679_2
# %bb.1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB679_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end679:
	.size	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_, .Lfunc_end679-_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_,"axG",@progbits,_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_,comdat
	.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_ # -- Begin function _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_,@function
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_: # @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB680_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB680_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end680:
	.size	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_, .Lfunc_end680-_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,"axG",@progbits,_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,comdat
	.weak	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_ # -- Begin function _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,@function
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_: # @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$3, %rcx
	movabsq	$-3689348814741910323, %rax # imm = 0xCCCCCCCCCCCCCCCD
	imulq	%rax, %rcx
	leaq	-16(%rbp), %rdi
	movq	%rcx, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB681_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB681_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end681:
	.size	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, .Lfunc_end681-_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end682:
	.size	_ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_, .Lfunc_end682-_ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE # -- Begin function _ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,@function
_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE: # @_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -24(%rbp)         # 8-byte Spill
	jne	.LBB683_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB683_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end683:
	.size	_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, .Lfunc_end683-_ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end684:
	.size	_ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_, .Lfunc_end684-_ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_,"axG",@progbits,_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_,comdat
	.weak	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_ # -- Begin function _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_,@function
_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_: # @_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	cqto
	movl	$40, %ecx
	idivq	%rcx
	movq	%rax, -32(%rbp)
.LBB685_1:                              # =>This Inner Loop Header: Depth=1
	cmpq	$0, -32(%rbp)
	jle	.LBB685_4
# %bb.2:                                #   in Loop: Header=BB685_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-24(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN2sf7TextureaSERKS0_@PLT
	movq	-8(%rbp), %rcx
	addq	$40, %rcx
	movq	%rcx, -8(%rbp)
	movq	-24(%rbp), %rcx
	addq	$40, %rcx
	movq	%rcx, -24(%rbp)
# %bb.3:                                #   in Loop: Header=BB685_1 Depth=1
	movq	-32(%rbp), %rax
	addq	$-1, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB685_1
.LBB685_4:
	movq	-24(%rbp), %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end685:
	.size	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_, .Lfunc_end685-_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_,comdat
	.weak	_ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_ # -- Begin function _ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_
	.p2align	4, 0x90
	.type	_ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_,@function
_ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_: # @_ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end686:
	.size	_ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_, .Lfunc_end686-_ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZN2sf7TextureD1Ev@PLT
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end687:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_, .Lfunc_end687-_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end688:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end688-_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end689:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_, .Lfunc_end689-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator,"axG",@progbits,_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator,comdat
	.weak	_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator # -- Begin function _ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator,@function
_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator: # @_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$192, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -48(%rbp)
	movl	%edx, -40(%rbp)
	movq	%rdi, -152(%rbp)
	movq	-152(%rbp), %rax
	leaq	-48(%rbp), %rdi
	movl	$1, %esi
	movq	%rax, -160(%rbp)        # 8-byte Spill
	callq	_ZStplRKSt13_Bit_iteratorl
	movq	%rax, -64(%rbp)
	movl	%edx, -56(%rbp)
	leaq	-64(%rbp), %rax
	movq	-160(%rbp), %rdi        # 8-byte Reload
	movq	%rax, -168(%rbp)        # 8-byte Spill
	callq	_ZNSt6vectorIbSaIbEE3endEv
	movq	%rax, -80(%rbp)
	movl	%edx, -72(%rbp)
	leaq	-80(%rbp), %rax
	movq	-168(%rbp), %rdi        # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZStneRKSt18_Bit_iterator_baseS1_
	testb	$1, %al
	jne	.LBB690_1
	jmp	.LBB690_2
.LBB690_1:
	leaq	-48(%rbp), %rdi
	movl	$1, %esi
	callq	_ZStplRKSt13_Bit_iteratorl
	movq	%rax, -96(%rbp)
	movl	%edx, -88(%rbp)
	movq	-160(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt6vectorIbSaIbEE3endEv
	movq	%rax, -112(%rbp)
	movl	%edx, -104(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -128(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -120(%rbp)
	movq	-96(%rbp), %rdi
	movl	-88(%rbp), %esi
	movq	-112(%rbp), %rdx
	movl	-104(%rbp), %ecx
	movq	-128(%rbp), %r8
	movl	-120(%rbp), %r9d
	callq	_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
	movq	%rax, -144(%rbp)
	movl	%edx, -136(%rbp)
.LBB690_2:
	movq	-160(%rbp), %rax        # 8-byte Reload
	addq	$16, %rax
	movq	%rax, %rdi
	callq	_ZNSt13_Bit_iteratormmEv
	vmovdqu	-48(%rbp), %xmm0
	vmovdqa	%xmm0, -32(%rbp)
	movl	-24(%rbp), %edx
	movq	-32(%rbp), %rcx
	movq	%fs:40, %rsi
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rsi
	movl	%edx, -172(%rbp)        # 4-byte Spill
	movq	%rcx, -184(%rbp)        # 8-byte Spill
	jne	.LBB690_4
# %bb.3:
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	-172(%rbp), %edx        # 4-byte Reload
	addq	$192, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB690_4:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end690:
	.size	_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator, .Lfunc_end690-_ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt19_Bit_const_iterator13_M_const_castEv,"axG",@progbits,_ZNKSt19_Bit_const_iterator13_M_const_castEv,comdat
	.weak	_ZNKSt19_Bit_const_iterator13_M_const_castEv # -- Begin function _ZNKSt19_Bit_const_iterator13_M_const_castEv
	.p2align	4, 0x90
	.type	_ZNKSt19_Bit_const_iterator13_M_const_castEv,@function
_ZNKSt19_Bit_const_iterator13_M_const_castEv: # @_ZNKSt19_Bit_const_iterator13_M_const_castEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rsi
	movl	8(%rax), %edx
	leaq	-24(%rbp), %rdi
	callq	_ZNSt13_Bit_iteratorC2EPmj
	movl	-16(%rbp), %edx
	movq	-24(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rcx
	movl	%edx, -36(%rbp)         # 4-byte Spill
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB691_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	-36(%rbp), %edx         # 4-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB691_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end691:
	.size	_ZNKSt19_Bit_const_iterator13_M_const_castEv, .Lfunc_end691-_ZNKSt19_Bit_const_iterator13_M_const_castEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStneRKSt18_Bit_iterator_baseS1_,"axG",@progbits,_ZStneRKSt18_Bit_iterator_baseS1_,comdat
	.weak	_ZStneRKSt18_Bit_iterator_baseS1_ # -- Begin function _ZStneRKSt18_Bit_iterator_baseS1_
	.p2align	4, 0x90
	.type	_ZStneRKSt18_Bit_iterator_baseS1_,@function
_ZStneRKSt18_Bit_iterator_baseS1_:      # @_ZStneRKSt18_Bit_iterator_baseS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSteqRKSt18_Bit_iterator_baseS1_
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %eax
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end692:
	.size	_ZStneRKSt18_Bit_iterator_baseS1_, .Lfunc_end692-_ZStneRKSt18_Bit_iterator_baseS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSteqRKSt18_Bit_iterator_baseS1_,"axG",@progbits,_ZSteqRKSt18_Bit_iterator_baseS1_,comdat
	.weak	_ZSteqRKSt18_Bit_iterator_baseS1_ # -- Begin function _ZSteqRKSt18_Bit_iterator_baseS1_
	.p2align	4, 0x90
	.type	_ZSteqRKSt18_Bit_iterator_baseS1_,@function
_ZSteqRKSt18_Bit_iterator_baseS1_:      # @_ZSteqRKSt18_Bit_iterator_baseS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	-16(%rbp), %rdx
	cmpq	(%rdx), %rcx
	movb	%al, -17(%rbp)          # 1-byte Spill
	jne	.LBB693_2
# %bb.1:
	movq	-8(%rbp), %rax
	movl	8(%rax), %ecx
	movq	-16(%rbp), %rax
	cmpl	8(%rax), %ecx
	sete	%dl
	movb	%dl, -17(%rbp)          # 1-byte Spill
.LBB693_2:
	movb	-17(%rbp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end693:
	.size	_ZSteqRKSt18_Bit_iterator_baseS1_, .Lfunc_end693-_ZSteqRKSt18_Bit_iterator_baseS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,"axG",@progbits,_ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,comdat
	.weak	_ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE # -- Begin function _ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE,@function
_ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE: # @_ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdi, -56(%rbp)
	movq	-56(%rbp), %rax
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE3endEv
	movq	%rax, -40(%rbp)
	leaq	-32(%rbp), %rdi
	leaq	-40(%rbp), %rsi
	callq	_ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	testb	$1, %al
	jne	.LBB694_1
	jmp	.LBB694_2
.LBB694_1:
	leaq	-24(%rbp), %rdi
	movl	$1, %esi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -64(%rbp)
	movq	-88(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIP10CollectionSaIS1_EE3endEv
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-64(%rbp), %rdi
	movq	-72(%rbp), %rsi
	movq	-48(%rbp), %rdx
	callq	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	movq	%rax, -80(%rbp)
.LBB694_2:
	movq	-88(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$-8, %rcx
	movq	%rcx, 8(%rax)
	movq	8(%rax), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB694_4
# %bb.3:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB694_4:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end694:
	.size	_ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE, .Lfunc_end694-_ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,"axG",@progbits,_ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,comdat
	.weak	_ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ # -- Begin function _ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_,@function
_ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_: # @_ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end695:
	.size	_ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_, .Lfunc_end695-_ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv,"axG",@progbits,_ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv,comdat
	.weak	_ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv # -- Begin function _ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv,@function
_ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv: # @_ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB696_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB696_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end696:
	.size	_ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv, .Lfunc_end696-_ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,"axG",@progbits,_ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,comdat
	.weak	_ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ # -- Begin function _ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_,@function
_ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_: # @_ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	-24(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	setne	%dl
	andb	$1, %dl
	movzbl	%dl, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end697:
	.size	_ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_, .Lfunc_end697-_ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,"axG",@progbits,_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,comdat
	.weak	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_ # -- Begin function _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_,@function
_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_: # @_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-40(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -72(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_
	movq	%rax, -80(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -56(%rbp)
	movq	-72(%rbp), %rdi
	movq	-80(%rbp), %rsi
	movq	-56(%rbp), %rdx
	callq	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	movq	%rax, -64(%rbp)
	movq	-64(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -88(%rbp)         # 8-byte Spill
	jne	.LBB698_2
# %bb.1:
	movq	-88(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB698_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end698:
	.size	_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_, .Lfunc_end698-_ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_ # -- Begin function _ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_,@function
_ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_: # @_ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end699:
	.size	_ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_, .Lfunc_end699-_ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,"axG",@progbits,_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,comdat
	.weak	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_ # -- Begin function _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.p2align	4, 0x90
	.type	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_,@function
_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_: # @_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-48(%rbp), %rdi
	callq	_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-24(%rbp), %rcx
	movq	%rcx, -56(%rbp)
	movq	-56(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-32(%rbp), %rcx
	movq	%rcx, -64(%rbp)
	movq	-64(%rbp), %rdi
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	movq	-40(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	movq	%rax, -72(%rbp)
	movq	-72(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jne	.LBB700_2
# %bb.1:
	movq	-96(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB700_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end700:
	.size	_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_, .Lfunc_end700-_ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_,"axG",@progbits,_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_,comdat
	.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_ # -- Begin function _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_
	.p2align	4, 0x90
	.type	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_,@function
_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_: # @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB701_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB701_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end701:
	.size	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_, .Lfunc_end701-_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,"axG",@progbits,_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,comdat
	.weak	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_ # -- Begin function _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.p2align	4, 0x90
	.type	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_,@function
_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_: # @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rcx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$3, %rcx
	leaq	-16(%rbp), %rdi
	movq	%rcx, %rsi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl
	movq	%rax, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -56(%rbp)         # 8-byte Spill
	jne	.LBB702_2
# %bb.1:
	movq	-56(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB702_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end702:
	.size	_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_, .Lfunc_end702-_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end703:
	.size	_ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_, .Lfunc_end703-_ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,"axG",@progbits,_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,comdat
	.weak	_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE # -- Begin function _ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE,@function
_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE: # @_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -24(%rbp)         # 8-byte Spill
	jne	.LBB704_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB704_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end704:
	.size	_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, .Lfunc_end704-_ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_,"axG",@progbits,_ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_,comdat
	.weak	_ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_ # -- Begin function _ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	.p2align	4, 0x90
	.type	_ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_,@function
_ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_: # @_ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end705:
	.size	_ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_, .Lfunc_end705-_ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_,"axG",@progbits,_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_,comdat
	.weak	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_ # -- Begin function _ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_
	.p2align	4, 0x90
	.type	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_,@function
_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_: # @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -32(%rbp)
	cmpq	$0, -32(%rbp)
	je	.LBB706_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-32(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove@PLT
.LBB706_2:
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end706:
	.size	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_, .Lfunc_end706-_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end707:
	.size	_ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_, .Lfunc_end707-_ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end708:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end708-_ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_: # @_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end709:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_, .Lfunc_end709-_ZN9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf7Vector2IiEC2Eii,"axG",@progbits,_ZN2sf7Vector2IiEC2Eii,comdat
	.weak	_ZN2sf7Vector2IiEC2Eii  # -- Begin function _ZN2sf7Vector2IiEC2Eii
	.p2align	4, 0x90
	.type	_ZN2sf7Vector2IiEC2Eii,@function
_ZN2sf7Vector2IiEC2Eii:                 # @_ZN2sf7Vector2IiEC2Eii
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movl	%edx, -16(%rbp)
	movq	-8(%rbp), %rax
	movl	-12(%rbp), %ecx
	movl	%ecx, (%rax)
	movl	-16(%rbp), %ecx
	movl	%ecx, 4(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end710:
	.size	_ZN2sf7Vector2IiEC2Eii, .Lfunc_end710-_ZN2sf7Vector2IiEC2Eii
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	shlq	$5, %rcx
	subq	%rcx, %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB711_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB711_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end711:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl, .Lfunc_end711-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end712:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv, .Lfunc_end712-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception48
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	-16(%rbp), %rdx
	subq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rcx, %rax
	cqto
	movl	$20, %ecx
	idivq	%rcx
	movq	%rax, -24(%rbp)
	cmpq	$0, -24(%rbp)
	je	.LBB713_3
# %bb.1:
	movq	-16(%rbp), %rdi
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rsi
	movq	%rdi, -40(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp547:
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E
.Ltmp548:
	jmp	.LBB713_2
.LBB713_2:
	movq	-16(%rbp), %rax
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 8(%rcx)
.LBB713_3:
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB713_4:
	.cfi_def_cfa %rbp, 16
.Ltmp549:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.Lfunc_end713:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_, .Lfunc_end713-_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table713:
.Lexception48:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase35-.Lttbaseref35
.Lttbaseref35:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Ltmp547-.Lfunc_begin48 # >> Call Site 1 <<
	.uleb128 .Ltmp548-.Ltmp547      #   Call between .Ltmp547 and .Ltmp548
	.uleb128 .Ltmp549-.Lfunc_begin48 #     jumps to .Ltmp549
	.byte	1                       #   On action: 1
.Lcst_end48:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase35:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv,@function
_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv: # @_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end714:
	.size	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv, .Lfunc_end714-_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv,"axG",@progbits,_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv,comdat
	.weak	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv # -- Begin function _ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv,@function
_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv: # @_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	16(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$20, %ecx
	idivq	%rcx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end715:
	.size	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv, .Lfunc_end715-_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB716_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB716_3
.LBB716_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB716_3
.LBB716_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end716:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm, .Lfunc_end716-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end717:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, .Lfunc_end717-_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception49
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$461168601842738790, %rax # imm = 0x666666666666666
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_
	movq	%rax, -24(%rbp)
.Ltmp550:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp551:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB718_1
.LBB718_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB718_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB718_3:
	.cfi_def_cfa %rbp, 16
.Ltmp552:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB718_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end718:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_, .Lfunc_end718-_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table718:
.Lexception49:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase36-.Lttbaseref36
.Lttbaseref36:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Ltmp550-.Lfunc_begin49 # >> Call Site 1 <<
	.uleb128 .Ltmp551-.Ltmp550      #   Call between .Ltmp550 and .Ltmp551
	.uleb128 .Ltmp552-.Lfunc_begin49 #     jumps to .Ltmp552
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp551-.Lfunc_begin49 # >> Call Site 2 <<
	.uleb128 .Lfunc_end718-.Ltmp551 #   Call between .Ltmp551 and .Lfunc_end718
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end49:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase36:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_,@function
_ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_: # @_ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end719:
	.size	_ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_, .Lfunc_end719-_ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end720:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv, .Lfunc_end720-_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$461168601842738790, %rax # imm = 0x666666666666666
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end721:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv, .Lfunc_end721-_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m,@function
_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m: # @_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end722:
	.size	_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m, .Lfunc_end722-_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB723_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB723_2:
	imulq	$20, -16(%rbp), %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end723:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv, .Lfunc_end723-_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end724:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, .Lfunc_end724-_ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN2sf6VertexEET_S3_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf6VertexEET_S3_
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf6VertexEET_S3_
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end725:
	.size	_ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end725-_ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
.LBB726_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB726_4
# %bb.2:                                #   in Loop: Header=BB726_1 Depth=1
	movq	-40(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf6VertexEEPT_RS2_
	movq	-8(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt11__addressofIN2sf6VertexEEPT_RS2_
	movq	-32(%rbp), %rdx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_
# %bb.3:                                #   in Loop: Header=BB726_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$20, %rax
	movq	%rax, -8(%rbp)
	movq	-40(%rbp), %rax
	addq	$20, %rax
	movq	%rax, -40(%rbp)
	jmp	.LBB726_1
.LBB726_4:
	movq	-40(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end726:
	.size	_ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end726-_ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPN2sf6VertexEET_S3_,"axG",@progbits,_ZSt12__niter_baseIPN2sf6VertexEET_S3_,comdat
	.weak	_ZSt12__niter_baseIPN2sf6VertexEET_S3_ # -- Begin function _ZSt12__niter_baseIPN2sf6VertexEET_S3_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPN2sf6VertexEET_S3_,@function
_ZSt12__niter_baseIPN2sf6VertexEET_S3_: # @_ZSt12__niter_baseIPN2sf6VertexEET_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end727:
	.size	_ZSt12__niter_baseIPN2sf6VertexEET_S3_, .Lfunc_end727-_ZSt12__niter_baseIPN2sf6VertexEET_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_,"axG",@progbits,_ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_,comdat
	.weak	_ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_ # -- Begin function _ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_
	.p2align	4, 0x90
	.type	_ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_,@function
_ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_: # @_ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rax
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	-24(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt11__addressofIN2sf6VertexEEPT_RS2_
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end728:
	.size	_ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_, .Lfunc_end728-_ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIN2sf6VertexEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN2sf6VertexEEPT_RS2_,comdat
	.weak	_ZSt11__addressofIN2sf6VertexEEPT_RS2_ # -- Begin function _ZSt11__addressofIN2sf6VertexEEPT_RS2_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIN2sf6VertexEEPT_RS2_,@function
_ZSt11__addressofIN2sf6VertexEEPT_RS2_: # @_ZSt11__addressofIN2sf6VertexEEPT_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end729:
	.size	_ZSt11__addressofIN2sf6VertexEEPT_RS2_, .Lfunc_end729-_ZSt11__addressofIN2sf6VertexEEPT_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end730:
	.size	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_, .Lfunc_end730-_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_,comdat
	.weak	_ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_ # -- Begin function _ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_
	.p2align	4, 0x90
	.type	_ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_,@function
_ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_: # @_ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end731:
	.size	_ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_, .Lfunc_end731-_ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_,@function
_ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_: # @_ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end732:
	.size	_ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_, .Lfunc_end732-_ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	(%rax), %rcx
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movl	16(%rax), %r8d
	movl	%r8d, 16(%rdx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end733:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_, .Lfunc_end733-_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end734:
	.size	_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end734-_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end735:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_, .Lfunc_end735-_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_ # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB736_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$24, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB736_3
.LBB736_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
.LBB736_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end736:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_, .Lfunc_end736-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_,"axG",@progbits,_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_,comdat
	.weak	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_ # -- Begin function _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_,@function
_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_: # @_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rax
	leaq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rcx,%rcx,2), %rcx
	leaq	(%rax,%rcx,8), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$24, %rax
	movq	%rax, -88(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-152(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	movabsq	$-6148914691236517205, %rsi # imm = 0xAAAAAAAAAAAAAAAB
	imulq	%rsi, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rdx,%rdx,2), %rdx
	leaq	(%rax,%rdx,8), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB737_2
# %bb.1:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB737_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end737:
	.size	_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_, .Lfunc_end737-_ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB738_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB738_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB738_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB738_5
.LBB738_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB738_6
.LBB738_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB738_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB738_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB738_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end738:
	.size	_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc, .Lfunc_end738-_ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,"axG",@progbits,_ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,comdat
	.weak	_ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_ # -- Begin function _ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,@function
_ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_: # @_ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$24, %ecx
	idivq	%rcx
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end739:
	.size	_ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_, .Lfunc_end739-_ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	negq	%rcx
	leaq	(%rcx,%rcx,2), %rcx
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB740_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB740_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end740:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl, .Lfunc_end740-_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end741:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv, .Lfunc_end741-_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_ # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB742_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$32, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB742_3
.LBB742_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.LBB742_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end742:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_, .Lfunc_end742-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end743:
	.size	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_, .Lfunc_end743-_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end744:
	.size	_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end744-_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception50
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$224, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	shlq	$5, %rcx
	addq	%rcx, %rax
	movq	-40(%rbp), %rdi
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE
.Ltmp553:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
.Ltmp554:
	jmp	.LBB745_1
.LBB745_1:
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	leaq	-16(%rbp), %rax
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rsi, -136(%rbp)        # 8-byte Spill
	movq	%rdx, -144(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp555:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	-136(%rbp), %rsi        # 8-byte Reload
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_
.Ltmp556:
	movq	%rax, -152(%rbp)        # 8-byte Spill
	jmp	.LBB745_2
.LBB745_2:
	movq	-152(%rbp), %rax        # 8-byte Reload
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rcx
	addq	$32, %rcx
	movq	%rcx, -88(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -160(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -168(%rbp)        # 8-byte Spill
	movq	%rdx, -176(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp557:
	movq	-160(%rbp), %rdi        # 8-byte Reload
	movq	-168(%rbp), %rsi        # 8-byte Reload
	movq	-176(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_
.Ltmp558:
	movq	%rax, -184(%rbp)        # 8-byte Spill
	jmp	.LBB745_3
.LBB745_3:
	movq	-184(%rbp), %rax        # 8-byte Reload
	movq	%rax, -88(%rbp)
	jmp	.LBB745_13
.LBB745_4:
.Ltmp559:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -96(%rbp)
	movl	%edx, -100(%rbp)
# %bb.5:
	movq	-96(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	cmpq	$0, -88(%rbp)
	jne	.LBB745_7
# %bb.6:
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx
	movq	-72(%rbp), %rdx
	shlq	$5, %rdx
	addq	%rdx, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_
	jmp	.LBB745_10
.LBB745_7:
	movq	-80(%rbp), %rdi
	movq	-88(%rbp), %rsi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -192(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp560:
	movq	-192(%rbp), %rdi        # 8-byte Reload
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E
.Ltmp561:
	jmp	.LBB745_8
.LBB745_8:
	jmp	.LBB745_10
.LBB745_9:
.Ltmp566:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -96(%rbp)
	movl	%edx, -100(%rbp)
.Ltmp567:
	callq	__cxa_end_catch@PLT
.Ltmp568:
	jmp	.LBB745_12
.LBB745_10:
	movq	-80(%rbp), %rsi
	movq	-48(%rbp), %rdx
.Ltmp562:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m
.Ltmp563:
	jmp	.LBB745_11
.LBB745_11:
.Ltmp564:
	callq	__cxa_rethrow@PLT
.Ltmp565:
	jmp	.LBB745_17
.LBB745_12:
	jmp	.LBB745_15
.LBB745_13:
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -208(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -216(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-208(%rbp), %rdi        # 8-byte Reload
	movq	-216(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E
	movq	-56(%rbp), %rax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$5, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m
	movq	-80(%rbp), %rax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	shlq	$5, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB745_18
# %bb.14:
	addq	$224, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB745_15:
	.cfi_def_cfa %rbp, 16
	movq	-96(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB745_16:
.Ltmp569:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -220(%rbp)        # 4-byte Spill
	callq	__clang_call_terminate
.LBB745_17:
.LBB745_18:
	callq	__stack_chk_fail@PLT
.Lfunc_end745:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .Lfunc_end745-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table745:
.Lexception50:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase37-.Lttbaseref37
.Lttbaseref37:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Lfunc_begin50-.Lfunc_begin50 # >> Call Site 1 <<
	.uleb128 .Ltmp553-.Lfunc_begin50 #   Call between .Lfunc_begin50 and .Ltmp553
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp553-.Lfunc_begin50 # >> Call Site 2 <<
	.uleb128 .Ltmp558-.Ltmp553      #   Call between .Ltmp553 and .Ltmp558
	.uleb128 .Ltmp559-.Lfunc_begin50 #     jumps to .Ltmp559
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp558-.Lfunc_begin50 # >> Call Site 3 <<
	.uleb128 .Ltmp560-.Ltmp558      #   Call between .Ltmp558 and .Ltmp560
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp560-.Lfunc_begin50 # >> Call Site 4 <<
	.uleb128 .Ltmp561-.Ltmp560      #   Call between .Ltmp560 and .Ltmp561
	.uleb128 .Ltmp566-.Lfunc_begin50 #     jumps to .Ltmp566
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp567-.Lfunc_begin50 # >> Call Site 5 <<
	.uleb128 .Ltmp568-.Ltmp567      #   Call between .Ltmp567 and .Ltmp568
	.uleb128 .Ltmp569-.Lfunc_begin50 #     jumps to .Ltmp569
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp562-.Lfunc_begin50 # >> Call Site 6 <<
	.uleb128 .Ltmp565-.Ltmp562      #   Call between .Ltmp562 and .Ltmp565
	.uleb128 .Ltmp566-.Lfunc_begin50 #     jumps to .Ltmp566
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp565-.Lfunc_begin50 # >> Call Site 7 <<
	.uleb128 .Lfunc_end745-.Ltmp565 #   Call between .Ltmp565 and .Lfunc_end745
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end50:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase37:
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf12VertexBufferC1ERKS0_@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end746:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_, .Lfunc_end746-_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB747_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB747_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB747_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB747_5
.LBB747_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB747_6
.LBB747_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB747_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB747_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB747_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end747:
	.size	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc, .Lfunc_end747-_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"axG",@progbits,_ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,comdat
	.weak	_ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ # -- Begin function _ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,@function
_ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_: # @_ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$5, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end748:
	.size	_ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, .Lfunc_end748-_ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB749_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB749_3
.LBB749_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB749_3
.LBB749_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end749:
	.size	_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm, .Lfunc_end749-_ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end750:
	.size	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end750-_ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv,@function
_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv: # @_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end751:
	.size	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv, .Lfunc_end751-_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv,@function
_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv: # @_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$5, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end752:
	.size	_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv, .Lfunc_end752-_ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_,"axG",@progbits,_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_,comdat
	.weak	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_ # -- Begin function _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_,@function
_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_: # @_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception51
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$288230376151711743, %rax # imm = 0x3FFFFFFFFFFFFFF
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_
	movq	%rax, -24(%rbp)
.Ltmp570:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp571:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB753_1
.LBB753_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB753_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB753_3:
	.cfi_def_cfa %rbp, 16
.Ltmp572:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB753_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end753:
	.size	_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_, .Lfunc_end753-_ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table753:
.Lexception51:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase38-.Lttbaseref38
.Lttbaseref38:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Ltmp570-.Lfunc_begin51 # >> Call Site 1 <<
	.uleb128 .Ltmp571-.Ltmp570      #   Call between .Ltmp570 and .Ltmp571
	.uleb128 .Ltmp572-.Lfunc_begin51 #     jumps to .Ltmp572
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp571-.Lfunc_begin51 # >> Call Site 2 <<
	.uleb128 .Lfunc_end753-.Ltmp571 #   Call between .Ltmp571 and .Lfunc_end753
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end51:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase38:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end754:
	.size	_ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end754-_ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_,@function
_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_: # @_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end755:
	.size	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_, .Lfunc_end755-_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end756:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv, .Lfunc_end756-_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$288230376151711743, %rax # imm = 0x3FFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end757:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv, .Lfunc_end757-_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m,@function
_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m: # @_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end758:
	.size	_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m, .Lfunc_end758-_ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB759_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB759_2:
	movq	-16(%rbp), %rax
	shlq	$5, %rax
	movq	%rax, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end759:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv, .Lfunc_end759-_ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end760:
	.size	_ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E, .Lfunc_end760-_ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_,"axG",@progbits,_ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_,comdat
	.weak	_ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_ # -- Begin function _ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_
	.p2align	4, 0x90
	.type	_ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_,@function
_ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_: # @_ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end761:
	.size	_ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_, .Lfunc_end761-_ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_,"axG",@progbits,_ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_,comdat
	.weak	_ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_ # -- Begin function _ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_,@function
_ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_: # @_ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end762:
	.size	_ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_, .Lfunc_end762-_ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_,"axG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_,comdat
	.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_ # -- Begin function _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_,@function
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_: # @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception52
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
.LBB763_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB763_8
# %bb.2:                                #   in Loop: Header=BB763_1 Depth=1
	movq	-32(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_
	movq	-8(%rbp), %rsi
.Ltmp573:
	movq	%rax, %rdi
	callq	_ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_
.Ltmp574:
	jmp	.LBB763_3
.LBB763_3:                              #   in Loop: Header=BB763_1 Depth=1
	jmp	.LBB763_4
.LBB763_4:                              #   in Loop: Header=BB763_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$32, %rax
	movq	%rax, -8(%rbp)
	movq	-32(%rbp), %rax
	addq	$32, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB763_1
.LBB763_5:
.Ltmp575:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
# %bb.6:
	movq	-40(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi
.Ltmp576:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_
.Ltmp577:
	jmp	.LBB763_7
.LBB763_7:
.Ltmp578:
	callq	__cxa_rethrow@PLT
.Ltmp579:
	jmp	.LBB763_13
.LBB763_8:
	movq	-32(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB763_9:
	.cfi_def_cfa %rbp, 16
.Ltmp580:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
.Ltmp581:
	callq	__cxa_end_catch@PLT
.Ltmp582:
	jmp	.LBB763_10
.LBB763_10:
	jmp	.LBB763_11
.LBB763_11:
	movq	-40(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB763_12:
.Ltmp583:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -60(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB763_13:
.Lfunc_end763:
	.size	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_, .Lfunc_end763-_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table763:
.Lexception52:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase39-.Lttbaseref39
.Lttbaseref39:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Ltmp573-.Lfunc_begin52 # >> Call Site 1 <<
	.uleb128 .Ltmp574-.Ltmp573      #   Call between .Ltmp573 and .Ltmp574
	.uleb128 .Ltmp575-.Lfunc_begin52 #     jumps to .Ltmp575
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp574-.Lfunc_begin52 # >> Call Site 2 <<
	.uleb128 .Ltmp576-.Ltmp574      #   Call between .Ltmp574 and .Ltmp576
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp576-.Lfunc_begin52 # >> Call Site 3 <<
	.uleb128 .Ltmp579-.Ltmp576      #   Call between .Ltmp576 and .Ltmp579
	.uleb128 .Ltmp580-.Lfunc_begin52 #     jumps to .Ltmp580
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp581-.Lfunc_begin52 # >> Call Site 4 <<
	.uleb128 .Ltmp582-.Ltmp581      #   Call between .Ltmp581 and .Ltmp582
	.uleb128 .Ltmp583-.Lfunc_begin52 #     jumps to .Ltmp583
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp582-.Lfunc_begin52 # >> Call Site 5 <<
	.uleb128 .Lfunc_end763-.Ltmp582 #   Call between .Ltmp582 and .Lfunc_end763
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end52:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase39:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_,"axG",@progbits,_ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_,comdat
	.weak	_ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_ # -- Begin function _ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_,@function
_ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_: # @_ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf12VertexBufferC1ERKS0_@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end764:
	.size	_ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_, .Lfunc_end764-_ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE # -- Begin function _ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE: # @_ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end765:
	.size	_ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end765-_ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_ # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB766_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$64, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB766_3
.LBB766_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.LBB766_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end766:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_, .Lfunc_end766-_ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_,comdat
	.weak	_ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_ # -- Begin function _ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_
	.p2align	4, 0x90
	.type	_ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_,@function
_ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_: # @_ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end767:
	.size	_ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_, .Lfunc_end767-_ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end768:
	.size	_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_, .Lfunc_end768-_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end769:
	.size	_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end769-_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rax
	leaq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	shlq	$6, %rcx
	addq	%rcx, %rax
	movq	-40(%rbp), %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$64, %rax
	movq	%rax, -88(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-152(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$6, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	shlq	$6, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB770_2
# %bb.1:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB770_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end770:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .Lfunc_end770-_ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rcx, %rdi
	movq	%rax, %rsi
	movl	$64, %edx
	callq	memcpy@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end771:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_, .Lfunc_end771-_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB772_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB772_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB772_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB772_5
.LBB772_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB772_6
.LBB772_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB772_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB772_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB772_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end772:
	.size	_ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc, .Lfunc_end772-_ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"axG",@progbits,_ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,comdat
	.weak	_ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ # -- Begin function _ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,@function
_ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_: # @_ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$6, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end773:
	.size	_ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, .Lfunc_end773-_ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB774_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB774_3
.LBB774_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB774_3
.LBB774_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end774:
	.size	_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm, .Lfunc_end774-_ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_ # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end775:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, .Lfunc_end775-_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv,@function
_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv: # @_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end776:
	.size	_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv, .Lfunc_end776-_ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_ # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception53
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$144115188075855871, %rax # imm = 0x1FFFFFFFFFFFFFF
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_
	movq	%rax, -24(%rbp)
.Ltmp584:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp585:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB777_1
.LBB777_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB777_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB777_3:
	.cfi_def_cfa %rbp, 16
.Ltmp586:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB777_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end777:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_, .Lfunc_end777-_ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table777:
.Lexception53:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase40-.Lttbaseref40
.Lttbaseref40:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Ltmp584-.Lfunc_begin53 # >> Call Site 1 <<
	.uleb128 .Ltmp585-.Ltmp584      #   Call between .Ltmp584 and .Ltmp585
	.uleb128 .Ltmp586-.Lfunc_begin53 #     jumps to .Ltmp586
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp585-.Lfunc_begin53 # >> Call Site 2 <<
	.uleb128 .Lfunc_end777-.Ltmp585 #   Call between .Ltmp585 and .Lfunc_end777
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end53:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase40:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end778:
	.size	_ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end778-_ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_,@function
_ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_: # @_ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end779:
	.size	_ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_, .Lfunc_end779-_ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end780:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv, .Lfunc_end780-_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$144115188075855871, %rax # imm = 0x1FFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end781:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv, .Lfunc_end781-_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m,@function
_ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m: # @_ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end782:
	.size	_ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m, .Lfunc_end782-_ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB783_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB783_2:
	movq	-16(%rbp), %rax
	shlq	$6, %rax
	movq	%rax, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end783:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv, .Lfunc_end783-_ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE: # @_ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end784:
	.size	_ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, .Lfunc_end784-_ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN2sf9TransformEET_S3_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf9TransformEET_S3_
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf9TransformEET_S3_
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end785:
	.size	_ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end785-_ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
.LBB786_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB786_4
# %bb.2:                                #   in Loop: Header=BB786_1 Depth=1
	movq	-40(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf9TransformEEPT_RS2_
	movq	-8(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt11__addressofIN2sf9TransformEEPT_RS2_
	movq	-32(%rbp), %rdx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_
# %bb.3:                                #   in Loop: Header=BB786_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$64, %rax
	movq	%rax, -8(%rbp)
	movq	-40(%rbp), %rax
	addq	$64, %rax
	movq	%rax, -40(%rbp)
	jmp	.LBB786_1
.LBB786_4:
	movq	-40(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end786:
	.size	_ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end786-_ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPN2sf9TransformEET_S3_,"axG",@progbits,_ZSt12__niter_baseIPN2sf9TransformEET_S3_,comdat
	.weak	_ZSt12__niter_baseIPN2sf9TransformEET_S3_ # -- Begin function _ZSt12__niter_baseIPN2sf9TransformEET_S3_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPN2sf9TransformEET_S3_,@function
_ZSt12__niter_baseIPN2sf9TransformEET_S3_: # @_ZSt12__niter_baseIPN2sf9TransformEET_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end787:
	.size	_ZSt12__niter_baseIPN2sf9TransformEET_S3_, .Lfunc_end787-_ZSt12__niter_baseIPN2sf9TransformEET_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_,"axG",@progbits,_ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_,comdat
	.weak	_ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_ # -- Begin function _ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_
	.p2align	4, 0x90
	.type	_ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_,@function
_ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_: # @_ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rax
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	-24(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt11__addressofIN2sf9TransformEEPT_RS2_
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end788:
	.size	_ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_, .Lfunc_end788-_ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIN2sf9TransformEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN2sf9TransformEEPT_RS2_,comdat
	.weak	_ZSt11__addressofIN2sf9TransformEEPT_RS2_ # -- Begin function _ZSt11__addressofIN2sf9TransformEEPT_RS2_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIN2sf9TransformEEPT_RS2_,@function
_ZSt11__addressofIN2sf9TransformEEPT_RS2_: # @_ZSt11__addressofIN2sf9TransformEEPT_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end789:
	.size	_ZSt11__addressofIN2sf9TransformEEPT_RS2_, .Lfunc_end789-_ZSt11__addressofIN2sf9TransformEEPT_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_ # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_: # @_ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB790_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$32, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB790_3
.LBB790_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.LBB790_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end790:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_, .Lfunc_end790-_ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end791:
	.size	_ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_, .Lfunc_end791-_ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end792:
	.size	_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end792-_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_: # @_ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception54
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$224, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	shlq	$5, %rcx
	addq	%rcx, %rax
	movq	-40(%rbp), %rdi
	movq	%rax, -120(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE
.Ltmp587:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
.Ltmp588:
	jmp	.LBB793_1
.LBB793_1:
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	leaq	-16(%rbp), %rax
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rsi, -136(%rbp)        # 8-byte Spill
	movq	%rdx, -144(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp589:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	-136(%rbp), %rsi        # 8-byte Reload
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_
.Ltmp590:
	movq	%rax, -152(%rbp)        # 8-byte Spill
	jmp	.LBB793_2
.LBB793_2:
	movq	-152(%rbp), %rax        # 8-byte Reload
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rcx
	addq	$32, %rcx
	movq	%rcx, -88(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -160(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -168(%rbp)        # 8-byte Spill
	movq	%rdx, -176(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp591:
	movq	-160(%rbp), %rdi        # 8-byte Reload
	movq	-168(%rbp), %rsi        # 8-byte Reload
	movq	-176(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_
.Ltmp592:
	movq	%rax, -184(%rbp)        # 8-byte Spill
	jmp	.LBB793_3
.LBB793_3:
	movq	-184(%rbp), %rax        # 8-byte Reload
	movq	%rax, -88(%rbp)
	jmp	.LBB793_13
.LBB793_4:
.Ltmp593:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -96(%rbp)
	movl	%edx, -100(%rbp)
# %bb.5:
	movq	-96(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	cmpq	$0, -88(%rbp)
	jne	.LBB793_7
# %bb.6:
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx
	movq	-72(%rbp), %rdx
	shlq	$5, %rdx
	addq	%rdx, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_
	jmp	.LBB793_10
.LBB793_7:
	movq	-80(%rbp), %rdi
	movq	-88(%rbp), %rsi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -192(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp594:
	movq	-192(%rbp), %rdi        # 8-byte Reload
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E
.Ltmp595:
	jmp	.LBB793_8
.LBB793_8:
	jmp	.LBB793_10
.LBB793_9:
.Ltmp600:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -96(%rbp)
	movl	%edx, -100(%rbp)
.Ltmp601:
	callq	__cxa_end_catch@PLT
.Ltmp602:
	jmp	.LBB793_12
.LBB793_10:
	movq	-80(%rbp), %rsi
	movq	-48(%rbp), %rdx
.Ltmp596:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m
.Ltmp597:
	jmp	.LBB793_11
.LBB793_11:
.Ltmp598:
	callq	__cxa_rethrow@PLT
.Ltmp599:
	jmp	.LBB793_17
.LBB793_12:
	jmp	.LBB793_15
.LBB793_13:
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -208(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -216(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-208(%rbp), %rdi        # 8-byte Reload
	movq	-216(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E
	movq	-56(%rbp), %rax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$5, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m
	movq	-80(%rbp), %rax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	shlq	$5, %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB793_18
# %bb.14:
	addq	$224, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB793_15:
	.cfi_def_cfa %rbp, 16
	movq	-96(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB793_16:
.Ltmp603:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -220(%rbp)        # 4-byte Spill
	callq	__clang_call_terminate
.LBB793_17:
.LBB793_18:
	callq	__stack_chk_fail@PLT
.Lfunc_end793:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .Lfunc_end793-_ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table793:
.Lexception54:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase41-.Lttbaseref41
.Lttbaseref41:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end54-.Lcst_begin54
.Lcst_begin54:
	.uleb128 .Lfunc_begin54-.Lfunc_begin54 # >> Call Site 1 <<
	.uleb128 .Ltmp587-.Lfunc_begin54 #   Call between .Lfunc_begin54 and .Ltmp587
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp587-.Lfunc_begin54 # >> Call Site 2 <<
	.uleb128 .Ltmp592-.Ltmp587      #   Call between .Ltmp587 and .Ltmp592
	.uleb128 .Ltmp593-.Lfunc_begin54 #     jumps to .Ltmp593
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp592-.Lfunc_begin54 # >> Call Site 3 <<
	.uleb128 .Ltmp594-.Ltmp592      #   Call between .Ltmp592 and .Ltmp594
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp594-.Lfunc_begin54 # >> Call Site 4 <<
	.uleb128 .Ltmp595-.Ltmp594      #   Call between .Ltmp594 and .Ltmp595
	.uleb128 .Ltmp600-.Lfunc_begin54 #     jumps to .Ltmp600
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp601-.Lfunc_begin54 # >> Call Site 5 <<
	.uleb128 .Ltmp602-.Ltmp601      #   Call between .Ltmp601 and .Ltmp602
	.uleb128 .Ltmp603-.Lfunc_begin54 #     jumps to .Ltmp603
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp596-.Lfunc_begin54 # >> Call Site 6 <<
	.uleb128 .Ltmp599-.Ltmp596      #   Call between .Ltmp596 and .Ltmp599
	.uleb128 .Ltmp600-.Lfunc_begin54 #     jumps to .Ltmp600
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp599-.Lfunc_begin54 # >> Call Site 7 <<
	.uleb128 .Lfunc_end793-.Ltmp599 #   Call between .Ltmp599 and .Lfunc_end793
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end54:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase41:
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf5ImageC2ERKS0_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end794:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_, .Lfunc_end794-_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf5ImageC2ERKS0_,"axG",@progbits,_ZN2sf5ImageC2ERKS0_,comdat
	.weak	_ZN2sf5ImageC2ERKS0_    # -- Begin function _ZN2sf5ImageC2ERKS0_
	.p2align	4, 0x90
	.type	_ZN2sf5ImageC2ERKS0_,@function
_ZN2sf5ImageC2ERKS0_:                   # @_ZN2sf5ImageC2ERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	addq	$8, %rax
	movq	-16(%rbp), %rcx
	addq	$8, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZNSt6vectorIhSaIhEEC2ERKS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end795:
	.size	_ZN2sf5ImageC2ERKS0_, .Lfunc_end795-_ZN2sf5ImageC2ERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIhSaIhEEC2ERKS1_,"axG",@progbits,_ZNSt6vectorIhSaIhEEC2ERKS1_,comdat
	.weak	_ZNSt6vectorIhSaIhEEC2ERKS1_ # -- Begin function _ZNSt6vectorIhSaIhEEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIhSaIhEEC2ERKS1_,@function
_ZNSt6vectorIhSaIhEEC2ERKS1_:           # @_ZNSt6vectorIhSaIhEEC2ERKS1_
.Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception55
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIhSaIhEE4sizeEv
	movq	-32(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	leaq	-16(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	movq	%rcx, -88(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_
.Ltmp604:
	movq	-72(%rbp), %rdi         # 8-byte Reload
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movq	-88(%rbp), %rdx         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_
.Ltmp605:
	jmp	.LBB796_1
.LBB796_1:
	leaq	-16(%rbp), %rdi
	callq	_ZNSaIhED2Ev
	movq	-32(%rbp), %rdi
	callq	_ZNKSt6vectorIhSaIhEE5beginEv
	movq	%rax, -56(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNKSt6vectorIhSaIhEE3endEv
	movq	%rax, -64(%rbp)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdx
	movq	%rax, %rdi
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
.Ltmp607:
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E
.Ltmp608:
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jmp	.LBB796_2
.LBB796_2:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, 8(%rax)
	movq	%fs:40, %rdx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rdx
	jne	.LBB796_7
# %bb.3:
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB796_4:
	.cfi_def_cfa %rbp, 16
.Ltmp606:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNSaIhED2Ev
	jmp	.LBB796_6
.LBB796_5:
.Ltmp609:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIhSaIhEED2Ev
.LBB796_6:
	movq	-40(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB796_7:
	callq	__stack_chk_fail@PLT
.Lfunc_end796:
	.size	_ZNSt6vectorIhSaIhEEC2ERKS1_, .Lfunc_end796-_ZNSt6vectorIhSaIhEEC2ERKS1_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table796:
.Lexception55:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end55-.Lcst_begin55
.Lcst_begin55:
	.uleb128 .Lfunc_begin55-.Lfunc_begin55 # >> Call Site 1 <<
	.uleb128 .Ltmp604-.Lfunc_begin55 #   Call between .Lfunc_begin55 and .Ltmp604
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp604-.Lfunc_begin55 # >> Call Site 2 <<
	.uleb128 .Ltmp605-.Ltmp604      #   Call between .Ltmp604 and .Ltmp605
	.uleb128 .Ltmp606-.Lfunc_begin55 #     jumps to .Ltmp606
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp607-.Lfunc_begin55 # >> Call Site 3 <<
	.uleb128 .Ltmp608-.Ltmp607      #   Call between .Ltmp607 and .Ltmp608
	.uleb128 .Ltmp609-.Lfunc_begin55 #     jumps to .Ltmp609
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp608-.Lfunc_begin55 # >> Call Site 4 <<
	.uleb128 .Lfunc_end796-.Ltmp608 #   Call between .Ltmp608 and .Lfunc_end796
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end55:
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_,"axG",@progbits,_ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_,comdat
	.weak	_ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_ # -- Begin function _ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_,@function
_ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_: # @_ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rdi, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end797:
	.size	_ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_, .Lfunc_end797-_ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end798:
	.size	_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv, .Lfunc_end798-_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_,"axG",@progbits,_ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_,comdat
	.weak	_ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_ # -- Begin function _ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_,@function
_ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_:   # @_ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_
.Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception56
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_
	movq	-16(%rbp), %rsi
.Ltmp610:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm
.Ltmp611:
	jmp	.LBB799_1
.LBB799_1:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB799_2:
	.cfi_def_cfa %rbp, 16
.Ltmp612:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -32(%rbp)
	movl	%edx, -36(%rbp)
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev
# %bb.3:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end799:
	.size	_ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_, .Lfunc_end799-_ZNSt12_Vector_baseIhSaIhEEC2EmRKS0_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table799:
.Lexception56:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end56-.Lcst_begin56
.Lcst_begin56:
	.uleb128 .Ltmp610-.Lfunc_begin56 # >> Call Site 1 <<
	.uleb128 .Ltmp611-.Ltmp610      #   Call between .Ltmp610 and .Ltmp611
	.uleb128 .Ltmp612-.Lfunc_begin56 #     jumps to .Ltmp612
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp611-.Lfunc_begin56 # >> Call Site 2 <<
	.uleb128 .Lfunc_end799-.Ltmp611 #   Call between .Ltmp611 and .Lfunc_end799
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end56:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSaIhED2Ev,"axG",@progbits,_ZNSaIhED2Ev,comdat
	.weak	_ZNSaIhED2Ev            # -- Begin function _ZNSaIhED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIhED2Ev,@function
_ZNSaIhED2Ev:                           # @_ZNSaIhED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIhED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end800:
	.size	_ZNSaIhED2Ev, .Lfunc_end800-_ZNSaIhED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIhSaIhEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIhSaIhEED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIhSaIhEED2Ev # -- Begin function _ZNSt12_Vector_baseIhSaIhEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIhSaIhEED2Ev,@function
_ZNSt12_Vector_baseIhSaIhEED2Ev:        # @_ZNSt12_Vector_baseIhSaIhEED2Ev
.Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception57
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
.Ltmp613:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm
.Ltmp614:
	jmp	.LBB801_1
.LBB801_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB801_2:
	.cfi_def_cfa %rbp, 16
.Ltmp615:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end801:
	.size	_ZNSt12_Vector_baseIhSaIhEED2Ev, .Lfunc_end801-_ZNSt12_Vector_baseIhSaIhEED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table801:
.Lexception57:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase42-.Lttbaseref42
.Lttbaseref42:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end57-.Lcst_begin57
.Lcst_begin57:
	.uleb128 .Ltmp613-.Lfunc_begin57 # >> Call Site 1 <<
	.uleb128 .Ltmp614-.Ltmp613      #   Call between .Ltmp613 and .Ltmp614
	.uleb128 .Ltmp615-.Lfunc_begin57 #     jumps to .Ltmp615
	.byte	1                       #   On action: 1
.Lcst_end57:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase42:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_,"axG",@progbits,_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_,comdat
	.weak	_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_ # -- Begin function _ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_,@function
_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_: # @_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rdi, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSaIhEC2ERKS_
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end802:
	.size	_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_, .Lfunc_end802-_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIhEC2ERKS_,"axG",@progbits,_ZNSaIhEC2ERKS_,comdat
	.weak	_ZNSaIhEC2ERKS_         # -- Begin function _ZNSaIhEC2ERKS_
	.p2align	4, 0x90
	.type	_ZNSaIhEC2ERKS_,@function
_ZNSaIhEC2ERKS_:                        # @_ZNSaIhEC2ERKS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end803:
	.size	_ZNSaIhEC2ERKS_, .Lfunc_end803-_ZNSaIhEC2ERKS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_,@function
_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_: # @_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end804:
	.size	_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_, .Lfunc_end804-_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_,"axG",@progbits,_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_,comdat
	.weak	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_ # -- Begin function _ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_,@function
_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_: # @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSaIhEC2ERKS_
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end805:
	.size	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_, .Lfunc_end805-_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC2ERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm,"axG",@progbits,_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm,comdat
	.weak	_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm # -- Begin function _ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm,@function
_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm: # @_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	(%rcx), %rax
	movq	%rax, 8(%rcx)
	movq	(%rcx), %rax
	addq	-16(%rbp), %rax
	movq	%rax, 16(%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end806:
	.size	_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm, .Lfunc_end806-_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIhED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end807:
	.size	_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev, .Lfunc_end807-_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev,"axG",@progbits,_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev,comdat
	.weak	_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev # -- Begin function _ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev,@function
_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev: # @_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, (%rax)
	movq	$0, 8(%rax)
	movq	$0, 16(%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end808:
	.size	_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev, .Lfunc_end808-_ZNSt12_Vector_baseIhSaIhEE17_Vector_impl_dataC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIhED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIhED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIhED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIhED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIhED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIhED2Ev:    # @_ZN9__gnu_cxx13new_allocatorIhED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end809:
	.size	_ZN9__gnu_cxx13new_allocatorIhED2Ev, .Lfunc_end809-_ZN9__gnu_cxx13new_allocatorIhED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB810_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB810_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB810_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB810_5
.LBB810_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB810_6
.LBB810_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB810_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB810_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB810_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end810:
	.size	_ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc, .Lfunc_end810-_ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"axG",@progbits,_ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,comdat
	.weak	_ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ # -- Begin function _ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,@function
_ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_: # @_ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$5, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end811:
	.size	_ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, .Lfunc_end811-_ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB812_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB812_3
.LBB812_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB812_3
.LBB812_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end812:
	.size	_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm, .Lfunc_end812-_ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end813:
	.size	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end813-_ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv,@function
_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv: # @_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end814:
	.size	_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv, .Lfunc_end814-_ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv,@function
_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv: # @_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$5, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end815:
	.size	_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv, .Lfunc_end815-_ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_,"axG",@progbits,_ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_,comdat
	.weak	_ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_ # -- Begin function _ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_,@function
_ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_: # @_ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_
.Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception58
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$288230376151711743, %rax # imm = 0x3FFFFFFFFFFFFFF
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_
	movq	%rax, -24(%rbp)
.Ltmp616:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp617:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB816_1
.LBB816_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB816_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB816_3:
	.cfi_def_cfa %rbp, 16
.Ltmp618:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB816_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end816:
	.size	_ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_, .Lfunc_end816-_ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table816:
.Lexception58:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase43-.Lttbaseref43
.Lttbaseref43:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end58-.Lcst_begin58
.Lcst_begin58:
	.uleb128 .Ltmp616-.Lfunc_begin58 # >> Call Site 1 <<
	.uleb128 .Ltmp617-.Ltmp616      #   Call between .Ltmp616 and .Ltmp617
	.uleb128 .Ltmp618-.Lfunc_begin58 #     jumps to .Ltmp618
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp617-.Lfunc_begin58 # >> Call Site 2 <<
	.uleb128 .Lfunc_end816-.Ltmp617 #   Call between .Ltmp617 and .Lfunc_end816
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end58:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase43:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end817:
	.size	_ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end817-_ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_,@function
_ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_: # @_ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end818:
	.size	_ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_, .Lfunc_end818-_ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end819:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv, .Lfunc_end819-_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$288230376151711743, %rax # imm = 0x3FFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end820:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv, .Lfunc_end820-_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m,@function
_ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m: # @_ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end821:
	.size	_ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m, .Lfunc_end821-_ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB822_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB822_2:
	movq	-16(%rbp), %rax
	shlq	$5, %rax
	movq	%rax, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end822:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv, .Lfunc_end822-_ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end823:
	.size	_ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E, .Lfunc_end823-_ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_,"axG",@progbits,_ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_,comdat
	.weak	_ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_ # -- Begin function _ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_
	.p2align	4, 0x90
	.type	_ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_,@function
_ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_: # @_ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end824:
	.size	_ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_, .Lfunc_end824-_ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_,"axG",@progbits,_ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_,comdat
	.weak	_ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_ # -- Begin function _ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_,@function
_ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_: # @_ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end825:
	.size	_ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_, .Lfunc_end825-_ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_,"axG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_,comdat
	.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_ # -- Begin function _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_,@function
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_: # @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_
.Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception59
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
.LBB826_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB826_8
# %bb.2:                                #   in Loop: Header=BB826_1 Depth=1
	movq	-32(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf5ImageEEPT_RS2_
	movq	-8(%rbp), %rsi
.Ltmp619:
	movq	%rax, %rdi
	callq	_ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_
.Ltmp620:
	jmp	.LBB826_3
.LBB826_3:                              #   in Loop: Header=BB826_1 Depth=1
	jmp	.LBB826_4
.LBB826_4:                              #   in Loop: Header=BB826_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$32, %rax
	movq	%rax, -8(%rbp)
	movq	-32(%rbp), %rax
	addq	$32, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB826_1
.LBB826_5:
.Ltmp621:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
# %bb.6:
	movq	-40(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi
.Ltmp622:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZSt8_DestroyIPN2sf5ImageEEvT_S3_
.Ltmp623:
	jmp	.LBB826_7
.LBB826_7:
.Ltmp624:
	callq	__cxa_rethrow@PLT
.Ltmp625:
	jmp	.LBB826_13
.LBB826_8:
	movq	-32(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB826_9:
	.cfi_def_cfa %rbp, 16
.Ltmp626:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
.Ltmp627:
	callq	__cxa_end_catch@PLT
.Ltmp628:
	jmp	.LBB826_10
.LBB826_10:
	jmp	.LBB826_11
.LBB826_11:
	movq	-40(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB826_12:
.Ltmp629:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -60(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB826_13:
.Lfunc_end826:
	.size	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_, .Lfunc_end826-_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table826:
.Lexception59:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase44-.Lttbaseref44
.Lttbaseref44:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end59-.Lcst_begin59
.Lcst_begin59:
	.uleb128 .Ltmp619-.Lfunc_begin59 # >> Call Site 1 <<
	.uleb128 .Ltmp620-.Ltmp619      #   Call between .Ltmp619 and .Ltmp620
	.uleb128 .Ltmp621-.Lfunc_begin59 #     jumps to .Ltmp621
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp620-.Lfunc_begin59 # >> Call Site 2 <<
	.uleb128 .Ltmp622-.Ltmp620      #   Call between .Ltmp620 and .Ltmp622
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp622-.Lfunc_begin59 # >> Call Site 3 <<
	.uleb128 .Ltmp625-.Ltmp622      #   Call between .Ltmp622 and .Ltmp625
	.uleb128 .Ltmp626-.Lfunc_begin59 #     jumps to .Ltmp626
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp627-.Lfunc_begin59 # >> Call Site 4 <<
	.uleb128 .Ltmp628-.Ltmp627      #   Call between .Ltmp627 and .Ltmp628
	.uleb128 .Ltmp629-.Lfunc_begin59 #     jumps to .Ltmp629
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp628-.Lfunc_begin59 # >> Call Site 5 <<
	.uleb128 .Lfunc_end826-.Ltmp628 #   Call between .Ltmp628 and .Lfunc_end826
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end59:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase44:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_,"axG",@progbits,_ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_,comdat
	.weak	_ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_ # -- Begin function _ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_,@function
_ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_: # @_ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf5ImageC2ERKS0_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end827:
	.size	_ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_, .Lfunc_end827-_ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE # -- Begin function _ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE: # @_ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end828:
	.size	_ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end828-_ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_ # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_: # @_ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB829_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$40, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB829_3
.LBB829_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.LBB829_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end829:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_, .Lfunc_end829-_ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end830:
	.size	_ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_, .Lfunc_end830-_ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end831:
	.size	_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end831-_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_: # @_ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception60
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$224, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	(%rax,%rcx,8), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -120(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE
.Ltmp630:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
.Ltmp631:
	jmp	.LBB832_1
.LBB832_1:
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	leaq	-16(%rbp), %rax
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	%rsi, -136(%rbp)        # 8-byte Spill
	movq	%rdx, -144(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp632:
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	-136(%rbp), %rsi        # 8-byte Reload
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_
.Ltmp633:
	movq	%rax, -152(%rbp)        # 8-byte Spill
	jmp	.LBB832_2
.LBB832_2:
	movq	-152(%rbp), %rax        # 8-byte Reload
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rcx
	addq	$40, %rcx
	movq	%rcx, -88(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -160(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -168(%rbp)        # 8-byte Spill
	movq	%rdx, -176(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp634:
	movq	-160(%rbp), %rdi        # 8-byte Reload
	movq	-168(%rbp), %rsi        # 8-byte Reload
	movq	-176(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_
.Ltmp635:
	movq	%rax, -184(%rbp)        # 8-byte Spill
	jmp	.LBB832_3
.LBB832_3:
	movq	-184(%rbp), %rax        # 8-byte Reload
	movq	%rax, -88(%rbp)
	jmp	.LBB832_13
.LBB832_4:
.Ltmp636:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -96(%rbp)
	movl	%edx, -100(%rbp)
# %bb.5:
	movq	-96(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	cmpq	$0, -88(%rbp)
	jne	.LBB832_7
# %bb.6:
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx
	imulq	$40, -72(%rbp), %rdx
	addq	%rdx, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_
	jmp	.LBB832_10
.LBB832_7:
	movq	-80(%rbp), %rdi
	movq	-88(%rbp), %rsi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -192(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp637:
	movq	-192(%rbp), %rdi        # 8-byte Reload
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E
.Ltmp638:
	jmp	.LBB832_8
.LBB832_8:
	jmp	.LBB832_10
.LBB832_9:
.Ltmp643:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -96(%rbp)
	movl	%edx, -100(%rbp)
.Ltmp644:
	callq	__cxa_end_catch@PLT
.Ltmp645:
	jmp	.LBB832_12
.LBB832_10:
	movq	-80(%rbp), %rsi
	movq	-48(%rbp), %rdx
.Ltmp639:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m
.Ltmp640:
	jmp	.LBB832_11
.LBB832_11:
.Ltmp641:
	callq	__cxa_rethrow@PLT
.Ltmp642:
	jmp	.LBB832_17
.LBB832_12:
	jmp	.LBB832_15
.LBB832_13:
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -208(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -216(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-208(%rbp), %rdi        # 8-byte Reload
	movq	-216(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E
	movq	-56(%rbp), %rax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	movabsq	$-3689348814741910323, %rsi # imm = 0xCCCCCCCCCCCCCCCD
	imulq	%rsi, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m
	movq	-80(%rbp), %rax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rdx,%rdx,4), %rdx
	leaq	(%rax,%rdx,8), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB832_18
# %bb.14:
	addq	$224, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB832_15:
	.cfi_def_cfa %rbp, 16
	movq	-96(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB832_16:
.Ltmp646:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -220(%rbp)        # 4-byte Spill
	callq	__clang_call_terminate
.LBB832_17:
.LBB832_18:
	callq	__stack_chk_fail@PLT
.Lfunc_end832:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .Lfunc_end832-_ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table832:
.Lexception60:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase45-.Lttbaseref45
.Lttbaseref45:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end60-.Lcst_begin60
.Lcst_begin60:
	.uleb128 .Lfunc_begin60-.Lfunc_begin60 # >> Call Site 1 <<
	.uleb128 .Ltmp630-.Lfunc_begin60 #   Call between .Lfunc_begin60 and .Ltmp630
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp630-.Lfunc_begin60 # >> Call Site 2 <<
	.uleb128 .Ltmp635-.Ltmp630      #   Call between .Ltmp630 and .Ltmp635
	.uleb128 .Ltmp636-.Lfunc_begin60 #     jumps to .Ltmp636
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp635-.Lfunc_begin60 # >> Call Site 3 <<
	.uleb128 .Ltmp637-.Ltmp635      #   Call between .Ltmp635 and .Ltmp637
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp637-.Lfunc_begin60 # >> Call Site 4 <<
	.uleb128 .Ltmp638-.Ltmp637      #   Call between .Ltmp637 and .Ltmp638
	.uleb128 .Ltmp643-.Lfunc_begin60 #     jumps to .Ltmp643
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp644-.Lfunc_begin60 # >> Call Site 5 <<
	.uleb128 .Ltmp645-.Ltmp644      #   Call between .Ltmp644 and .Ltmp645
	.uleb128 .Ltmp646-.Lfunc_begin60 #     jumps to .Ltmp646
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp639-.Lfunc_begin60 # >> Call Site 6 <<
	.uleb128 .Ltmp642-.Ltmp639      #   Call between .Ltmp639 and .Ltmp642
	.uleb128 .Ltmp643-.Lfunc_begin60 #     jumps to .Ltmp643
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp642-.Lfunc_begin60 # >> Call Site 7 <<
	.uleb128 .Lfunc_end832-.Ltmp642 #   Call between .Ltmp642 and .Lfunc_end832
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end60:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase45:
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf7TextureC1ERKS0_@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end833:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_, .Lfunc_end833-_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB834_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB834_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB834_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB834_5
.LBB834_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB834_6
.LBB834_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB834_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB834_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB834_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end834:
	.size	_ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc, .Lfunc_end834-_ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"axG",@progbits,_ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,comdat
	.weak	_ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ # -- Begin function _ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,@function
_ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_: # @_ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$40, %ecx
	idivq	%rcx
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end835:
	.size	_ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, .Lfunc_end835-_ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB836_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB836_3
.LBB836_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB836_3
.LBB836_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end836:
	.size	_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm, .Lfunc_end836-_ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end837:
	.size	_ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end837-_ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv,@function
_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv: # @_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end838:
	.size	_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv, .Lfunc_end838-_ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv,@function
_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv: # @_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$40, %ecx
	idivq	%rcx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end839:
	.size	_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv, .Lfunc_end839-_ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_,"axG",@progbits,_ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_,comdat
	.weak	_ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_ # -- Begin function _ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_,@function
_ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_: # @_ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_
.Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception61
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$230584300921369395, %rax # imm = 0x333333333333333
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_
	movq	%rax, -24(%rbp)
.Ltmp647:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp648:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB840_1
.LBB840_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB840_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB840_3:
	.cfi_def_cfa %rbp, 16
.Ltmp649:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB840_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end840:
	.size	_ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_, .Lfunc_end840-_ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table840:
.Lexception61:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase46-.Lttbaseref46
.Lttbaseref46:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end61-.Lcst_begin61
.Lcst_begin61:
	.uleb128 .Ltmp647-.Lfunc_begin61 # >> Call Site 1 <<
	.uleb128 .Ltmp648-.Ltmp647      #   Call between .Ltmp647 and .Ltmp648
	.uleb128 .Ltmp649-.Lfunc_begin61 #     jumps to .Ltmp649
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp648-.Lfunc_begin61 # >> Call Site 2 <<
	.uleb128 .Lfunc_end840-.Ltmp648 #   Call between .Ltmp648 and .Lfunc_end840
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end61:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase46:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end841:
	.size	_ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end841-_ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_,@function
_ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_: # @_ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end842:
	.size	_ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_, .Lfunc_end842-_ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end843:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv, .Lfunc_end843-_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$230584300921369395, %rax # imm = 0x333333333333333
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end844:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv, .Lfunc_end844-_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m,@function
_ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m: # @_ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end845:
	.size	_ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m, .Lfunc_end845-_ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB846_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB846_2:
	imulq	$40, -16(%rbp), %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end846:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv, .Lfunc_end846-_ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end847:
	.size	_ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E, .Lfunc_end847-_ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_,"axG",@progbits,_ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_,comdat
	.weak	_ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_ # -- Begin function _ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_
	.p2align	4, 0x90
	.type	_ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_,@function
_ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_: # @_ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end848:
	.size	_ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_, .Lfunc_end848-_ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_,"axG",@progbits,_ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_,comdat
	.weak	_ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_ # -- Begin function _ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_,@function
_ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_: # @_ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movb	$1, -25(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	callq	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end849:
	.size	_ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_, .Lfunc_end849-_ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_,"axG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_,comdat
	.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_ # -- Begin function _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_,@function
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_: # @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_
.Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception62
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -32(%rbp)
.LBB850_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB850_8
# %bb.2:                                #   in Loop: Header=BB850_1 Depth=1
	movq	-32(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf7TextureEEPT_RS2_
	movq	-8(%rbp), %rsi
.Ltmp650:
	movq	%rax, %rdi
	callq	_ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_
.Ltmp651:
	jmp	.LBB850_3
.LBB850_3:                              #   in Loop: Header=BB850_1 Depth=1
	jmp	.LBB850_4
.LBB850_4:                              #   in Loop: Header=BB850_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$40, %rax
	movq	%rax, -8(%rbp)
	movq	-32(%rbp), %rax
	addq	$40, %rax
	movq	%rax, -32(%rbp)
	jmp	.LBB850_1
.LBB850_5:
.Ltmp652:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
# %bb.6:
	movq	-40(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-24(%rbp), %rdi
	movq	-32(%rbp), %rsi
.Ltmp653:
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZSt8_DestroyIPN2sf7TextureEEvT_S3_
.Ltmp654:
	jmp	.LBB850_7
.LBB850_7:
.Ltmp655:
	callq	__cxa_rethrow@PLT
.Ltmp656:
	jmp	.LBB850_13
.LBB850_8:
	movq	-32(%rbp), %rax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB850_9:
	.cfi_def_cfa %rbp, 16
.Ltmp657:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
.Ltmp658:
	callq	__cxa_end_catch@PLT
.Ltmp659:
	jmp	.LBB850_10
.LBB850_10:
	jmp	.LBB850_11
.LBB850_11:
	movq	-40(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB850_12:
.Ltmp660:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -60(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB850_13:
.Lfunc_end850:
	.size	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_, .Lfunc_end850-_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table850:
.Lexception62:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase47-.Lttbaseref47
.Lttbaseref47:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end62-.Lcst_begin62
.Lcst_begin62:
	.uleb128 .Ltmp650-.Lfunc_begin62 # >> Call Site 1 <<
	.uleb128 .Ltmp651-.Ltmp650      #   Call between .Ltmp650 and .Ltmp651
	.uleb128 .Ltmp652-.Lfunc_begin62 #     jumps to .Ltmp652
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp651-.Lfunc_begin62 # >> Call Site 2 <<
	.uleb128 .Ltmp653-.Ltmp651      #   Call between .Ltmp651 and .Ltmp653
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp653-.Lfunc_begin62 # >> Call Site 3 <<
	.uleb128 .Ltmp656-.Ltmp653      #   Call between .Ltmp653 and .Ltmp656
	.uleb128 .Ltmp657-.Lfunc_begin62 #     jumps to .Ltmp657
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp658-.Lfunc_begin62 # >> Call Site 4 <<
	.uleb128 .Ltmp659-.Ltmp658      #   Call between .Ltmp658 and .Ltmp659
	.uleb128 .Ltmp660-.Lfunc_begin62 #     jumps to .Ltmp660
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp659-.Lfunc_begin62 # >> Call Site 5 <<
	.uleb128 .Lfunc_end850-.Ltmp659 #   Call between .Ltmp659 and .Lfunc_end850
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end62:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase47:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_,"axG",@progbits,_ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_,comdat
	.weak	_ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_ # -- Begin function _ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_,@function
_ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_: # @_ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf7TextureC1ERKS0_@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end851:
	.size	_ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_, .Lfunc_end851-_ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE # -- Begin function _ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE: # @_ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end852:
	.size	_ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end852-_ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E # -- Begin function _ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E,@function
_ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E: # @_ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end853:
	.size	_ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E, .Lfunc_end853-_ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end854:
	.size	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end854-_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev,@function
_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev: # @_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev
.Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception63
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$3, %rdx
	movabsq	$-3689348814741910323, %rsi # imm = 0xCCCCCCCCCCCCCCCD
	imulq	%rsi, %rdx
.Ltmp661:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m
.Ltmp662:
	jmp	.LBB855_1
.LBB855_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB855_2:
	.cfi_def_cfa %rbp, 16
.Ltmp663:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end855:
	.size	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev, .Lfunc_end855-_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table855:
.Lexception63:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase48-.Lttbaseref48
.Lttbaseref48:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end63-.Lcst_begin63
.Lcst_begin63:
	.uleb128 .Ltmp661-.Lfunc_begin63 # >> Call Site 1 <<
	.uleb128 .Ltmp662-.Ltmp661      #   Call between .Ltmp661 and .Ltmp662
	.uleb128 .Ltmp663-.Lfunc_begin63 #     jumps to .Ltmp663
	.byte	1                       #   On action: 1
.Lcst_end63:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase48:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_,"axG",@progbits,_ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_,comdat
	.weak	_ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_ # -- Begin function _ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_,@function
_ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_: # @_ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end856:
	.size	_ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_, .Lfunc_end856-_ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_,comdat
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
.LBB857_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB857_4
# %bb.2:                                #   in Loop: Header=BB857_1 Depth=1
	movq	-8(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_
	movq	%rax, %rdi
	callq	_ZSt8_DestroyIN2sf11VertexArrayEEvPT_
# %bb.3:                                #   in Loop: Header=BB857_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$40, %rax
	movq	%rax, -8(%rbp)
	jmp	.LBB857_1
.LBB857_4:
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end857:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_, .Lfunc_end857-_ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIN2sf11VertexArrayEEvPT_,"axG",@progbits,_ZSt8_DestroyIN2sf11VertexArrayEEvPT_,comdat
	.weak	_ZSt8_DestroyIN2sf11VertexArrayEEvPT_ # -- Begin function _ZSt8_DestroyIN2sf11VertexArrayEEvPT_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIN2sf11VertexArrayEEvPT_,@function
_ZSt8_DestroyIN2sf11VertexArrayEEvPT_:  # @_ZSt8_DestroyIN2sf11VertexArrayEEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*(%rcx)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end858:
	.size	_ZSt8_DestroyIN2sf11VertexArrayEEvPT_, .Lfunc_end858-_ZSt8_DestroyIN2sf11VertexArrayEEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_,"axG",@progbits,_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_,comdat
	.weak	_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_ # -- Begin function _ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_
	.p2align	4, 0x90
	.type	_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_,@function
_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_: # @_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end859:
	.size	_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_, .Lfunc_end859-_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m,"axG",@progbits,_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m,comdat
	.weak	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m # -- Begin function _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m,@function
_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m: # @_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB860_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m
.LBB860_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end860:
	.size	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m, .Lfunc_end860-_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIN2sf11VertexArrayEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end861:
	.size	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev, .Lfunc_end861-_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m,@function
_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m: # @_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end862:
	.size	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m, .Lfunc_end862-_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m,@function
_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m: # @_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end863:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m, .Lfunc_end863-_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIN2sf11VertexArrayEED2Ev,"axG",@progbits,_ZNSaIN2sf11VertexArrayEED2Ev,comdat
	.weak	_ZNSaIN2sf11VertexArrayEED2Ev # -- Begin function _ZNSaIN2sf11VertexArrayEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIN2sf11VertexArrayEED2Ev,@function
_ZNSaIN2sf11VertexArrayEED2Ev:          # @_ZNSaIN2sf11VertexArrayEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end864:
	.size	_ZNSaIN2sf11VertexArrayEED2Ev, .Lfunc_end864-_ZNSaIN2sf11VertexArrayEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end865:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev, .Lfunc_end865-_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E # -- Begin function _ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E,@function
_ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E: # @_ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end866:
	.size	_ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E, .Lfunc_end866-_ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end867:
	.size	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv, .Lfunc_end867-_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev # -- Begin function _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev,@function
_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev: # @_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev
.Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception64
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$3, %rdx
.Ltmp664:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m
.Ltmp665:
	jmp	.LBB868_1
.LBB868_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB868_2:
	.cfi_def_cfa %rbp, 16
.Ltmp666:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end868:
	.size	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev, .Lfunc_end868-_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table868:
.Lexception64:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase49-.Lttbaseref49
.Lttbaseref49:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end64-.Lcst_begin64
.Lcst_begin64:
	.uleb128 .Ltmp664-.Lfunc_begin64 # >> Call Site 1 <<
	.uleb128 .Ltmp665-.Ltmp664      #   Call between .Ltmp664 and .Ltmp665
	.uleb128 .Ltmp666-.Lfunc_begin64 #     jumps to .Ltmp666
	.byte	1                       #   On action: 1
.Lcst_end64:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase49:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_,"axG",@progbits,_ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_,comdat
	.weak	_ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_ # -- Begin function _ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_,@function
_ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_: # @_ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end869:
	.size	_ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_, .Lfunc_end869-_ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end870:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_, .Lfunc_end870-_ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m,"axG",@progbits,_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m,comdat
	.weak	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m # -- Begin function _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m,@function
_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m: # @_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB871_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m
.LBB871_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end871:
	.size	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m, .Lfunc_end871-_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIPKSt6vectorIbSaIbEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end872:
	.size	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev, .Lfunc_end872-_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m,"axG",@progbits,_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m,comdat
	.weak	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m # -- Begin function _ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m,@function
_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m: # @_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end873:
	.size	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m, .Lfunc_end873-_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m,@function
_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m: # @_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end874:
	.size	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m, .Lfunc_end874-_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIPKSt6vectorIbSaIbEEED2Ev,"axG",@progbits,_ZNSaIPKSt6vectorIbSaIbEEED2Ev,comdat
	.weak	_ZNSaIPKSt6vectorIbSaIbEEED2Ev # -- Begin function _ZNSaIPKSt6vectorIbSaIbEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIPKSt6vectorIbSaIbEEED2Ev,@function
_ZNSaIPKSt6vectorIbSaIbEEED2Ev:         # @_ZNSaIPKSt6vectorIbSaIbEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end875:
	.size	_ZNSaIPKSt6vectorIbSaIbEEED2Ev, .Lfunc_end875-_ZNSaIPKSt6vectorIbSaIbEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end876:
	.size	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev, .Lfunc_end876-_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E # -- Begin function _ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E,@function
_ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E: # @_ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end877:
	.size	_ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E, .Lfunc_end877-_ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end878:
	.size	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv, .Lfunc_end878-_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev # -- Begin function _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev,@function
_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev: # @_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev
.Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception65
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	$3, %rdx
.Ltmp667:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m
.Ltmp668:
	jmp	.LBB879_1
.LBB879_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB879_2:
	.cfi_def_cfa %rbp, 16
.Ltmp669:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end879:
	.size	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev, .Lfunc_end879-_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table879:
.Lexception65:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase50-.Lttbaseref50
.Lttbaseref50:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end65-.Lcst_begin65
.Lcst_begin65:
	.uleb128 .Ltmp667-.Lfunc_begin65 # >> Call Site 1 <<
	.uleb128 .Ltmp668-.Ltmp667      #   Call between .Ltmp667 and .Ltmp668
	.uleb128 .Ltmp669-.Lfunc_begin65 #     jumps to .Ltmp669
	.byte	1                       #   On action: 1
.Lcst_end65:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase50:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_,"axG",@progbits,_ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_,comdat
	.weak	_ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_ # -- Begin function _ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_,@function
_ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_:    # @_ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end880:
	.size	_ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_, .Lfunc_end880-_ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end881:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_, .Lfunc_end881-_ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m,"axG",@progbits,_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m,comdat
	.weak	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m # -- Begin function _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m,@function
_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m: # @_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB882_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m
.LBB882_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end882:
	.size	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m, .Lfunc_end882-_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaIPKN2sf5ImageEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end883:
	.size	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev, .Lfunc_end883-_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m,"axG",@progbits,_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m,comdat
	.weak	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m # -- Begin function _ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m,@function
_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m: # @_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end884:
	.size	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m, .Lfunc_end884-_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m,@function
_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m: # @_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end885:
	.size	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m, .Lfunc_end885-_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaIPKN2sf5ImageEED2Ev,"axG",@progbits,_ZNSaIPKN2sf5ImageEED2Ev,comdat
	.weak	_ZNSaIPKN2sf5ImageEED2Ev # -- Begin function _ZNSaIPKN2sf5ImageEED2Ev
	.p2align	4, 0x90
	.type	_ZNSaIPKN2sf5ImageEED2Ev,@function
_ZNSaIPKN2sf5ImageEED2Ev:               # @_ZNSaIPKN2sf5ImageEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end886:
	.size	_ZNSaIPKN2sf5ImageEED2Ev, .Lfunc_end886-_ZNSaIPKN2sf5ImageEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev,@function
_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev: # @_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end887:
	.size	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev, .Lfunc_end887-_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt8_DestroyIPttEvT_S1_RSaIT0_E,"axG",@progbits,_ZSt8_DestroyIPttEvT_S1_RSaIT0_E,comdat
	.weak	_ZSt8_DestroyIPttEvT_S1_RSaIT0_E # -- Begin function _ZSt8_DestroyIPttEvT_S1_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPttEvT_S1_RSaIT0_E,@function
_ZSt8_DestroyIPttEvT_S1_RSaIT0_E:       # @_ZSt8_DestroyIPttEvT_S1_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZSt8_DestroyIPtEvT_S1_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end888:
	.size	_ZSt8_DestroyIPttEvT_S1_RSaIT0_E, .Lfunc_end888-_ZSt8_DestroyIPttEvT_S1_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv # -- Begin function _ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv,@function
_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv: # @_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end889:
	.size	_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv, .Lfunc_end889-_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseItSaItEED2Ev,"axG",@progbits,_ZNSt12_Vector_baseItSaItEED2Ev,comdat
	.weak	_ZNSt12_Vector_baseItSaItEED2Ev # -- Begin function _ZNSt12_Vector_baseItSaItEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseItSaItEED2Ev,@function
_ZNSt12_Vector_baseItSaItEED2Ev:        # @_ZNSt12_Vector_baseItSaItEED2Ev
.Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception66
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	movq	16(%rax), %rdx
	subq	%rcx, %rdx
	sarq	%rdx
.Ltmp670:
	movq	%rax, %rdi
	movq	%rcx, %rsi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm
.Ltmp671:
	jmp	.LBB890_1
.LBB890_1:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB890_2:
	.cfi_def_cfa %rbp, 16
.Ltmp672:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -16(%rbp)
	movl	%edx, -20(%rbp)
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev
# %bb.3:
	movq	-16(%rbp), %rdi
	callq	__clang_call_terminate
.Lfunc_end890:
	.size	_ZNSt12_Vector_baseItSaItEED2Ev, .Lfunc_end890-_ZNSt12_Vector_baseItSaItEED2Ev
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table890:
.Lexception66:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase51-.Lttbaseref51
.Lttbaseref51:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end66-.Lcst_begin66
.Lcst_begin66:
	.uleb128 .Ltmp670-.Lfunc_begin66 # >> Call Site 1 <<
	.uleb128 .Ltmp671-.Ltmp670      #   Call between .Ltmp670 and .Ltmp671
	.uleb128 .Ltmp672-.Lfunc_begin66 #     jumps to .Ltmp672
	.byte	1                       #   On action: 1
.Lcst_end66:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase51:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt8_DestroyIPtEvT_S1_,"axG",@progbits,_ZSt8_DestroyIPtEvT_S1_,comdat
	.weak	_ZSt8_DestroyIPtEvT_S1_ # -- Begin function _ZSt8_DestroyIPtEvT_S1_
	.p2align	4, 0x90
	.type	_ZSt8_DestroyIPtEvT_S1_,@function
_ZSt8_DestroyIPtEvT_S1_:                # @_ZSt8_DestroyIPtEvT_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	callq	_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end891:
	.size	_ZSt8_DestroyIPtEvT_S1_, .Lfunc_end891-_ZSt8_DestroyIPtEvT_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_,"axG",@progbits,_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_,comdat
	.weak	_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_ # -- Begin function _ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_,@function
_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_: # @_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end892:
	.size	_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_, .Lfunc_end892-_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm,"axG",@progbits,_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm,comdat
	.weak	_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm # -- Begin function _ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm,@function
_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm: # @_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB893_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm
.LBB893_2:
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end893:
	.size	_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm, .Lfunc_end893-_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev,"axG",@progbits,_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev,comdat
	.weak	_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev # -- Begin function _ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev,@function
_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev: # @_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNSaItED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end894:
	.size	_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev, .Lfunc_end894-_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm,"axG",@progbits,_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm,comdat
	.weak	_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm # -- Begin function _ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm,@function
_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm: # @_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end895:
	.size	_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm, .Lfunc_end895-_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm # -- Begin function _ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm,@function
_ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm: # @_ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZdlPv@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end896:
	.size	_ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm, .Lfunc_end896-_ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSaItED2Ev,"axG",@progbits,_ZNSaItED2Ev,comdat
	.weak	_ZNSaItED2Ev            # -- Begin function _ZNSaItED2Ev
	.p2align	4, 0x90
	.type	_ZNSaItED2Ev,@function
_ZNSaItED2Ev:                           # @_ZNSaItED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorItED2Ev
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end897:
	.size	_ZNSaItED2Ev, .Lfunc_end897-_ZNSaItED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorItED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorItED2Ev,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorItED2Ev # -- Begin function _ZN9__gnu_cxx13new_allocatorItED2Ev
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorItED2Ev,@function
_ZN9__gnu_cxx13new_allocatorItED2Ev:    # @_ZN9__gnu_cxx13new_allocatorItED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end898:
	.size	_ZN9__gnu_cxx13new_allocatorItED2Ev, .Lfunc_end898-_ZN9__gnu_cxx13new_allocatorItED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB899_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$20, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB899_3
.LBB899_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.LBB899_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end899:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_, .Lfunc_end899-_ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rax
	leaq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	(%rax,%rcx,4), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$20, %rax
	movq	%rax, -88(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-152(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$2, %rdx
	movabsq	$-3689348814741910323, %rsi # imm = 0xCCCCCCCCCCCCCCCD
	imulq	%rsi, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rdx,%rdx,4), %rdx
	leaq	(%rax,%rdx,4), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB900_2
# %bb.1:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB900_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end900:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .Lfunc_end900-_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB901_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB901_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end901:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv, .Lfunc_end901-_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB902_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB902_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB902_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB902_5
.LBB902_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB902_6
.LBB902_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB902_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB902_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB902_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end902:
	.size	_ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc, .Lfunc_end902-_ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"axG",@progbits,_ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,comdat
	.weak	_ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ # -- Begin function _ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,@function
_ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_: # @_ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$20, %ecx
	idivq	%rcx
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end903:
	.size	_ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, .Lfunc_end903-_ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB904_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB904_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end904:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv, .Lfunc_end904-_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end905:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end905-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_,@function
_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_: # @_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end906:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_, .Lfunc_end906-_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end907:
	.size	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, .Lfunc_end907-_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
.Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception67
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$192, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -112(%rbp)        # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	(%rax,%rcx,8), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -120(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE
.Ltmp673:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
.Ltmp674:
	jmp	.LBB908_1
.LBB908_1:
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	leaq	-16(%rbp), %rax
	movq	%rdi, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rax, %rdi
	movq	%rsi, -136(%rbp)        # 8-byte Spill
	movq	%rdx, -144(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-128(%rbp), %rdi        # 8-byte Reload
	movq	-136(%rbp), %rsi        # 8-byte Reload
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$40, %rax
	movq	%rax, -88(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -152(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -160(%rbp)        # 8-byte Spill
	movq	%rdx, -168(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-152(%rbp), %rdi        # 8-byte Reload
	movq	-160(%rbp), %rsi        # 8-byte Reload
	movq	-168(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	jmp	.LBB908_11
.LBB908_2:
.Ltmp675:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -96(%rbp)
	movl	%edx, -100(%rbp)
# %bb.3:
	movq	-96(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	cmpq	$0, -88(%rbp)
	jne	.LBB908_5
# %bb.4:
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-80(%rbp), %rcx
	imulq	$40, -72(%rbp), %rdx
	addq	%rdx, %rcx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_
	jmp	.LBB908_8
.LBB908_5:
	movq	-80(%rbp), %rdi
	movq	-88(%rbp), %rsi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -176(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -184(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
.Ltmp676:
	movq	-176(%rbp), %rdi        # 8-byte Reload
	movq	-184(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E
.Ltmp677:
	jmp	.LBB908_6
.LBB908_6:
	jmp	.LBB908_8
.LBB908_7:
.Ltmp682:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -96(%rbp)
	movl	%edx, -100(%rbp)
.Ltmp683:
	callq	__cxa_end_catch@PLT
.Ltmp684:
	jmp	.LBB908_10
.LBB908_8:
	movq	-80(%rbp), %rsi
	movq	-48(%rbp), %rdx
.Ltmp678:
	movq	-112(%rbp), %rdi        # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m
.Ltmp679:
	jmp	.LBB908_9
.LBB908_9:
.Ltmp680:
	callq	__cxa_rethrow@PLT
.Ltmp681:
	jmp	.LBB908_15
.LBB908_10:
	jmp	.LBB908_13
.LBB908_11:
	movq	-56(%rbp), %rax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	movabsq	$-3689348814741910323, %rsi # imm = 0xCCCCCCCCCCCCCCCD
	imulq	%rsi, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m
	movq	-80(%rbp), %rax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rdx,%rdx,4), %rdx
	leaq	(%rax,%rdx,8), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB908_16
# %bb.12:
	addq	$192, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB908_13:
	.cfi_def_cfa %rbp, 16
	movq	-96(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB908_14:
.Ltmp685:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -188(%rbp)        # 4-byte Spill
	callq	__clang_call_terminate
.LBB908_15:
.LBB908_16:
	callq	__stack_chk_fail@PLT
.Lfunc_end908:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .Lfunc_end908-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table908:
.Lexception67:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase52-.Lttbaseref52
.Lttbaseref52:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end67-.Lcst_begin67
.Lcst_begin67:
	.uleb128 .Lfunc_begin67-.Lfunc_begin67 # >> Call Site 1 <<
	.uleb128 .Ltmp673-.Lfunc_begin67 #   Call between .Lfunc_begin67 and .Ltmp673
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp673-.Lfunc_begin67 # >> Call Site 2 <<
	.uleb128 .Ltmp674-.Ltmp673      #   Call between .Ltmp673 and .Ltmp674
	.uleb128 .Ltmp675-.Lfunc_begin67 #     jumps to .Ltmp675
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp674-.Lfunc_begin67 # >> Call Site 3 <<
	.uleb128 .Ltmp676-.Ltmp674      #   Call between .Ltmp674 and .Ltmp676
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp676-.Lfunc_begin67 # >> Call Site 4 <<
	.uleb128 .Ltmp677-.Ltmp676      #   Call between .Ltmp676 and .Ltmp677
	.uleb128 .Ltmp682-.Lfunc_begin67 #     jumps to .Ltmp682
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp683-.Lfunc_begin67 # >> Call Site 5 <<
	.uleb128 .Ltmp684-.Ltmp683      #   Call between .Ltmp683 and .Ltmp684
	.uleb128 .Ltmp685-.Lfunc_begin67 #     jumps to .Ltmp685
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp678-.Lfunc_begin67 # >> Call Site 6 <<
	.uleb128 .Ltmp681-.Ltmp678      #   Call between .Ltmp678 and .Ltmp681
	.uleb128 .Ltmp682-.Lfunc_begin67 #     jumps to .Ltmp682
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp681-.Lfunc_begin67 # >> Call Site 7 <<
	.uleb128 .Lfunc_end908-.Ltmp681 #   Call between .Ltmp681 and .Lfunc_end908
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end67:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase52:
	.p2align	2
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB909_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB909_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end909:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv, .Lfunc_end909-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf11VertexArrayC2ERKS0_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end910:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_, .Lfunc_end910-_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE # -- Begin function _ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE: # @_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end911:
	.size	_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end911-_ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf11VertexArrayC2ERKS0_,"axG",@progbits,_ZN2sf11VertexArrayC2ERKS0_,comdat
	.weak	_ZN2sf11VertexArrayC2ERKS0_ # -- Begin function _ZN2sf11VertexArrayC2ERKS0_
	.p2align	4, 0x90
	.type	_ZN2sf11VertexArrayC2ERKS0_,@function
_ZN2sf11VertexArrayC2ERKS0_:            # @_ZN2sf11VertexArrayC2ERKS0_
.Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception68
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZN2sf8DrawableC2ERKS0_
	movq	_ZTVN2sf11VertexArrayE@GOTPCREL(%rip), %rax
	addq	$16, %rax
	movq	-40(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$8, %rcx
	movq	-16(%rbp), %rax
	addq	$8, %rax
.Ltmp686:
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_
.Ltmp687:
	jmp	.LBB912_1
.LBB912_1:
	movq	-16(%rbp), %rax
	movl	32(%rax), %ecx
	movq	-40(%rbp), %rax         # 8-byte Reload
	movl	%ecx, 32(%rax)
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB912_2:
	.cfi_def_cfa %rbp, 16
.Ltmp688:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -24(%rbp)
	movl	%edx, -28(%rbp)
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZN2sf8DrawableD2Ev
# %bb.3:
	movq	-24(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end912:
	.size	_ZN2sf11VertexArrayC2ERKS0_, .Lfunc_end912-_ZN2sf11VertexArrayC2ERKS0_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table912:
.Lexception68:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end68-.Lcst_begin68
.Lcst_begin68:
	.uleb128 .Ltmp686-.Lfunc_begin68 # >> Call Site 1 <<
	.uleb128 .Ltmp687-.Ltmp686      #   Call between .Ltmp686 and .Ltmp687
	.uleb128 .Ltmp688-.Lfunc_begin68 #     jumps to .Ltmp688
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp687-.Lfunc_begin68 # >> Call Site 2 <<
	.uleb128 .Lfunc_end912-.Ltmp687 #   Call between .Ltmp687 and .Lfunc_end912
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end68:
	.p2align	2
                                        # -- End function
	.section	.text._ZN2sf8DrawableC2ERKS0_,"axG",@progbits,_ZN2sf8DrawableC2ERKS0_,comdat
	.weak	_ZN2sf8DrawableC2ERKS0_ # -- Begin function _ZN2sf8DrawableC2ERKS0_
	.p2align	4, 0x90
	.type	_ZN2sf8DrawableC2ERKS0_,@function
_ZN2sf8DrawableC2ERKS0_:                # @_ZN2sf8DrawableC2ERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	leaq	_ZTVN2sf8DrawableE(%rip), %rax
	addq	$16, %rax
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	%rax, (%rcx)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end913:
	.size	_ZN2sf8DrawableC2ERKS0_, .Lfunc_end913-_ZN2sf8DrawableC2ERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_
.Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception69
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	%rsi, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	-32(%rbp), %rdi
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	movq	-32(%rbp), %rdi
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	leaq	-16(%rbp), %rcx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	movq	%rcx, -88(%rbp)         # 8-byte Spill
	callq	_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_
.Ltmp689:
	movq	-72(%rbp), %rdi         # 8-byte Reload
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movq	-88(%rbp), %rdx         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_
.Ltmp690:
	jmp	.LBB914_1
.LBB914_1:
	leaq	-16(%rbp), %rdi
	callq	_ZNSaIN2sf6VertexEED2Ev
	movq	-32(%rbp), %rdi
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	movq	%rax, -56(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv
	movq	%rax, -64(%rbp)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdx
	movq	%rax, %rdi
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-56(%rbp), %rdi
	movq	-64(%rbp), %rsi
.Ltmp692:
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
.Ltmp693:
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jmp	.LBB914_2
.LBB914_2:
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movq	%rcx, 8(%rax)
	movq	%fs:40, %rdx
	movq	-8(%rbp), %rsi
	cmpq	%rsi, %rdx
	jne	.LBB914_7
# %bb.3:
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB914_4:
	.cfi_def_cfa %rbp, 16
.Ltmp691:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
	leaq	-16(%rbp), %rdi
	callq	_ZNSaIN2sf6VertexEED2Ev
	jmp	.LBB914_6
.LBB914_5:
.Ltmp694:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -40(%rbp)
	movl	%edx, -44(%rbp)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movq	%rax, %rdi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EED2Ev
.LBB914_6:
	movq	-40(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB914_7:
	callq	__stack_chk_fail@PLT
.Lfunc_end914:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_, .Lfunc_end914-_ZNSt6vectorIN2sf6VertexESaIS1_EEC2ERKS3_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table914:
.Lexception69:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end69-.Lcst_begin69
.Lcst_begin69:
	.uleb128 .Lfunc_begin69-.Lfunc_begin69 # >> Call Site 1 <<
	.uleb128 .Ltmp689-.Lfunc_begin69 #   Call between .Lfunc_begin69 and .Ltmp689
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp689-.Lfunc_begin69 # >> Call Site 2 <<
	.uleb128 .Ltmp690-.Ltmp689      #   Call between .Ltmp689 and .Ltmp690
	.uleb128 .Ltmp691-.Lfunc_begin69 #     jumps to .Ltmp691
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp692-.Lfunc_begin69 # >> Call Site 3 <<
	.uleb128 .Ltmp693-.Ltmp692      #   Call between .Ltmp692 and .Ltmp693
	.uleb128 .Ltmp694-.Lfunc_begin69 #     jumps to .Ltmp694
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp693-.Lfunc_begin69 # >> Call Site 4 <<
	.uleb128 .Lfunc_end914-.Ltmp693 #   Call between .Ltmp693 and .Lfunc_end914
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end69:
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_,"axG",@progbits,_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_,comdat
	.weak	_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_ # -- Begin function _ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_,@function
_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_: # @_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rdi, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end915:
	.size	_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_, .Lfunc_end915-_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_ # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_
.Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception70
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implC2ERKS2_
	movq	-16(%rbp), %rsi
.Ltmp695:
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm
.Ltmp696:
	jmp	.LBB916_1
.LBB916_1:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB916_2:
	.cfi_def_cfa %rbp, 16
.Ltmp697:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -32(%rbp)
	movl	%edx, -36(%rbp)
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE12_Vector_implD2Ev
# %bb.3:
	movq	-32(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end916:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_, .Lfunc_end916-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EEC2EmRKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table916:
.Lexception70:
	.byte	255                     # @LPStart Encoding = omit
	.byte	255                     # @TType Encoding = omit
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end70-.Lcst_begin70
.Lcst_begin70:
	.uleb128 .Ltmp695-.Lfunc_begin70 # >> Call Site 1 <<
	.uleb128 .Ltmp696-.Ltmp695      #   Call between .Ltmp695 and .Ltmp696
	.uleb128 .Ltmp697-.Lfunc_begin70 #     jumps to .Ltmp697
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp696-.Lfunc_begin70 # >> Call Site 2 <<
	.uleb128 .Lfunc_end916-.Ltmp696 #   Call between .Ltmp696 and .Lfunc_end916
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end70:
	.p2align	2
                                        # -- End function
	.section	.text._ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E,"axG",@progbits,_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E,comdat
	.weak	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E # -- Begin function _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
	.p2align	4, 0x90
	.type	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E,@function
_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E: # @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -48(%rbp)
	movq	%rcx, -56(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jne	.LBB917_2
# %bb.1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB917_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end917:
	.size	_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E, .Lfunc_end917-_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv,"axG",@progbits,_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv,comdat
	.weak	_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv # -- Begin function _ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv,@function
_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv: # @_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB918_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB918_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end918:
	.size	_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv, .Lfunc_end918-_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv,"axG",@progbits,_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv,comdat
	.weak	_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv # -- Begin function _ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv,@function
_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv: # @_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB919_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB919_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end919:
	.size	_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv, .Lfunc_end919-_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_,@function
_ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_: # @_ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, %rax
	movq	%rdi, %rcx
	movq	%rcx, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rsi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSaIN2sf6VertexEEC2ERKS1_
	movq	-24(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end920:
	.size	_ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_, .Lfunc_end920-_ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm,"axG",@progbits,_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm,comdat
	.weak	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm # -- Begin function _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm,@function
_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm: # @_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	(%rcx), %rax
	movq	%rax, 8(%rcx)
	movq	(%rcx), %rax
	imulq	$20, -16(%rbp), %rdx
	addq	%rdx, %rax
	movq	%rax, 16(%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end921:
	.size	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm, .Lfunc_end921-_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_,"axG",@progbits,_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_,comdat
	.weak	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ # -- Begin function _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	.p2align	4, 0x90
	.type	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_,@function
_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_: # @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -48(%rbp)
	movb	$1, -49(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
	movq	-48(%rbp), %rdx
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
	callq	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -64(%rbp)         # 8-byte Spill
	jne	.LBB922_2
# %bb.1:
	movq	-64(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB922_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end922:
	.size	_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, .Lfunc_end922-_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,"axG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,comdat
	.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ # -- Begin function _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_,@function
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_: # @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
.Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception71
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$96, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, -40(%rbp)
.LBB923_1:                              # =>This Inner Loop Header: Depth=1
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	testb	$1, %al
	jne	.LBB923_2
	jmp	.LBB923_8
.LBB923_2:                              #   in Loop: Header=BB923_1 Depth=1
	movq	-40(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf6VertexEEPT_RS2_
	leaq	-16(%rbp), %rdi
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv
.Ltmp698:
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_
.Ltmp699:
	jmp	.LBB923_3
.LBB923_3:                              #   in Loop: Header=BB923_1 Depth=1
	jmp	.LBB923_4
.LBB923_4:                              #   in Loop: Header=BB923_1 Depth=1
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv
	movq	-40(%rbp), %rcx
	addq	$20, %rcx
	movq	%rcx, -40(%rbp)
	jmp	.LBB923_1
.LBB923_5:
.Ltmp700:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -48(%rbp)
	movl	%edx, -52(%rbp)
# %bb.6:
	movq	-48(%rbp), %rdi
	callq	__cxa_begin_catch@PLT
	movq	-32(%rbp), %rdi
	movq	-40(%rbp), %rsi
.Ltmp701:
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZSt8_DestroyIPN2sf6VertexEEvT_S3_
.Ltmp702:
	jmp	.LBB923_7
.LBB923_7:
.Ltmp703:
	callq	__cxa_rethrow@PLT
.Ltmp704:
	jmp	.LBB923_14
.LBB923_8:
	movq	-40(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -80(%rbp)         # 8-byte Spill
	jne	.LBB923_15
# %bb.9:
	movq	-80(%rbp), %rax         # 8-byte Reload
	addq	$96, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB923_10:
	.cfi_def_cfa %rbp, 16
.Ltmp705:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, -48(%rbp)
	movl	%edx, -52(%rbp)
.Ltmp706:
	callq	__cxa_end_catch@PLT
.Ltmp707:
	jmp	.LBB923_11
.LBB923_11:
	jmp	.LBB923_12
.LBB923_12:
	movq	-48(%rbp), %rdi
	callq	_Unwind_Resume@PLT
.LBB923_13:
.Ltmp708:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -84(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB923_14:
.LBB923_15:
	callq	__stack_chk_fail@PLT
.Lfunc_end923:
	.size	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_, .Lfunc_end923-_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table923:
.Lexception71:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase53-.Lttbaseref53
.Lttbaseref53:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end71-.Lcst_begin71
.Lcst_begin71:
	.uleb128 .Ltmp698-.Lfunc_begin71 # >> Call Site 1 <<
	.uleb128 .Ltmp699-.Ltmp698      #   Call between .Ltmp698 and .Ltmp699
	.uleb128 .Ltmp700-.Lfunc_begin71 #     jumps to .Ltmp700
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp699-.Lfunc_begin71 # >> Call Site 2 <<
	.uleb128 .Ltmp701-.Ltmp699      #   Call between .Ltmp699 and .Ltmp701
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp701-.Lfunc_begin71 # >> Call Site 3 <<
	.uleb128 .Ltmp704-.Ltmp701      #   Call between .Ltmp701 and .Ltmp704
	.uleb128 .Ltmp705-.Lfunc_begin71 #     jumps to .Ltmp705
	.byte	0                       #   On action: cleanup
	.uleb128 .Ltmp706-.Lfunc_begin71 # >> Call Site 4 <<
	.uleb128 .Ltmp707-.Ltmp706      #   Call between .Ltmp706 and .Ltmp707
	.uleb128 .Ltmp708-.Lfunc_begin71 #     jumps to .Ltmp708
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp707-.Lfunc_begin71 # >> Call Site 5 <<
	.uleb128 .Lfunc_end923-.Ltmp707 #   Call between .Ltmp707 and .Lfunc_end923
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end71:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase53:
	.p2align	2
                                        # -- End function
	.section	.text._ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_,"axG",@progbits,_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_,comdat
	.weak	_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ # -- Begin function _ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_,@function
_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_: # @_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	movq	-24(%rbp), %rcx         # 8-byte Reload
	cmpq	(%rax), %rcx
	setne	%dl
	andb	$1, %dl
	movzbl	%dl, %eax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end924:
	.size	_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_, .Lfunc_end924-_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_,"axG",@progbits,_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_,comdat
	.weak	_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_ # -- Begin function _ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_,@function
_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_: # @_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	(%rax), %rcx
	movq	-24(%rbp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movl	16(%rax), %r8d
	movl	%r8d, 16(%rdx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end925:
	.size	_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_, .Lfunc_end925-_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end926:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv, .Lfunc_end926-_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rcx
	addq	$20, %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end927:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv, .Lfunc_end927-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end928:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end928-_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE # -- Begin function _ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE: # @_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end929:
	.size	_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end929-_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_,@function
_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_: # @_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end930:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_, .Lfunc_end930-_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB931_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB931_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB931_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB931_5
.LBB931_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB931_6
.LBB931_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB931_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB931_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB931_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end931:
	.size	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc, .Lfunc_end931-_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,"axG",@progbits,_ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,comdat
	.weak	_ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ # -- Begin function _ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_,@function
_ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_: # @_ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$40, %ecx
	idivq	%rcx
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end932:
	.size	_ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_, .Lfunc_end932-_ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB933_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB933_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end933:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv, .Lfunc_end933-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB934_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB934_3
.LBB934_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB934_3
.LBB934_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end934:
	.size	_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm, .Lfunc_end934-_ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_ # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end935:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_, .Lfunc_end935-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end936:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv, .Lfunc_end936-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_,@function
_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_: # @_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end937:
	.size	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_, .Lfunc_end937-_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv,@function
_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv: # @_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end938:
	.size	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv, .Lfunc_end938-_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv # -- Begin function _ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv,@function
_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv: # @_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	movq	%rcx, %rax
	cqto
	movl	$40, %ecx
	idivq	%rcx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end939:
	.size	_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv, .Lfunc_end939-_ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_ # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_
.Lfunc_begin72:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception72
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$230584300921369395, %rax # imm = 0x333333333333333
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_
	movq	%rax, -24(%rbp)
.Ltmp709:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp710:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB940_1
.LBB940_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB940_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB940_3:
	.cfi_def_cfa %rbp, 16
.Ltmp711:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB940_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end940:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_, .Lfunc_end940-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table940:
.Lexception72:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase54-.Lttbaseref54
.Lttbaseref54:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end72-.Lcst_begin72
.Lcst_begin72:
	.uleb128 .Ltmp709-.Lfunc_begin72 # >> Call Site 1 <<
	.uleb128 .Ltmp710-.Ltmp709      #   Call between .Ltmp709 and .Ltmp710
	.uleb128 .Ltmp711-.Lfunc_begin72 #     jumps to .Ltmp711
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp710-.Lfunc_begin72 # >> Call Site 2 <<
	.uleb128 .Lfunc_end940-.Ltmp710 #   Call between .Ltmp710 and .Lfunc_end940
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end72:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase54:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end941:
	.size	_ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv, .Lfunc_end941-_ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_,@function
_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_: # @_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end942:
	.size	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_, .Lfunc_end942-_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end943:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv, .Lfunc_end943-_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$230584300921369395, %rax # imm = 0x333333333333333
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end944:
	.size	_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv, .Lfunc_end944-_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_,@function
_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_: # @_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end945:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_, .Lfunc_end945-_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m # -- Begin function _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m,@function
_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m: # @_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end946:
	.size	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m, .Lfunc_end946-_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB947_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB947_2:
	imulq	$40, -16(%rbp), %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end947:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv, .Lfunc_end947-_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE: # @_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end948:
	.size	_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE, .Lfunc_end948-_ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end949:
	.size	_ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end949-_ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_,"axG",@progbits,_ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_,comdat
	.weak	_ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_ # -- Begin function _ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	.p2align	4, 0x90
	.type	_ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_,@function
_ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_: # @_ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -40(%rbp)
.LBB950_1:                              # =>This Inner Loop Header: Depth=1
	movq	-8(%rbp), %rax
	cmpq	-16(%rbp), %rax
	je	.LBB950_4
# %bb.2:                                #   in Loop: Header=BB950_1 Depth=1
	movq	-40(%rbp), %rdi
	callq	_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_
	movq	-8(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_
	movq	-32(%rbp), %rdx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_
# %bb.3:                                #   in Loop: Header=BB950_1 Depth=1
	movq	-8(%rbp), %rax
	addq	$40, %rax
	movq	%rax, -8(%rbp)
	movq	-40(%rbp), %rax
	addq	$40, %rax
	movq	%rax, -40(%rbp)
	jmp	.LBB950_1
.LBB950_4:
	movq	-40(%rbp), %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end950:
	.size	_ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_, .Lfunc_end950-_ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_,"axG",@progbits,_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_,comdat
	.weak	_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_ # -- Begin function _ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_,@function
_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_: # @_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end951:
	.size	_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_, .Lfunc_end951-_ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_,"axG",@progbits,_ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_,comdat
	.weak	_ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_ # -- Begin function _ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_
	.p2align	4, 0x90
	.type	_ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_,@function
_ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_: # @_ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-24(%rbp), %rdi
	movq	-8(%rbp), %rsi
	movq	-16(%rbp), %rax
	movq	%rdi, -32(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	movq	-24(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end952:
	.size	_ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_, .Lfunc_end952-_ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end953:
	.size	_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_, .Lfunc_end953-_ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_,"axG",@progbits,_ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_,comdat
	.weak	_ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_ # -- Begin function _ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_
	.p2align	4, 0x90
	.type	_ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_,@function
_ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_: # @_ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end954:
	.size	_ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_, .Lfunc_end954-_ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rsi
	callq	_ZN2sf11VertexArrayC2EOS0_
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end955:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_, .Lfunc_end955-_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end956:
	.size	_ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end956-_ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN2sf11VertexArrayC2EOS0_,"axG",@progbits,_ZN2sf11VertexArrayC2EOS0_,comdat
	.weak	_ZN2sf11VertexArrayC2EOS0_ # -- Begin function _ZN2sf11VertexArrayC2EOS0_
	.p2align	4, 0x90
	.type	_ZN2sf11VertexArrayC2EOS0_,@function
_ZN2sf11VertexArrayC2EOS0_:             # @_ZN2sf11VertexArrayC2EOS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rcx
	movq	-16(%rbp), %rdx
	movq	%rcx, %rdi
	movq	%rdx, %rsi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZN2sf8DrawableC2ERKS0_
	movq	_ZTVN2sf11VertexArrayE@GOTPCREL(%rip), %rax
	addq	$16, %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$8, %rcx
	movq	-16(%rbp), %rax
	addq	$8, %rax
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EEC2EOS3_
	movq	-16(%rbp), %rax
	movl	32(%rax), %r8d
	movq	-24(%rbp), %rax         # 8-byte Reload
	movl	%r8d, 32(%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end957:
	.size	_ZN2sf11VertexArrayC2EOS0_, .Lfunc_end957-_ZN2sf11VertexArrayC2EOS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_: # @_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rax
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*(%rcx)
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end958:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_, .Lfunc_end958-_ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_ # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_: # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB959_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB959_3
.LBB959_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
.LBB959_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end959:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_, .Lfunc_end959-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_,"axG",@progbits,_ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_,comdat
	.weak	_ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_ # -- Begin function _ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_
	.p2align	4, 0x90
	.type	_ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_,@function
_ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_: # @_ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end960:
	.size	_ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_, .Lfunc_end960-_ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end961:
	.size	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_, .Lfunc_end961-_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE,"axG",@progbits,_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE,comdat
	.weak	_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE # -- Begin function _ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE,@function
_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE: # @_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end962:
	.size	_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE, .Lfunc_end962-_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_ # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_: # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rax
	leaq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -88(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-152(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rax,%rdx,8), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB963_2
# %bb.1:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB963_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end963:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_, .Lfunc_end963-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv: # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB964_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB964_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end964:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv, .Lfunc_end964-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end965:
	.size	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_, .Lfunc_end965-_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB966_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB966_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB966_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB966_5
.LBB966_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB966_6
.LBB966_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB966_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB966_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB966_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end966:
	.size	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc, .Lfunc_end966-_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,"axG",@progbits,_ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,comdat
	.weak	_ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_ # -- Begin function _ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,@function
_ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_: # @_ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end967:
	.size	_ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_, .Lfunc_end967-_ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv: # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB968_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB968_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end968:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv, .Lfunc_end968-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB969_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB969_3
.LBB969_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB969_3
.LBB969_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end969:
	.size	_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm, .Lfunc_end969-_ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_ # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_: # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end970:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_, .Lfunc_end970-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end971:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv, .Lfunc_end971-_ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv,@function
_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv: # @_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end972:
	.size	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv, .Lfunc_end972-_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv,"axG",@progbits,_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv,comdat
	.weak	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv # -- Begin function _ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv,@function
_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv: # @_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	movq	(%rax), %rax
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end973:
	.size	_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv, .Lfunc_end973-_ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_ # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_: # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_
.Lfunc_begin73:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception73
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_
	movq	%rax, -24(%rbp)
.Ltmp712:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp713:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB974_1
.LBB974_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB974_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB974_3:
	.cfi_def_cfa %rbp, 16
.Ltmp714:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB974_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end974:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_, .Lfunc_end974-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table974:
.Lexception73:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase55-.Lttbaseref55
.Lttbaseref55:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end73-.Lcst_begin73
.Lcst_begin73:
	.uleb128 .Ltmp712-.Lfunc_begin73 # >> Call Site 1 <<
	.uleb128 .Ltmp713-.Ltmp712      #   Call between .Ltmp712 and .Ltmp713
	.uleb128 .Ltmp714-.Lfunc_begin73 #     jumps to .Ltmp714
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp713-.Lfunc_begin73 # >> Call Site 2 <<
	.uleb128 .Lfunc_end974-.Ltmp713 #   Call between .Ltmp713 and .Lfunc_end974
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end73:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase55:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end975:
	.size	_ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv, .Lfunc_end975-_ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_,"axG",@progbits,_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_,comdat
	.weak	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_ # -- Begin function _ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_,@function
_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_: # @_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end976:
	.size	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_, .Lfunc_end976-_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end977:
	.size	_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv, .Lfunc_end977-_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end978:
	.size	_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv, .Lfunc_end978-_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_: # @_ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end979:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_, .Lfunc_end979-_ZN9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEC2ERKS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m,"axG",@progbits,_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m,comdat
	.weak	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m # -- Begin function _ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m,@function
_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m: # @_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end980:
	.size	_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m, .Lfunc_end980-_ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB981_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB981_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end981:
	.size	_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv, .Lfunc_end981-_ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE: # @_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end982:
	.size	_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE, .Lfunc_end982-_ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_,"axG",@progbits,_ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_,comdat
	.weak	_ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_ # -- Begin function _ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_
	.p2align	4, 0x90
	.type	_ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_,@function
_ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_: # @_ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end983:
	.size	_ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_, .Lfunc_end983-_ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E,"axG",@progbits,_ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E,comdat
	.weak	_ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E # -- Begin function _ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E,@function
_ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E: # @_ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jle	.LBB984_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-40(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove@PLT
.LBB984_2:
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end984:
	.size	_ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E, .Lfunc_end984-_ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_,"axG",@progbits,_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_,comdat
	.weak	_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_ # -- Begin function _ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_,@function
_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_: # @_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end985:
	.size	_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_, .Lfunc_end985-_ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_ # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	8(%rax), %rcx
	cmpq	16(%rax), %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	je	.LBB986_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	movq	%rsi, -48(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_
	movq	-32(%rbp), %rax         # 8-byte Reload
	movq	8(%rax), %rcx
	addq	$8, %rcx
	movq	%rcx, 8(%rax)
	jmp	.LBB986_3
.LBB986_2:
	movq	-32(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv
	movq	%rax, -24(%rbp)
	movq	-16(%rbp), %rdi
	callq	_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
.LBB986_3:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end986:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_, .Lfunc_end986-_ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_,"axG",@progbits,_ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_,comdat
	.weak	_ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_ # -- Begin function _ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_
	.p2align	4, 0x90
	.type	_ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_,@function
_ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_: # @_ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end987:
	.size	_ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_, .Lfunc_end987-_ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end988:
	.size	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_, .Lfunc_end988-_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE,"axG",@progbits,_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE,comdat
	.weak	_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE # -- Begin function _ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE,@function
_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE: # @_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end989:
	.size	_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE, .Lfunc_end989-_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_ # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rax
	leaq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rax,%rcx,8), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$8, %rax
	movq	%rax, -88(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-152(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$3, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rax,%rdx,8), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB990_2
# %bb.1:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB990_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end990:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_, .Lfunc_end990-_ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB991_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB991_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end991:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv, .Lfunc_end991-_ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	(%rax), %rax
	movq	-32(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end992:
	.size	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_, .Lfunc_end992-_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc,@function
_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc: # @_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB993_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB993_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB993_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB993_5
.LBB993_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB993_6
.LBB993_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB993_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB993_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB993_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end993:
	.size	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc, .Lfunc_end993-_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,"axG",@progbits,_ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,comdat
	.weak	_ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_ # -- Begin function _ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_,@function
_ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_: # @_ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$3, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end994:
	.size	_ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_, .Lfunc_end994-_ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB995_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB995_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end995:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv, .Lfunc_end995-_ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm,@function
_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm: # @_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB996_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB996_3
.LBB996_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB996_3
.LBB996_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end996:
	.size	_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm, .Lfunc_end996-_ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_ # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end997:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_, .Lfunc_end997-_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end998:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv, .Lfunc_end998-_ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv # -- Begin function _ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv,@function
_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv: # @_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end999:
	.size	_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv, .Lfunc_end999-_ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_ # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_
.Lfunc_begin74:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception74
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_
	movq	%rax, -24(%rbp)
.Ltmp715:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp716:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB1000_1
.LBB1000_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB1000_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1000_3:
	.cfi_def_cfa %rbp, 16
.Ltmp717:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB1000_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end1000:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_, .Lfunc_end1000-_ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table1000:
.Lexception74:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase56-.Lttbaseref56
.Lttbaseref56:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end74-.Lcst_begin74
.Lcst_begin74:
	.uleb128 .Ltmp715-.Lfunc_begin74 # >> Call Site 1 <<
	.uleb128 .Ltmp716-.Ltmp715      #   Call between .Ltmp715 and .Ltmp716
	.uleb128 .Ltmp717-.Lfunc_begin74 #     jumps to .Ltmp717
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp716-.Lfunc_begin74 # >> Call Site 2 <<
	.uleb128 .Lfunc_end1000-.Ltmp716 #   Call between .Ltmp716 and .Lfunc_end1000
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end74:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase56:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1001:
	.size	_ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv, .Lfunc_end1001-_ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_,"axG",@progbits,_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_,comdat
	.weak	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_ # -- Begin function _ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_,@function
_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_: # @_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1002:
	.size	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_, .Lfunc_end1002-_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1003:
	.size	_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv, .Lfunc_end1003-_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1004:
	.size	_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv, .Lfunc_end1004-_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_,@function
_ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_: # @_ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1005:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_, .Lfunc_end1005-_ZN9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEC2ERKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m,"axG",@progbits,_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m,comdat
	.weak	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m # -- Begin function _ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m,@function
_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m: # @_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1006:
	.size	_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m, .Lfunc_end1006-_ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB1007_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB1007_2:
	movq	-16(%rbp), %rax
	shlq	$3, %rax
	movq	%rax, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1007:
	.size	_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv, .Lfunc_end1007-_ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE,@function
_ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE: # @_ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1008:
	.size	_ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE, .Lfunc_end1008-_ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_,"axG",@progbits,_ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_,comdat
	.weak	_ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_ # -- Begin function _ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_
	.p2align	4, 0x90
	.type	_ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_,@function
_ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_: # @_ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1009:
	.size	_ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_, .Lfunc_end1009-_ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E,"axG",@progbits,_ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E,comdat
	.weak	_ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E # -- Begin function _ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E,@function
_ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E: # @_ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$3, %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jle	.LBB1010_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-40(%rbp), %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove@PLT
.LBB1010_2:
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx
	shlq	$3, %rcx
	addq	%rcx, %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1010:
	.size	_ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E, .Lfunc_end1010-_ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPPKN2sf5ImageEET_S5_,"axG",@progbits,_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_,comdat
	.weak	_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_ # -- Begin function _ZSt12__niter_baseIPPKN2sf5ImageEET_S5_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_,@function
_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_: # @_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1011:
	.size	_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_, .Lfunc_end1011-_ZSt12__niter_baseIPPKN2sf5ImageEET_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	negq	%rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEC2ERKS3_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB1012_2
# %bb.1:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1012_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end1012:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl, .Lfunc_end1012-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	(%rax), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1013:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv, .Lfunc_end1013-_ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_: # @_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1014:
	.size	_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_, .Lfunc_end1014-_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_,"axG",@progbits,_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_,comdat
	.weak	_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_ # -- Begin function _ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_,@function
_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_: # @_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorItSaItEE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorItSaItEE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rax
	leaq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseItSaItEE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rax,%rcx,2), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$2, %rax
	movq	%rax, -88(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-152(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	%rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rax,%rdx,2), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB1015_2
# %bb.1:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1015_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end1015:
	.size	_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_, .Lfunc_end1015-_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEE3endEv,"axG",@progbits,_ZNSt6vectorItSaItEE3endEv,comdat
	.weak	_ZNSt6vectorItSaItEE3endEv # -- Begin function _ZNSt6vectorItSaItEE3endEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEE3endEv,@function
_ZNSt6vectorItSaItEE3endEv:             # @_ZNSt6vectorItSaItEE3endEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rax
	addq	$8, %rax
	leaq	-16(%rbp), %rdi
	movq	%rax, %rsi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB1016_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1016_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end1016:
	.size	_ZNSt6vectorItSaItEE3endEv, .Lfunc_end1016-_ZNSt6vectorItSaItEE3endEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE
	movw	(%rax), %cx
	movq	-32(%rbp), %rax         # 8-byte Reload
	movw	%cx, (%rax)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1017:
	.size	_ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_, .Lfunc_end1017-_ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE,comdat
	.weak	_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE # -- Begin function _ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE
	.p2align	4, 0x90
	.type	_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE,@function
_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE: # @_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1018:
	.size	_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE, .Lfunc_end1018-_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorItSaItEE12_M_check_lenEmPKc,"axG",@progbits,_ZNKSt6vectorItSaItEE12_M_check_lenEmPKc,comdat
	.weak	_ZNKSt6vectorItSaItEE12_M_check_lenEmPKc # -- Begin function _ZNKSt6vectorItSaItEE12_M_check_lenEmPKc
	.p2align	4, 0x90
	.type	_ZNKSt6vectorItSaItEE12_M_check_lenEmPKc,@function
_ZNKSt6vectorItSaItEE12_M_check_lenEmPKc: # @_ZNKSt6vectorItSaItEE12_M_check_lenEmPKc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$112, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, %rdi
	movq	%rax, -56(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorItSaItEE8max_sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -64(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorItSaItEE4sizeEv
	movq	-64(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	cmpq	-16(%rbp), %rcx
	jae	.LBB1019_2
# %bb.1:
	movq	-40(%rbp), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB1019_2:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorItSaItEE4sizeEv
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -72(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorItSaItEE4sizeEv
	movq	%rax, -24(%rbp)
	leaq	-24(%rbp), %rdi
	leaq	-16(%rbp), %rsi
	callq	_ZSt3maxImERKT_S2_S2_
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	(%rax), %rcx
	movq	%rcx, -48(%rbp)
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -80(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorItSaItEE4sizeEv
	movq	-80(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB1019_4
# %bb.3:
	movq	-48(%rbp), %rax
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rax, -88(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorItSaItEE8max_sizeEv
	movq	-88(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB1019_5
.LBB1019_4:
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt6vectorItSaItEE8max_sizeEv
	movq	%rax, -96(%rbp)         # 8-byte Spill
	jmp	.LBB1019_6
.LBB1019_5:
	movq	-48(%rbp), %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
.LBB1019_6:
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -104(%rbp)        # 8-byte Spill
	jne	.LBB1019_8
# %bb.7:
	movq	-104(%rbp), %rax        # 8-byte Reload
	addq	$112, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1019_8:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end1019:
	.size	_ZNKSt6vectorItSaItEE12_M_check_lenEmPKc, .Lfunc_end1019-_ZNKSt6vectorItSaItEE12_M_check_lenEmPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_,"axG",@progbits,_ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_,comdat
	.weak	_ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ # -- Begin function _ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_,@function
_ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_: # @_ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv
	movq	(%rax), %rax
	movq	-16(%rbp), %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv
	movq	(%rax), %rax
	movq	-24(%rbp), %rcx         # 8-byte Reload
	subq	%rax, %rcx
	sarq	$1, %rcx
	movq	%rcx, %rax
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1020:
	.size	_ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, .Lfunc_end1020-_ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEE5beginEv,"axG",@progbits,_ZNSt6vectorItSaItEE5beginEv,comdat
	.weak	_ZNSt6vectorItSaItEE5beginEv # -- Begin function _ZNSt6vectorItSaItEE5beginEv
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEE5beginEv,@function
_ZNSt6vectorItSaItEE5beginEv:           # @_ZNSt6vectorItSaItEE5beginEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -24(%rbp)
	movq	-24(%rbp), %rsi
	leaq	-16(%rbp), %rdi
	callq	_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_
	movq	-16(%rbp), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jne	.LBB1021_2
# %bb.1:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1021_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end1021:
	.size	_ZNSt6vectorItSaItEE5beginEv, .Lfunc_end1021-_ZNSt6vectorItSaItEE5beginEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12_Vector_baseItSaItEE11_M_allocateEm,"axG",@progbits,_ZNSt12_Vector_baseItSaItEE11_M_allocateEm,comdat
	.weak	_ZNSt12_Vector_baseItSaItEE11_M_allocateEm # -- Begin function _ZNSt12_Vector_baseItSaItEE11_M_allocateEm
	.p2align	4, 0x90
	.type	_ZNSt12_Vector_baseItSaItEE11_M_allocateEm,@function
_ZNSt12_Vector_baseItSaItEE11_M_allocateEm: # @_ZNSt12_Vector_baseItSaItEE11_M_allocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	cmpq	$0, -16(%rbp)
	movq	%rax, -24(%rbp)         # 8-byte Spill
	je	.LBB1022_2
# %bb.1:
	movq	-24(%rbp), %rax         # 8-byte Reload
	movq	-16(%rbp), %rsi
	movq	%rax, %rdi
	callq	_ZNSt16allocator_traitsISaItEE8allocateERS0_m
	movq	%rax, -32(%rbp)         # 8-byte Spill
	jmp	.LBB1022_3
.LBB1022_2:
	xorl	%eax, %eax
	movl	%eax, %ecx
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	jmp	.LBB1022_3
.LBB1022_3:
	movq	-32(%rbp), %rax         # 8-byte Reload
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1022:
	.size	_ZNSt12_Vector_baseItSaItEE11_M_allocateEm, .Lfunc_end1022-_ZNSt12_Vector_baseItSaItEE11_M_allocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_,"axG",@progbits,_ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_,comdat
	.weak	_ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_ # -- Begin function _ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_,@function
_ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_: # @_ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdx
	movq	-32(%rbp), %rcx
	callq	_ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1023:
	.size	_ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_, .Lfunc_end1023-_ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv,"axG",@progbits,_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv,comdat
	.weak	_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv # -- Begin function _ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv,@function
_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv: # @_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1024:
	.size	_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv, .Lfunc_end1024-_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorItSaItEE8max_sizeEv,"axG",@progbits,_ZNKSt6vectorItSaItEE8max_sizeEv,comdat
	.weak	_ZNKSt6vectorItSaItEE8max_sizeEv # -- Begin function _ZNKSt6vectorItSaItEE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNKSt6vectorItSaItEE8max_sizeEv,@function
_ZNKSt6vectorItSaItEE8max_sizeEv:       # @_ZNKSt6vectorItSaItEE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	movq	%rax, %rdi
	callq	_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1025:
	.size	_ZNKSt6vectorItSaItEE8max_sizeEv, .Lfunc_end1025-_ZNKSt6vectorItSaItEE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEE11_S_max_sizeERKS0_,"axG",@progbits,_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_,comdat
	.weak	_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_ # -- Begin function _ZNSt6vectorItSaItEE11_S_max_sizeERKS0_
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_,@function
_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_: # @_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_
.Lfunc_begin75:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception75
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movabsq	$4611686018427387903, %rax # imm = 0x3FFFFFFFFFFFFFFF
	movq	%rax, -16(%rbp)
	movq	-32(%rbp), %rdi
	callq	_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_
	movq	%rax, -24(%rbp)
.Ltmp718:
	leaq	-16(%rbp), %rdi
	leaq	-24(%rbp), %rsi
	callq	_ZSt3minImERKT_S2_S2_
.Ltmp719:
	movq	%rax, -40(%rbp)         # 8-byte Spill
	jmp	.LBB1026_1
.LBB1026_1:
	movq	-40(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	%fs:40, %rcx
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rcx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	jne	.LBB1026_4
# %bb.2:
	movq	-48(%rbp), %rax         # 8-byte Reload
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1026_3:
	.cfi_def_cfa %rbp, 16
.Ltmp720:
                                        # kill: def $edx killed $edx killed $rdx
	movq	%rax, %rdi
	movl	%edx, -52(%rbp)         # 4-byte Spill
	callq	__clang_call_terminate
.LBB1026_4:
	callq	__stack_chk_fail@PLT
.Lfunc_end1026:
	.size	_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_, .Lfunc_end1026-_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2
GCC_except_table1026:
.Lexception75:
	.byte	255                     # @LPStart Encoding = omit
	.byte	156                     # @TType Encoding = indirect pcrel sdata8
	.uleb128 .Lttbase57-.Lttbaseref57
.Lttbaseref57:
	.byte	1                       # Call site Encoding = uleb128
	.uleb128 .Lcst_end75-.Lcst_begin75
.Lcst_begin75:
	.uleb128 .Ltmp718-.Lfunc_begin75 # >> Call Site 1 <<
	.uleb128 .Ltmp719-.Ltmp718      #   Call between .Ltmp718 and .Ltmp719
	.uleb128 .Ltmp720-.Lfunc_begin75 #     jumps to .Ltmp720
	.byte	1                       #   On action: 1
	.uleb128 .Ltmp719-.Lfunc_begin75 # >> Call Site 2 <<
	.uleb128 .Lfunc_end1026-.Ltmp719 #   Call between .Ltmp719 and .Lfunc_end1026
	.byte	0                       #     has no landing pad
	.byte	0                       #   On action: cleanup
.Lcst_end75:
	.byte	1                       # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                       #   No further actions
	.p2align	2
                                        # >> Catch TypeInfos <<
	.quad	0                       # TypeInfo 1
.Lttbase57:
	.p2align	2
                                        # -- End function
	.section	.text._ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv,comdat
	.weak	_ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv # -- Begin function _ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	.p2align	4, 0x90
	.type	_ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv,@function
_ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv: # @_ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1027:
	.size	_ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv, .Lfunc_end1027-_ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaItEE8max_sizeERKS0_,"axG",@progbits,_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_,comdat
	.weak	_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_ # -- Begin function _ZNSt16allocator_traitsISaItEE8max_sizeERKS0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_,@function
_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_: # @_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1028:
	.size	_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_, .Lfunc_end1028-_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1029:
	.size	_ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv, .Lfunc_end1029-_ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv,comdat
	.weak	_ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv # -- Begin function _ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv
	.p2align	4, 0x90
	.type	_ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv,@function
_ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv: # @_ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movabsq	$4611686018427387903, %rax # imm = 0x3FFFFFFFFFFFFFFF
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1030:
	.size	_ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv, .Lfunc_end1030-_ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_,"axG",@progbits,_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_,comdat
	.weak	_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_ # -- Begin function _ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_,@function
_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_: # @_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	(%rcx), %rcx
	movq	%rcx, (%rax)
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1031:
	.size	_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_, .Lfunc_end1031-_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaItEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_traitsISaItEE8allocateERS0_m,comdat
	.weak	_ZNSt16allocator_traitsISaItEE8allocateERS0_m # -- Begin function _ZNSt16allocator_traitsISaItEE8allocateERS0_m
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaItEE8allocateERS0_m,@function
_ZNSt16allocator_traitsISaItEE8allocateERS0_m: # @_ZNSt16allocator_traitsISaItEE8allocateERS0_m
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	xorl	%eax, %eax
	movl	%eax, %edx
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rcx
	movq	-16(%rbp), %rsi
	movq	%rcx, %rdi
	callq	_ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv
	addq	$16, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1032:
	.size	_ZNSt16allocator_traitsISaItEE8allocateERS0_m, .Lfunc_end1032-_ZNSt16allocator_traitsISaItEE8allocateERS0_m
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv # -- Begin function _ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv,@function
_ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv: # @_ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rdi
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jbe	.LBB1033_2
# %bb.1:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB1033_2:
	movq	-16(%rbp), %rax
	shlq	$1, %rax
	movq	%rax, %rdi
	callq	_Znwm@PLT
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1033:
	.size	_ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv, .Lfunc_end1033-_ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE,"axG",@progbits,_ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE,comdat
	.weak	_ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE # -- Begin function _ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE,@function
_ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE: # @_ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -16(%rbp)
	movq	%rsi, -24(%rbp)
	movq	%rdx, -32(%rbp)
	movq	%rcx, -40(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movq	-32(%rbp), %rdx
	movq	-40(%rbp), %rcx
	callq	_ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1034:
	.size	_ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE, .Lfunc_end1034-_ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_,"axG",@progbits,_ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_,comdat
	.weak	_ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_ # -- Begin function _ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_
	.p2align	4, 0x90
	.type	_ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_,@function
_ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_: # @_ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-8(%rbp), %rdi
	callq	_ZSt12__niter_baseIPtET_S1_
	movq	-16(%rbp), %rdi
	movq	%rax, -40(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPtET_S1_
	movq	-24(%rbp), %rdi
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZSt12__niter_baseIPtET_S1_
	movq	-32(%rbp), %rcx
	movq	-40(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1035:
	.size	_ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_, .Lfunc_end1035-_ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E,"axG",@progbits,_ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E,comdat
	.weak	_ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E # -- Begin function _ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	.p2align	4, 0x90
	.type	_ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E,@function
_ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E: # @_ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	%rcx, -32(%rbp)
	movq	-16(%rbp), %rax
	movq	-8(%rbp), %rcx
	subq	%rcx, %rax
	sarq	$1, %rax
	movq	%rax, -40(%rbp)
	cmpq	$0, -40(%rbp)
	jle	.LBB1036_2
# %bb.1:
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	-40(%rbp), %rdx
	shlq	$1, %rdx
	movq	%rax, %rdi
	movq	%rcx, %rsi
	callq	memmove@PLT
.LBB1036_2:
	movq	-24(%rbp), %rax
	movq	-40(%rbp), %rcx
	shlq	$1, %rcx
	addq	%rcx, %rax
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1036:
	.size	_ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E, .Lfunc_end1036-_ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt12__niter_baseIPtET_S1_,"axG",@progbits,_ZSt12__niter_baseIPtET_S1_,comdat
	.weak	_ZSt12__niter_baseIPtET_S1_ # -- Begin function _ZSt12__niter_baseIPtET_S1_
	.p2align	4, 0x90
	.type	_ZSt12__niter_baseIPtET_S1_,@function
_ZSt12__niter_baseIPtET_S1_:            # @_ZSt12__niter_baseIPtET_S1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	%rdi, -8(%rbp)
	movq	-8(%rbp), %rax
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1037:
	.size	_ZSt12__niter_baseIPtET_S1_, .Lfunc_end1037-_ZSt12__niter_baseIPtET_S1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIbSaIbEE14_M_range_checkEm,"axG",@progbits,_ZNKSt6vectorIbSaIbEE14_M_range_checkEm,comdat
	.weak	_ZNKSt6vectorIbSaIbEE14_M_range_checkEm # -- Begin function _ZNKSt6vectorIbSaIbEE14_M_range_checkEm
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIbSaIbEE14_M_range_checkEm,@function
_ZNKSt6vectorIbSaIbEE14_M_range_checkEm: # @_ZNKSt6vectorIbSaIbEE14_M_range_checkEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, %rdi
	movq	%rax, -24(%rbp)         # 8-byte Spill
	movq	%rcx, -32(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE4sizeEv
	movq	-32(%rbp), %rcx         # 8-byte Reload
	cmpq	%rax, %rcx
	jb	.LBB1038_2
# %bb.1:
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIbSaIbEE4sizeEv
	leaq	.L.str.20(%rip), %rdi
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	movb	$0, %al
	callq	_ZSt24__throw_out_of_range_fmtPKcz@PLT
.LBB1038_2:
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1038:
	.size	_ZNKSt6vectorIbSaIbEE14_M_range_checkEm, .Lfunc_end1038-_ZNKSt6vectorIbSaIbEE14_M_range_checkEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt6vectorIbSaIbEEixEm,"axG",@progbits,_ZNKSt6vectorIbSaIbEEixEm,comdat
	.weak	_ZNKSt6vectorIbSaIbEEixEm # -- Begin function _ZNKSt6vectorIbSaIbEEixEm
	.p2align	4, 0x90
	.type	_ZNKSt6vectorIbSaIbEEixEm,@function
_ZNKSt6vectorIbSaIbEEixEm:              # @_ZNKSt6vectorIbSaIbEEixEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$64, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rsi, -40(%rbp)
	movq	-32(%rbp), %rax
	movq	(%rax), %rax
	movq	-40(%rbp), %rcx
	movq	%rcx, %rdx
	shrq	$6, %rdx
	leaq	(%rax,%rdx,8), %rsi
                                        # kill: def $ecx killed $ecx killed $rcx
	andl	$63, %ecx
	leaq	-24(%rbp), %rax
	movq	%rax, %rdi
	movl	%ecx, %edx
	movq	%rax, -48(%rbp)         # 8-byte Spill
	callq	_ZNSt19_Bit_const_iteratorC2EPmj
	movq	-48(%rbp), %rdi         # 8-byte Reload
	callq	_ZNKSt19_Bit_const_iteratordeEv
	movq	%fs:40, %rsi
	movq	-8(%rbp), %rdi
	cmpq	%rdi, %rsi
	movb	%al, -49(%rbp)          # 1-byte Spill
	jne	.LBB1039_2
# %bb.1:
	movb	-49(%rbp), %al          # 1-byte Reload
	andb	$1, %al
	movzbl	%al, %eax
	addq	$64, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1039_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end1039:
	.size	_ZNKSt6vectorIbSaIbEEixEm, .Lfunc_end1039-_ZNKSt6vectorIbSaIbEEixEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_,"axG",@progbits,_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_,comdat
	.weak	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_ # -- Begin function _ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.p2align	4, 0x90
	.type	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_,@function
_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_: # @_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$48, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	-16(%rbp), %rsi
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	movq	%rsi, -40(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-32(%rbp), %rdi         # 8-byte Reload
	movq	-40(%rbp), %rsi         # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	addq	$48, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1040:
	.size	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_, .Lfunc_end1040-_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.weak	_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ # -- Begin function _ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,@function
_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_: # @_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$160, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdi, -32(%rbp)
	movq	%rdx, -40(%rbp)
	movq	-32(%rbp), %rax
	leaq	.L.str.17(%rip), %rdx
	movl	$1, %esi
	movq	%rax, %rdi
	movq	%rax, -96(%rbp)         # 8-byte Spill
	callq	_ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc
	movq	%rax, -48(%rbp)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rcx
	movq	%rcx, -56(%rbp)
	movq	8(%rax), %rcx
	movq	%rcx, -64(%rbp)
	movq	%rax, %rdi
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	movq	%rax, -24(%rbp)
	leaq	-16(%rbp), %rax
	leaq	-24(%rbp), %rsi
	movq	%rax, %rdi
	movq	%rax, -104(%rbp)        # 8-byte Spill
	callq	_ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	movq	%rax, -72(%rbp)
	movq	-48(%rbp), %rsi
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm
	movq	%rax, -80(%rbp)
	movq	-80(%rbp), %rax
	movq	%rax, -88(%rbp)
	movq	-80(%rbp), %rax
	movq	-72(%rbp), %rcx
	leaq	(%rcx,%rcx,4), %rcx
	leaq	(%rax,%rcx,4), %rsi
	movq	-40(%rbp), %rdi
	movq	%rsi, -112(%rbp)        # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	-112(%rbp), %rsi        # 8-byte Reload
	movq	%rax, %rdx
	callq	_ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	movq	$0, -88(%rbp)
	movq	-56(%rbp), %rdi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movq	%rdi, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rsi
	movq	-80(%rbp), %rdx
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-88(%rbp), %rax
	addq	$20, %rax
	movq	%rax, -88(%rbp)
	movq	-104(%rbp), %rdi        # 8-byte Reload
	callq	_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	movq	(%rax), %rdi
	movq	-64(%rbp), %rsi
	movq	-88(%rbp), %rdx
	movq	-96(%rbp), %rax         # 8-byte Reload
	movq	%rdi, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rdi
	movq	%rsi, -152(%rbp)        # 8-byte Spill
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-152(%rbp), %rsi        # 8-byte Reload
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	%rax, %rcx
	callq	_ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	movq	%rax, -88(%rbp)
	movq	-56(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	16(%rcx), %rdx
	subq	%rax, %rdx
	sarq	$2, %rdx
	movabsq	$-3689348814741910323, %rsi # imm = 0xCCCCCCCCCCCCCCCD
	imulq	%rsi, %rdx
	movq	%rcx, %rdi
	movq	%rax, %rsi
	callq	_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m
	movq	-80(%rbp), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	-88(%rbp), %rax
	movq	%rax, 8(%rcx)
	movq	-80(%rbp), %rax
	movq	-48(%rbp), %rdx
	leaq	(%rdx,%rdx,4), %rdx
	leaq	(%rax,%rdx,4), %rax
	movq	%rax, 16(%rcx)
	movq	%fs:40, %rax
	movq	-8(%rbp), %rdx
	cmpq	%rdx, %rax
	jne	.LBB1041_2
# %bb.1:
	addq	$160, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.LBB1041_2:
	.cfi_def_cfa %rbp, 16
	callq	__stack_chk_fail@PLT
.Lfunc_end1041:
	.size	_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .Lfunc_end1041-_ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_,comdat
	.weak	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_ # -- Begin function _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_,@function
_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_: # @_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movq	%rsi, -16(%rbp)
	movq	%rdx, -24(%rbp)
	movq	-16(%rbp), %rax
	movq	-24(%rbp), %rdi
	movq	%rax, -32(%rbp)         # 8-byte Spill
	callq	_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE
	movq	(%rax), %rcx
	movq	-32(%rbp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movl	16(%rax), %r8d
	movl	%r8d, 16(%rdx)
	addq	$32, %rsp
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1042:
	.size	_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_, .Lfunc_end1042-_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.cfi_endproc
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90         # -- Begin function _GLOBAL__sub_I_Plane.cpp
	.type	_GLOBAL__sub_I_Plane.cpp,@function
_GLOBAL__sub_I_Plane.cpp:               # @_GLOBAL__sub_I_Plane.cpp
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	callq	__cxx_global_var_init
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end1043:
	.size	_GLOBAL__sub_I_Plane.cpp, .Lfunc_end1043-_GLOBAL__sub_I_Plane.cpp
	.cfi_endproc
                                        # -- End function
	.type	_ZStL8__ioinit,@object  # @_ZStL8__ioinit
	.local	_ZStL8__ioinit
	.comm	_ZStL8__ioinit,1,1
	.hidden	__dso_handle
	.type	_ZTV5Plane,@object      # @_ZTV5Plane
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTV5Plane
	.p2align	3
_ZTV5Plane:
	.quad	0
	.quad	_ZTI5Plane
	.quad	_ZN5PlaneD1Ev
	.quad	_ZN5PlaneD0Ev
	.quad	_ZN5Plane11frameUpdateEd
	.quad	_ZN5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE
	.quad	_ZNK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE
	.quad	-184
	.quad	_ZTI5Plane
	.quad	_ZThn184_N5PlaneD1Ev
	.quad	_ZThn184_N5PlaneD0Ev
	.quad	_ZThn184_NK5Plane4drawERN2sf12RenderTargetENS0_12RenderStatesE
	.quad	_ZThn184_N5Plane11frameUpdateEd
	.quad	-192
	.quad	_ZTI5Plane
	.quad	_ZThn192_N5Plane11mouseButtonEbRKN2sf7Vector2IiEERKNS0_5Mouse6ButtonE
	.size	_ZTV5Plane, 128

	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"0, 0"
	.size	.L.str, 5

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"%d, %d"
	.size	.L.str.1, 7

	.type	_ZN5Plane12ToolbarPlaneE,@object # @_ZN5Plane12ToolbarPlaneE
	.bss
	.globl	_ZN5Plane12ToolbarPlaneE
	.p2align	3
_ZN5Plane12ToolbarPlaneE:
	.quad	0
	.size	_ZN5Plane12ToolbarPlaneE, 8

	.type	_ZN5Plane12PrimaryPlaneE,@object # @_ZN5Plane12PrimaryPlaneE
	.globl	_ZN5Plane12PrimaryPlaneE
	.p2align	3
_ZN5Plane12PrimaryPlaneE:
	.quad	0
	.size	_ZN5Plane12PrimaryPlaneE, 8

	.type	.L.str.2,@object        # @.str.2
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2:
	.asciz	"offset: "
	.size	.L.str.2, 9

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	", "
	.size	.L.str.3, 3

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"zoom: "
	.size	.L.str.4, 7

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"INSIDE "
	.size	.L.str.5, 8

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"mouse down on block "
	.size	.L.str.6, 21

	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	"opening context menu"
	.size	.L.str.7, 21

	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"texture"
	.size	.L.str.8, 8

	.type	.L.str.9,@object        # @.str.9
.L.str.9:
	.asciz	"res/shaders/blocks.vert"
	.size	.L.str.9, 24

	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"res/shaders/blocks.frag"
	.size	.L.str.10, 24

	.type	.L.str.11,@object       # @.str.11
.L.str.11:
	.asciz	"res/collection_tab_open.png"
	.size	.L.str.11, 28

	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"res/collection_tab_closed.png"
	.size	.L.str.12, 30

	.type	.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.colors,@object # @__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.colors
	.section	.rodata,"a",@progbits
	.p2align	4
.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.colors:
	.ascii	"==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q==Q\377\377\377\377\377\377\377\377\377\377\377\377\027\027\034\027\027\034\027\027\034\027\027\034\027\027\034\027\027\034\027\027\034\027\027\034"
	.size	.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.colors, 93

	.type	.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.textureCoords,@object # @__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.textureCoords
	.p2align	4
.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.textureCoords:
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	0                       # float 0
	.long	1065353216              # float 1
	.long	1065353216              # float 1
	.long	1119223808              # float 91
	.long	1065353216              # float 1
	.long	1119223808              # float 91
	.long	1106771968              # float 31
	.long	1065353216              # float 1
	.long	1106771968              # float 31
	.zero	64
	.size	.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.textureCoords, 248

	.type	.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.indices,@object # @__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.indices
	.p2align	4
.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.indices:
	.ascii	"\000\f\n\001\f\000\002\003\001\r\f\003\016\r\017\004\017\r\005\006\004\006\020\017\007\021\020\b\021\007\t\n\b\n\013\b\013\016\022\013\f\016\022\020\021\022\017\020\027\031\032\027\030\031\033\035\036\033\034\035\023\025\026\023\024\025"
	.size	.L__const._ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE.indices, 66

	.type	.L.str.13,@object       # @.str.13
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.13:
	.asciz	"center: "
	.size	.L.str.13, 9

	.type	.L.str.14,@object       # @.str.14
.L.str.14:
	.asciz	"use Plane::render instead"
	.size	.L.str.14, 26

	.type	_ZTS5Plane,@object      # @_ZTS5Plane
	.section	.rodata,"a",@progbits
	.globl	_ZTS5Plane
_ZTS5Plane:
	.asciz	"5Plane"
	.size	_ZTS5Plane, 7

	.type	_ZTS14ITransformable,@object # @_ZTS14ITransformable
	.section	.rodata._ZTS14ITransformable,"aG",@progbits,_ZTS14ITransformable,comdat
	.weak	_ZTS14ITransformable
_ZTS14ITransformable:
	.asciz	"14ITransformable"
	.size	_ZTS14ITransformable, 17

	.type	_ZTI14ITransformable,@object # @_ZTI14ITransformable
	.section	.data.rel.ro._ZTI14ITransformable,"aGw",@progbits,_ZTI14ITransformable,comdat
	.weak	_ZTI14ITransformable
	.p2align	3
_ZTI14ITransformable:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTS14ITransformable
	.quad	_ZTIN2sf13TransformableE
	.size	_ZTI14ITransformable, 24

	.type	_ZTI5Plane,@object      # @_ZTI5Plane
	.section	.data.rel.ro,"aw",@progbits
	.globl	_ZTI5Plane
	.p2align	3
_ZTI5Plane:
	.quad	_ZTVN10__cxxabiv121__vmi_class_type_infoE+16
	.quad	_ZTS5Plane
	.long	0                       # 0x0
	.long	3                       # 0x3
	.quad	_ZTI14ITransformable
	.quad	2                       # 0x2
	.quad	_ZTI11IRenderable
	.quad	47106                   # 0xb802
	.quad	_ZTI15IMouseUpdatable
	.quad	49154                   # 0xc002
	.size	_ZTI5Plane, 72

	.type	_ZTV14ITransformable,@object # @_ZTV14ITransformable
	.section	.data.rel.ro._ZTV14ITransformable,"aGw",@progbits,_ZTV14ITransformable,comdat
	.weak	_ZTV14ITransformable
	.p2align	3
_ZTV14ITransformable:
	.quad	0
	.quad	_ZTI14ITransformable
	.quad	_ZN14ITransformableD2Ev
	.quad	_ZN14ITransformableD0Ev
	.size	_ZTV14ITransformable, 32

	.type	_ZTVN2sf8DrawableE,@object # @_ZTVN2sf8DrawableE
	.section	.data.rel.ro._ZTVN2sf8DrawableE,"aGw",@progbits,_ZTVN2sf8DrawableE,comdat
	.weak	_ZTVN2sf8DrawableE
	.p2align	3
_ZTVN2sf8DrawableE:
	.quad	0
	.quad	_ZTIN2sf8DrawableE
	.quad	_ZN2sf8DrawableD2Ev
	.quad	_ZN2sf8DrawableD0Ev
	.quad	__cxa_pure_virtual
	.size	_ZTVN2sf8DrawableE, 40

	.type	_ZTSN2sf8DrawableE,@object # @_ZTSN2sf8DrawableE
	.section	.rodata._ZTSN2sf8DrawableE,"aG",@progbits,_ZTSN2sf8DrawableE,comdat
	.weak	_ZTSN2sf8DrawableE
_ZTSN2sf8DrawableE:
	.asciz	"N2sf8DrawableE"
	.size	_ZTSN2sf8DrawableE, 15

	.type	_ZTIN2sf8DrawableE,@object # @_ZTIN2sf8DrawableE
	.section	.data.rel.ro._ZTIN2sf8DrawableE,"aGw",@progbits,_ZTIN2sf8DrawableE,comdat
	.weak	_ZTIN2sf8DrawableE
	.p2align	3
_ZTIN2sf8DrawableE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN2sf8DrawableE
	.size	_ZTIN2sf8DrawableE, 16

	.type	.L.str.15,@object       # @.str.15
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.15:
	.asciz	" [DEBUG] "
	.size	.L.str.15, 10

	.type	.L.str.16,@object       # @.str.16
.L.str.16:
	.asciz	"\n"
	.size	.L.str.16, 2

	.type	_ZZL18__gthread_active_pvE20__gthread_active_ptr,@object # @_ZZL18__gthread_active_pvE20__gthread_active_ptr
	.section	.data.rel.ro,"aw",@progbits
	.p2align	3
_ZZL18__gthread_active_pvE20__gthread_active_ptr:
	.quad	__pthread_key_create
	.size	_ZZL18__gthread_active_pvE20__gthread_active_ptr, 8

	.type	_ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits,@object # @_ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits
	.section	.rodata._ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits,"aG",@progbits,_ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits,comdat
	.weak	_ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits
	.p2align	4
_ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits:
	.asciz	"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"
	.size	_ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits, 201

	.type	.L.str.17,@object       # @.str.17
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.17:
	.asciz	"vector::_M_realloc_insert"
	.size	.L.str.17, 26

	.type	.L.str.18,@object       # @.str.18
.L.str.18:
	.asciz	"vector::reserve"
	.size	.L.str.18, 16

	.type	_ZTSZN5PlaneC1EbE3$_0,@object # @"_ZTSZN5PlaneC1EbE3$_0"
	.section	.rodata,"a",@progbits
_ZTSZN5PlaneC1EbE3$_0:
	.asciz	"ZN5PlaneC1EbE3$_0"
	.size	_ZTSZN5PlaneC1EbE3$_0, 18

	.type	_ZTIZN5PlaneC1EbE3$_0,@object # @"_ZTIZN5PlaneC1EbE3$_0"
	.section	.data.rel.ro,"aw",@progbits
	.p2align	3
_ZTIZN5PlaneC1EbE3$_0:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSZN5PlaneC1EbE3$_0
	.size	_ZTIZN5PlaneC1EbE3$_0, 16

	.type	.L.str.19,@object       # @.str.19
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.19:
	.asciz	"vector<bool>::_M_insert_aux"
	.size	.L.str.19, 28

	.type	.L.str.20,@object       # @.str.20
.L.str.20:
	.asciz	"vector<bool>::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)"
	.size	.L.str.20, 80

	.section	.init_array,"aw",@init_array
	.p2align	3
	.quad	_GLOBAL__sub_I_Plane.cpp
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"aGw",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.quad	__gxx_personality_v0
	.weak	pthread_mutex_lock
	.weak	__pthread_key_create
	.weak	pthread_mutex_unlock
	.globl	_ZN5PlaneC1EbRKS_
	.type	_ZN5PlaneC1EbRKS_,@function
.set _ZN5PlaneC1EbRKS_, _ZN5PlaneC2EbRKS_
	.globl	_ZN5PlaneC1Eb
	.type	_ZN5PlaneC1Eb,@function
.set _ZN5PlaneC1Eb, _ZN5PlaneC2Eb
	.globl	_ZN5PlaneD1Ev
	.type	_ZN5PlaneD1Ev,@function
.set _ZN5PlaneD1Ev, _ZN5PlaneD2Ev
	.ident	"clang version 10.0.0 "
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __cxx_global_var_init
	.addrsig_sym __cxa_atexit
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _ZN5Plane5SetupEb
	.addrsig_sym _ZNKSt6vectorIP10CollectionSaIS1_EE4sizeEv
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EEixEm
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE5clearEv
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE9push_backEOS1_
	.addrsig_sym _Znwm
	.addrsig_sym _ZNKSt6vectorIP10CollectionSaIS1_EEixEm
	.addrsig_sym _ZdlPv
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE7reserveEm
	.addrsig_sym _ZNSt6vectorIbSaIbEE7reserveEm
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE7reserveEm
	.addrsig_sym _ZN2sf4TextaSEOS0_
	.addrsig_sym _ZN2sf4Text12setFillColorERKNS_5ColorE
	.addrsig_sym _ZNSt8functionIFvhEEaSIZN5PlaneC1EbE3$_0EENSt9enable_ifIXsrNS1_9_CallableINSt5decayIT_E4typeESt15__invoke_resultIRSA_JhEEEE5valueERS1_E4typeEOS8_
	.addrsig_sym _ZN5Plane13AddCollectionEP10Collectionb
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE9push_backERKS1_
	.addrsig_sym _ZNSt6vectorIbSaIbEE9push_backEb
	.addrsig_sym _ZN5Plane12CreateBufferEtb
	.addrsig_sym _ZN5Plane14GetCollectionsEv
	.addrsig_sym _ZN5Plane16DeleteCollectionEmb
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EE
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE5beginEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEplEl
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE5beginEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEplEl
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE5beginEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEEplEl
	.addrsig_sym _ZNSt6vectorIN2sf5ImageESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.addrsig_sym _ZNSt6vectorIN2sf5ImageESaIS1_EE5beginEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEEplEl
	.addrsig_sym _ZNSt6vectorIN2sf7TextureESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.addrsig_sym _ZNSt6vectorIN2sf7TextureESaIS1_EE5beginEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEEplEl
	.addrsig_sym _ZNSt6vectorIbSaIbEE5eraseESt19_Bit_const_iterator
	.addrsig_sym _ZStplRKSt13_Bit_iteratorl
	.addrsig_sym _ZNSt6vectorIbSaIbEE5beginEv
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE5beginEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEEplEl
	.addrsig_sym _ZN2sfpLIiEERNS_7Vector2IT_EES4_RKS3_
	.addrsig_sym _ZN5Plane16GetInnerPositionEv
	.addrsig_sym _ZN5Plane12UpdateBufferEt
	.addrsig_sym _ZN2sf13Transformable11setPositionEff
	.addrsig_sym _ZNK2sf13Transformable11getPositionEv
	.addrsig_sym _ZN14ITransformable7getSizeEv
	.addrsig_sym sprintf
	.addrsig_sym _ZN2sf4Text9setStringERKNS_6StringE
	.addrsig_sym _ZN5Plane13DraggingStackEv
	.addrsig_sym _ZN5Plane18DraggingCollectionEv
	.addrsig_sym _ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE
	.addrsig_sym _ZN2sfplIfEENS_7Vector2IT_EERKS3_S5_
	.addrsig_sym _ZN2sfmiIiEENS_7Vector2IT_EERKS3_S5_
	.addrsig_sym _ZN5Plane19DraggingStackUpdateEv
	.addrsig_sym _ZNKSt6vectorIN2sf9TransformESaIS1_EE4sizeEv
	.addrsig_sym _ZN2sf9Transform9translateERKNS_7Vector2IfEE
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EEixEm
	.addrsig_sym _ZN5Plane6UnDragERKN2sf7Vector2IiEE
	.addrsig_sym _ZN5Plane13CalculateZoomEv
	.addrsig_sym _ZN5Plane15CalculateOffsetEv
	.addrsig_sym _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
	.addrsig_sym _ZNSolsEf
	.addrsig_sym _ZNSolsEPFRSoS_E
	.addrsig_sym _ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
	.addrsig_sym _ZN10Collection9GetStacksEv
	.addrsig_sym _ZNKSt6vectorIP5StackSaIS1_EE4sizeEv
	.addrsig_sym _ZNKSt6vectorIP5StackSaIS1_EEixEm
	.addrsig_sym _ZN5Stack9GetBlocksEv
	.addrsig_sym _ZNKSt6vectorIP5BlockSaIS1_EE4sizeEv
	.addrsig_sym _ZNKSt6vectorIP5BlockSaIS1_EEixEm
	.addrsig_sym _ZN5Block8GetWidthEv
	.addrsig_sym _ZN2sfpLIfEERNS_7Vector2IT_EES4_RKS3_
	.addrsig_sym _ZN6Logger5DebugERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.addrsig_sym _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.addrsig_sym _ZNSt7__cxx119to_stringEm
	.addrsig_sym _ZN14ContextHandler7DisableEv
	.addrsig_sym _ZN5Plane8UnSelectEv
	.addrsig_sym _ZN5Stack8AddBlockEP5Block
	.addrsig_sym _ZN5Stack11RemoveBlockEm
	.addrsig_sym _ZN10Collection8AddStackEP5Stack
	.addrsig_sym _ZN14ITransformable7setSizeERKN2sf7Vector2IjEE
	.addrsig_sym _ZN5Stack14GetWidestBlockEv
	.addrsig_sym _ZN10Collection11RemoveStackEm
	.addrsig_sym _ZN5Plane9DragStackEP10CollectionP5Stackb
	.addrsig_sym _ZN14ContextHandler6EnableERKN2sf7Vector2IfEEPSt8functionIFvhEE
	.addrsig_sym _ZN5Plane13SelectContextEmmm
	.addrsig_sym _ZN2sf12RenderTarget7setViewERKNS_4ViewE
	.addrsig_sym _ZN10Collection10GetEnabledEv
	.addrsig_sym _ZNSt6vectorIbSaIbEEixEm
	.addrsig_sym _ZNKSt14_Bit_referencecvbEv
	.addrsig_sym _ZN2sf6Shader10setUniformERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7TextureE
	.addrsig_sym _ZNSt6vectorIN2sf7TextureESaIS1_EEixEm
	.addrsig_sym _ZN2sf12RenderTarget4drawERKNS_12VertexBufferERKNS_12RenderStatesE
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EEixEm
	.addrsig_sym _ZNK2sf12RenderTarget14getDefaultViewEv
	.addrsig_sym _ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE
	.addrsig_sym _ZN5Plane6IsSnapEv
	.addrsig_sym _ZN2sf14RectangleShape7setSizeERKNS_7Vector2IfEE
	.addrsig_sym _ZN2sf9Transform9translateEff
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE4backEv
	.addrsig_sym _ZN2sf6Shader12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_
	.addrsig_sym _ZN2sf5Image12loadFromFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.addrsig_sym _ZN2sf5Image14flipVerticallyEv
	.addrsig_sym _ZN2sf7Texture13loadFromImageERKNS_5ImageERKNS_4RectIiEE
	.addrsig_sym _ZN2sf5Shape12setFillColorERKNS_5ColorE
	.addrsig_sym _ZN5Plane19UpdateCollectionVAOEPSt6vectorIN2sf6VertexESaIS2_EENS1_7Vector2IjEE
	.addrsig_sym _ZN10Intrinsics4AVX2Ev
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE7reserveEm
	.addrsig_sym _ZN5Plane12ParseIndicesEPSt6vectorIN2sf6VertexESaIS2_EEPKfPKhS7_S9_h
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE9push_backEOS3_
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4backEv
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE9push_backEOS1_
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE9push_backEOS1_
	.addrsig_sym _ZNSt6vectorIN2sf5ImageESaIS1_EE9push_backEOS1_
	.addrsig_sym _ZNSt6vectorIN2sf7TextureESaIS1_EE9push_backEOS1_
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EEixEm
	.addrsig_sym _ZN5Block14GetModCategoryEv
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backEOS1_
	.addrsig_sym _ZN5Block12GetArgumentsEv
	.addrsig_sym _ZNKSt6vectorIP8ArgumentSaIS1_EE4sizeEv
	.addrsig_sym _ZNKSt6vectorIP8ArgumentSaIS1_EEixEm
	.addrsig_sym _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE9push_backERKS1_
	.addrsig_sym _ZN8Argument14GetVertexArrayEv
	.addrsig_sym _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE9push_backEOS3_
	.addrsig_sym _ZN8Argument20GetVertexArrayCoordsEv
	.addrsig_sym _ZNSt6vectorIPKN2sf5ImageESaIS3_EE9push_backEOS3_
	.addrsig_sym _ZN8Argument21GetVertexArrayTextureEv
	.addrsig_sym _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE4backEv
	.addrsig_sym _ZNK2sf11VertexArray14getVertexCountEv
	.addrsig_sym _ZN2sf11VertexArrayixEm
	.addrsig_sym _ZNSt6vectorItSaItEE9push_backERKt
	.addrsig_sym _ZNKSt6vectorIPKN2sf5ImageESaIS3_EE4sizeEv
	.addrsig_sym _ZNSt6vectorIPKN2sf5ImageESaIS3_EEixEm
	.addrsig_sym _ZNK2sf5Image7getSizeEv
	.addrsig_sym _ZNSt6vectorIN2sf11VertexArrayESaIS1_EEixEm
	.addrsig_sym _ZNSt6vectorIPKS_IbSaIbEESaIS3_EEixEm
	.addrsig_sym _ZNKSt6vectorIbSaIbEE2atEm
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EEixEm
	.addrsig_sym _ZNK2sf7Texture7getSizeEv
	.addrsig_sym _ZSt3powIihEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_Xsr3std12__is_integerIS2_EE7__valueEE6__typeENS4_IS3_Xsr3std12__is_integerIS3_EE7__valueEE6__typeEE6__typeES2_S3_
	.addrsig_sym _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE4sizeEv
	.addrsig_sym _ZN2sf13RenderTexture6createEjjRKNS_15ContextSettingsE
	.addrsig_sym _ZN2sf12RenderTarget5clearERKNS_5ColorE
	.addrsig_sym _ZN2sf6Sprite10setTextureERKNS_7TextureEb
	.addrsig_sym _ZNK2sf13RenderTexture10getTextureEv
	.addrsig_sym _ZNK2sf7Texture11copyToImageEv
	.addrsig_sym _ZNSt6vectorIN2sf5ImageESaIS1_EEixEm
	.addrsig_sym _ZN2sf5ImageaSERKS0_
	.addrsig_sym _ZN2sf5Image8setPixelEjjRKNS_5ColorE
	.addrsig_sym _ZNSt14_Bit_referenceaSEb
	.addrsig_sym _ZNKSt6vectorItSaItEE4sizeEv
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE9push_backERKS1_
	.addrsig_sym _ZNSt6vectorItSaItEEixEm
	.addrsig_sym _ZN2sf12VertexBuffer6createEm
	.addrsig_sym _ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv
	.addrsig_sym _ZN2sf12VertexBuffer6updateEPKNS_6VertexEmj
	.addrsig_sym _ZN5Stack12InsertBlocksERKSt6vectorIP5BlockSaIS2_EEm
	.addrsig_sym _ZN10Collection9RemoveAllEb
	.addrsig_sym _ZN2sfmiIfEENS_7Vector2IT_EERKS3_S5_
	.addrsig_sym _ZN2sfplIjEENS_7Vector2IT_EERKS3_S5_
	.addrsig_sym _ZN5Plane9ClearSnapEv
	.addrsig_sym _ZN2sfpLIjEERNS_7Vector2IT_EES4_RKS3_
	.addrsig_sym _ZN2sfmIIfEERNS_7Vector2IT_EES4_RKS3_
	.addrsig_sym _ZN5Plane7SetSnapEmmP5Stack
	.addrsig_sym _ZNK2sf4View7getSizeEv
	.addrsig_sym _ZNK2sf4View9getCenterEv
	.addrsig_sym __cxa_allocate_exception
	.addrsig_sym __cxa_free_exception
	.addrsig_sym __cxa_throw
	.addrsig_sym __clang_call_terminate
	.addrsig_sym __cxa_begin_catch
	.addrsig_sym _ZSt9terminatev
	.addrsig_sym _ZN2sf8DrawableaSERKS0_
	.addrsig_sym _ZN2sf13TransformableaSERKS0_
	.addrsig_sym _ZN2sf6StringaSERKS0_
	.addrsig_sym _ZN2sf11VertexArrayaSEOS0_
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EEaSEOS3_
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt4moveIRSt6vectorIN2sf6VertexESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_
	.addrsig_sym _ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE13get_allocatorEv
	.addrsig_sym _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_
	.addrsig_sym _ZSt15__alloc_on_moveISaIN2sf6VertexEEEvRT_S4_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_
	.addrsig_sym _ZSt18__do_alloc_on_moveISaIN2sf6VertexEEEvRT_S4_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt4moveIRSaIN2sf6VertexEEEONSt16remove_referenceIT_E4typeEOS5_
	.addrsig_sym _ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_disposeEv
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE11_M_is_localEv
	.addrsig_sym _ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE10_M_destroyEm
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE7_M_dataEv
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE13_M_local_dataEv
	.addrsig_sym _ZNSt14pointer_traitsIPKjE10pointer_toERS0_
	.addrsig_sym _ZSt9addressofIKjEPT_RS1_
	.addrsig_sym _ZSt11__addressofIKjEPT_RS1_
	.addrsig_sym _ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm
	.addrsig_sym _ZNSt7__cxx1112basic_stringIjSt11char_traitsIjESaIjEE16_M_get_allocatorEv
	.addrsig_sym __cxa_call_unexpected
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIjE10deallocateEPjm
	.addrsig_sym _ZNSt13_Bit_iteratorpLEl
	.addrsig_sym _ZNSt18_Bit_iterator_base7_M_incrEl
	.addrsig_sym _ZNSt5mutex4lockEv
	.addrsig_sym _ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE
	.addrsig_sym _ZNSt5mutex6unlockEv
	.addrsig_sym _ZL20__gthread_mutex_lockP15pthread_mutex_t
	.addrsig_sym _ZSt20__throw_system_errori
	.addrsig_sym _ZL18__gthread_active_pv
	.addrsig_sym pthread_mutex_lock
	.addrsig_sym __pthread_key_create
	.addrsig_sym _ZL22__gthread_mutex_unlockP15pthread_mutex_t
	.addrsig_sym pthread_mutex_unlock
	.addrsig_sym _ZNSt8__detail14__to_chars_lenImEEjT_i
	.addrsig_sym _ZNSt8__detail18__to_chars_10_implImEEvPcjT_
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm
	.addrsig_sym _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv
	.addrsig_sym pow
	.addrsig_sym _ZNSt6vectorIhSaIhEEaSERKS1_
	.addrsig_sym _ZNKSt6vectorIhSaIhEE4sizeEv
	.addrsig_sym _ZNKSt6vectorIhSaIhEE8capacityEv
	.addrsig_sym _ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhmT_S9_
	.addrsig_sym _ZNKSt6vectorIhSaIhEE5beginEv
	.addrsig_sym _ZNKSt6vectorIhSaIhEE3endEv
	.addrsig_sym _ZSt8_DestroyIPhhEvT_S1_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm
	.addrsig_sym _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E
	.addrsig_sym _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_
	.addrsig_sym _ZNSt6vectorIhSaIhEE5beginEv
	.addrsig_sym _ZNSt6vectorIhSaIhEE3endEv
	.addrsig_sym _ZSt4copyIPhS0_ET0_T_S2_S1_
	.addrsig_sym _ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E
	.addrsig_sym _ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm
	.addrsig_sym _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E
	.addrsig_sym __cxa_rethrow
	.addrsig_sym __cxa_end_catch
	.addrsig_sym _ZNSt16allocator_traitsISaIhEE8allocateERS0_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIhE11_M_max_sizeEv
	.addrsig_sym _ZSt17__throw_bad_allocv
	.addrsig_sym _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	.addrsig_sym _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_
	.addrsig_sym _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_
	.addrsig_sym _ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_
	.addrsig_sym _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEET_S8_
	.addrsig_sym _ZSt12__niter_wrapIPhET_RKS1_S1_
	.addrsig_sym _ZSt14__copy_move_a1ILb0EPKhPhET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPKhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE
	.addrsig_sym _ZSt12__niter_baseIPhET_S1_
	.addrsig_sym _ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_
	.addrsig_sym _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv
	.addrsig_sym _ZSt8_DestroyIPhEvT_S1_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_
	.addrsig_sym _ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm
	.addrsig_sym _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_
	.addrsig_sym _ZSt13__copy_move_aILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_
	.addrsig_sym _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES2_ET_S7_T0_
	.addrsig_sym _ZSt12__niter_baseIPhSt6vectorIhSaIhEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplEl
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv
	.addrsig_sym _ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_
	.addrsig_sym _ZSt12__miter_baseIPhET_S1_
	.addrsig_sym _ZSt14__copy_move_a1ILb0EPhS0_ET1_T0_S2_S1_
	.addrsig_sym _ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_
	.addrsig_sym _ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_
	.addrsig_sym _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_
	.addrsig_sym _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_
	.addrsig_sym _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc
	.addrsig_sym _ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EES4_EvT_S6_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPSt6vectorIN2sf6VertexESaIS2_EEEvT_S6_
	.addrsig_sym _ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN2sf6VertexESaIS4_EEEEvT_S8_
	.addrsig_sym _ZSt8_DestroyISt6vectorIN2sf6VertexESaIS2_EEEvPT_
	.addrsig_sym _ZSt11__addressofISt6vectorIN2sf6VertexESaIS2_EEEPT_RS5_
	.addrsig_sym _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE13_M_deallocateEPS4_m
	.addrsig_sym _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE10deallocateERS5_PS4_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE10deallocateEPS5_m
	.addrsig_sym _ZSt8_DestroyIPN2sf12VertexBufferES1_EvT_S3_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPN2sf12VertexBufferEEvT_S3_
	.addrsig_sym _ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf12VertexBufferEEEvT_S5_
	.addrsig_sym _ZSt8_DestroyIN2sf12VertexBufferEEvPT_
	.addrsig_sym _ZSt11__addressofIN2sf12VertexBufferEEPT_RS2_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE13_M_deallocateEPS1_m
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE10deallocateERS2_PS1_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE10deallocateEPS2_m
	.addrsig_sym _ZSt8_DestroyIPN2sf9TransformES1_EvT_S3_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPN2sf9TransformEEvT_S3_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf9TransformEEEvT_S5_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE13_M_deallocateEPS1_m
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf9TransformEEE10deallocateERS2_PS1_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE10deallocateEPS2_m
	.addrsig_sym _ZSt8_DestroyIPN2sf5ImageES1_EvT_S3_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPN2sf5ImageEEvT_S3_
	.addrsig_sym _ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf5ImageEEEvT_S5_
	.addrsig_sym _ZSt8_DestroyIN2sf5ImageEEvPT_
	.addrsig_sym _ZSt11__addressofIN2sf5ImageEEPT_RS2_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE13_M_deallocateEPS1_m
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf5ImageEEE10deallocateERS2_PS1_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE10deallocateEPS2_m
	.addrsig_sym _ZSt8_DestroyIPN2sf7TextureES1_EvT_S3_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPN2sf7TextureEEvT_S3_
	.addrsig_sym _ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf7TextureEEEvT_S5_
	.addrsig_sym _ZSt8_DestroyIN2sf7TextureEEvPT_
	.addrsig_sym _ZSt11__addressofIN2sf7TextureEEPT_RS2_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE13_M_deallocateEPS1_m
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf7TextureEEE10deallocateERS2_PS1_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE10deallocateEPS2_m
	.addrsig_sym _ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv
	.addrsig_sym _ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv
	.addrsig_sym _ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm
	.addrsig_sym _ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv
	.addrsig_sym _ZSt11__addressofImEPT_RS0_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm
	.addrsig_sym _ZSt8_DestroyIPP10CollectionS1_EvT_S3_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPP10CollectionEvT_S3_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPP10CollectionEEvT_S5_
	.addrsig_sym _ZNSt12_Vector_baseIP10CollectionSaIS1_EE13_M_deallocateEPS1_m
	.addrsig_sym _ZNSt16allocator_traitsISaIP10CollectionEE10deallocateERS2_PS1_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIP10CollectionE10deallocateEPS2_m
	.addrsig_sym _ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E
	.addrsig_sym _ZSt8_DestroyIPN2sf6VertexEEvT_S3_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE15_M_erase_at_endEPS1_
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.addrsig_sym _ZSt4moveIRP10CollectionEONSt16remove_referenceIT_E4typeEOS4_
	.addrsig_sym _ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZSt7forwardIP10CollectionEOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE3endEv
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JS2_EEEvPT_DpOT0_
	.addrsig_sym _ZNKSt6vectorIP10CollectionSaIS1_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.addrsig_sym _ZNSt12_Vector_baseIP10CollectionSaIS1_EE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZNKSt6vectorIP10CollectionSaIS1_EE8max_sizeEv
	.addrsig_sym _ZSt20__throw_length_errorPKc
	.addrsig_sym _ZSt3maxImERKT_S2_S2_
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE11_S_max_sizeERKS2_
	.addrsig_sym _ZNKSt12_Vector_baseIP10CollectionSaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIP10CollectionEE8max_sizeERKS2_
	.addrsig_sym _ZSt3minImERKT_S2_S2_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIP10CollectionE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIP10CollectionE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIP10CollectionEE8allocateERS2_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIP10CollectionE8allocateEmPKv
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt12__relocate_aIPP10CollectionS2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZSt14__relocate_a_1IP10CollectionS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E
	.addrsig_sym _ZSt12__niter_baseIPP10CollectionET_S3_
	.addrsig_sym _ZNKSt6vectorIP10CollectionSaIS1_EE8capacityEv
	.addrsig_sym _ZNKSt6vectorIbSaIbEE8max_sizeEv
	.addrsig_sym _ZNKSt6vectorIbSaIbEE8capacityEv
	.addrsig_sym _ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.addrsig_sym _ZNSt16allocator_traitsISaImEE8max_sizeERKS0_
	.addrsig_sym _ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorImE11_M_max_sizeEv
	.addrsig_sym _ZStmiRKSt18_Bit_iterator_baseS1_
	.addrsig_sym _ZNKSt6vectorIbSaIbEE5beginEv
	.addrsig_sym _ZNSt13_Bvector_baseISaIbEE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator
	.addrsig_sym _ZNSt6vectorIbSaIbEE3endEv
	.addrsig_sym _ZNSt13_Bvector_baseISaIbEE8_S_nwordEm
	.addrsig_sym _ZNSt16allocator_traitsISaImEE8allocateERS0_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv
	.addrsig_sym _ZSt4copyIPmS0_ET0_T_S2_S1_
	.addrsig_sym _ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_
	.addrsig_sym _ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_
	.addrsig_sym _ZSt12__miter_baseIPmET_S1_
	.addrsig_sym _ZSt12__niter_wrapIPmET_RKS1_S1_
	.addrsig_sym _ZSt14__copy_move_a1ILb0EPmS0_ET1_T0_S2_S1_
	.addrsig_sym _ZSt12__niter_baseIPmET_S1_
	.addrsig_sym _ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_
	.addrsig_sym _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_
	.addrsig_sym _ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.addrsig_sym _ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_
	.addrsig_sym _ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_
	.addrsig_sym _ZSt14__copy_move_a1ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.addrsig_sym _ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_
	.addrsig_sym _ZSt12__niter_baseISt13_Bit_iteratorET_S1_
	.addrsig_sym _ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_
	.addrsig_sym _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_
	.addrsig_sym _ZNKSt19_Bit_const_iteratordeEv
	.addrsig_sym _ZNKSt13_Bit_iteratordeEv
	.addrsig_sym _ZNSt19_Bit_const_iteratorppEv
	.addrsig_sym _ZNSt13_Bit_iteratorppEv
	.addrsig_sym _ZNSt18_Bit_iterator_base10_M_bump_upEv
	.addrsig_sym _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8max_sizeEv
	.addrsig_sym _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8capacityEv
	.addrsig_sym _ZNSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE11_S_max_sizeERKS4_
	.addrsig_sym _ZNKSt12_Vector_baseISt6vectorIN2sf6VertexESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8max_sizeERKS5_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE8allocateERS5_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE8allocateEmPKv
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt12__relocate_aIPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	.addrsig_sym _ZSt14__relocate_a_1IPSt6vectorIN2sf6VertexESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_
	.addrsig_sym _ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EEET_S6_
	.addrsig_sym _ZSt19__relocate_object_aISt6vectorIN2sf6VertexESaIS2_EES4_SaIS4_EEvPT_PT0_RT1_
	.addrsig_sym _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	.addrsig_sym _ZNSt16allocator_traitsISaISt6vectorIN2sf6VertexESaIS2_EEEE7destroyIS4_EEvRS5_PT_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE9constructIS5_JS5_EEEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardISt6vectorIN2sf6VertexESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE
	.addrsig_sym _ZSt4moveIRNSt12_Vector_baseIN2sf6VertexESaIS2_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS8_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorISt6vectorIN2sf6VertexESaIS3_EEE7destroyIS5_EEvPT_
	.addrsig_sym _ZSt7forwardIZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZNSt8functionIFvhEE4swapERS1_
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E21_M_not_empty_functionIS2_EEbRKT_
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_
	.addrsig_sym _ZSt4moveIRZN5PlaneC1EbE3$_0EONSt16remove_referenceIT_E4typeEOS4_
	.addrsig_sym _ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E9_M_invokeERKSt9_Any_dataOh
	.addrsig_sym _ZNSt17_Function_handlerIFvhEZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E15_M_init_functorERSt9_Any_dataOS2_St17integral_constantIbLb1EE
	.addrsig_sym _ZNSt9_Any_data9_M_accessEv
	.addrsig_sym _ZSt10__invoke_rIvRZN5PlaneC1EbE3$_0JhEENSt9enable_ifIXsr6__and_ISt7is_voidIT_ESt14__is_invocableIT0_JDpT1_EEEE5valueES5_E4typeEOS8_DpOS9_
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E14_M_get_pointerERKSt9_Any_data
	.addrsig_sym _ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE
	.addrsig_sym _ZSt13__invoke_implIvRZN5PlaneC1EbE3$_0JhEET_St14__invoke_otherOT0_DpOT1_
	.addrsig_sym _ZSt7forwardIRZN5PlaneC1EbE3$_0EOT_RNSt16remove_referenceIS3_E4typeE
	.addrsig_sym _ZZN5PlaneC1EbENK3$_0clEh
	.addrsig_sym _ZNKSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERKT_v
	.addrsig_sym _ZSt11__addressofIKZN5PlaneC1EbE3$_0EPT_RS3_
	.addrsig_sym _ZNKSt9_Any_data9_M_accessEv
	.addrsig_sym _ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v
	.addrsig_sym _ZNSt9_Any_data9_M_accessIPZN5PlaneC1EbE3$_0EERT_v
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_managerERSt9_Any_dataRKS4_St18_Manager_operation
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E8_M_cloneERSt9_Any_dataRKS4_St17integral_constantIbLb1EE
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN5PlaneC1EbE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE
	.addrsig_sym _ZNSt9_Any_data9_M_accessIZN5PlaneC1EbE3$_0EERT_v
	.addrsig_sym _ZSt4swapISt9_Any_dataENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS4_ESt18is_move_assignableIS4_EEE5valueEvE4typeERS4_SD_
	.addrsig_sym _ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISA_ESt18is_move_assignableISA_EEE5valueEvE4typeERSA_SJ_
	.addrsig_sym _ZSt4swapIPFvRKSt9_Any_dataOhEENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SI_
	.addrsig_sym _ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_
	.addrsig_sym _ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_
	.addrsig_sym _ZSt4moveIRPFvRKSt9_Any_dataOhEEONSt16remove_referenceIT_E4typeEOS8_
	.addrsig_sym _ZNSt16allocator_traitsISaIP10CollectionEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIP10CollectionE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIRKP10CollectionEOT_RNSt16remove_referenceIS4_E4typeE
	.addrsig_sym _ZNSt13_Bit_iteratorppEi
	.addrsig_sym _ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.addrsig_sym _ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.addrsig_sym _ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc
	.addrsig_sym _ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_
	.addrsig_sym _ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.addrsig_sym _ZSt12__miter_baseISt13_Bit_iteratorET_S1_
	.addrsig_sym _ZSt23__copy_move_backward_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.addrsig_sym _ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.addrsig_sym _ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.addrsig_sym _ZNSt13_Bit_iteratormmEv
	.addrsig_sym _ZNSt14_Bit_referenceaSERKS_
	.addrsig_sym _ZNSt18_Bit_iterator_base12_M_bump_downEv
	.addrsig_sym _ZNKSt6vectorIbSaIbEE4sizeEv
	.addrsig_sym _ZNKSt6vectorIbSaIbEE3endEv
	.addrsig_sym _ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.addrsig_sym _ZSt14__copy_move_a1ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.addrsig_sym _ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_
	.addrsig_sym _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS3_S5_EE
	.addrsig_sym _ZN9__gnu_cxxmiIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_
	.addrsig_sym _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE6cbeginEv
	.addrsig_sym _ZN9__gnu_cxxneIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEEbRKNS_17__normal_iteratorIT_T0_EESE_
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE3endEv
	.addrsig_sym _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET0_T_SC_SB_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	.addrsig_sym _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEESA_ET1_T0_SC_SB_
	.addrsig_sym _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEEET_SB_
	.addrsig_sym _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS4_EES2_IS6_SaIS6_EEEES7_ET_SB_T0_
	.addrsig_sym _ZSt14__copy_move_a1ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	.addrsig_sym _ZSt12__niter_baseIPSt6vectorIN2sf6VertexESaIS2_EES0_IS4_SaIS4_EEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE
	.addrsig_sym _ZSt14__copy_move_a2ILb1EPSt6vectorIN2sf6VertexESaIS2_EES5_ET1_T0_S7_S6_
	.addrsig_sym _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIN2sf6VertexESaIS5_EES8_EET0_T_SA_S9_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEE4baseEv
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.addrsig_sym _ZN9__gnu_cxxmiIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.addrsig_sym _ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE6cbeginEv
	.addrsig_sym _ZN9__gnu_cxxneIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE3endEv
	.addrsig_sym _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE7destroyIS1_EEvRS2_PT_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.addrsig_sym _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEEET_S9_
	.addrsig_sym _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.addrsig_sym _ZSt14__copy_move_a1ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPN2sf12VertexBufferESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.addrsig_sym _ZSt14__copy_move_a2ILb1EPN2sf12VertexBufferES2_ET1_T0_S4_S3_
	.addrsig_sym _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf12VertexBufferES5_EET0_T_S7_S6_
	.addrsig_sym _ZSt4moveIRN2sf12VertexBufferEEONSt16remove_referenceIT_E4typeEOS4_
	.addrsig_sym _ZN2sf12VertexBufferaSERKS0_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE7destroyIS2_EEvPT_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf12VertexBufferESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.addrsig_sym _ZN9__gnu_cxxmiIPKN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.addrsig_sym _ZNKSt6vectorIN2sf9TransformESaIS1_EE6cbeginEv
	.addrsig_sym _ZN9__gnu_cxxneIPN2sf9TransformESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE3endEv
	.addrsig_sym _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf9TransformEEE7destroyIS1_EEvRS2_PT_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.addrsig_sym _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEEET_S9_
	.addrsig_sym _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf9TransformESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.addrsig_sym _ZSt14__copy_move_a1ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPN2sf9TransformESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.addrsig_sym _ZSt14__copy_move_a2ILb1EPN2sf9TransformES2_ET1_T0_S4_S3_
	.addrsig_sym _ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN2sf9TransformEEEPT_PKS5_S8_S6_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE7destroyIS2_EEvPT_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf9TransformESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZNSt6vectorIN2sf5ImageESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.addrsig_sym _ZN9__gnu_cxxmiIPKN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.addrsig_sym _ZNKSt6vectorIN2sf5ImageESaIS1_EE6cbeginEv
	.addrsig_sym _ZN9__gnu_cxxneIPN2sf5ImageESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.addrsig_sym _ZNSt6vectorIN2sf5ImageESaIS1_EE3endEv
	.addrsig_sym _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf5ImageEEE7destroyIS1_EEvRS2_PT_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.addrsig_sym _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEEET_S9_
	.addrsig_sym _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf5ImageESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.addrsig_sym _ZSt14__copy_move_a1ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPN2sf5ImageESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.addrsig_sym _ZSt14__copy_move_a2ILb1EPN2sf5ImageES2_ET1_T0_S4_S3_
	.addrsig_sym _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf5ImageES5_EET0_T_S7_S6_
	.addrsig_sym _ZSt4moveIRN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS4_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE7destroyIS2_EEvPT_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf5ImageESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZNSt6vectorIN2sf7TextureESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.addrsig_sym _ZN9__gnu_cxxmiIPKN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.addrsig_sym _ZNKSt6vectorIN2sf7TextureESaIS1_EE6cbeginEv
	.addrsig_sym _ZN9__gnu_cxxneIPN2sf7TextureESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.addrsig_sym _ZNSt6vectorIN2sf7TextureESaIS1_EE3endEv
	.addrsig_sym _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf7TextureEEE7destroyIS1_EEvRS2_PT_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.addrsig_sym _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEEET_S9_
	.addrsig_sym _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPN2sf7TextureESt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.addrsig_sym _ZSt14__copy_move_a1ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPN2sf7TextureESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.addrsig_sym _ZSt14__copy_move_a2ILb1EPN2sf7TextureES2_ET1_T0_S4_S3_
	.addrsig_sym _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf7TextureES5_EET0_T_S7_S6_
	.addrsig_sym _ZSt4moveIRN2sf7TextureEEONSt16remove_referenceIT_E4typeEOS4_
	.addrsig_sym _ZN2sf7TextureaSERKS0_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE7destroyIS2_EEvPT_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf7TextureESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZNSt6vectorIbSaIbEE8_M_eraseESt13_Bit_iterator
	.addrsig_sym _ZNKSt19_Bit_const_iterator13_M_const_castEv
	.addrsig_sym _ZStneRKSt18_Bit_iterator_baseS1_
	.addrsig_sym _ZSteqRKSt18_Bit_iterator_baseS1_
	.addrsig_sym _ZNSt6vectorIP10CollectionSaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
	.addrsig_sym _ZN9__gnu_cxxmiIPKP10CollectionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_
	.addrsig_sym _ZNKSt6vectorIP10CollectionSaIS1_EE6cbeginEv
	.addrsig_sym _ZN9__gnu_cxxneIPP10CollectionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
	.addrsig_sym _ZSt4moveIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET0_T_SA_S9_
	.addrsig_sym _ZNSt16allocator_traitsISaIP10CollectionEE7destroyIS1_EEvRS2_PT_
	.addrsig_sym _ZSt13__copy_move_aILb1EN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES8_ET1_T0_SA_S9_
	.addrsig_sym _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEEET_S9_
	.addrsig_sym _ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPP10CollectionSt6vectorIS3_SaIS3_EEEES4_ET_S9_T0_
	.addrsig_sym _ZSt14__copy_move_a1ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	.addrsig_sym _ZSt12__niter_baseIPP10CollectionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE
	.addrsig_sym _ZSt14__copy_move_a2ILb1EPP10CollectionS2_ET1_T0_S4_S3_
	.addrsig_sym _ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIP10CollectionEEPT_PKS5_S8_S6_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIP10CollectionE7destroyIS2_EEvPT_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKP10CollectionSt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEmiEl
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEdeEv
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_
	.addrsig_sym _ZNKSt6vectorIN2sf6VertexESaIS1_EE8max_sizeEv
	.addrsig_sym _ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv
	.addrsig_sym _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE11_S_max_sizeERKS2_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf6VertexEEE8max_sizeERKS2_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt12__relocate_aIPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZSt14__relocate_a_1IPN2sf6VertexES2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZSt12__niter_baseIPN2sf6VertexEET_S3_
	.addrsig_sym _ZSt19__relocate_object_aIN2sf6VertexES1_SaIS1_EEvPT_PT0_RT1_
	.addrsig_sym _ZSt11__addressofIN2sf6VertexEEPT_RS2_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZSt4moveIRN2sf6VertexEEONSt16remove_referenceIT_E4typeEOS4_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf6VertexEEE7destroyIS1_EEvRS2_PT_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JS2_EEEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIN2sf6VertexEEOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE7destroyIS2_EEvPT_
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.addrsig_sym _ZNSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.addrsig_sym _ZNKSt6vectorIS_IN2sf6VertexESaIS1_EESaIS3_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEmiEl
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN2sf6VertexESaIS3_EES1_IS5_SaIS5_EEEdeEv
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZSt7forwardIN2sf12VertexBufferEEOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE9constructIS2_JS2_EEEvPT_DpOT0_
	.addrsig_sym _ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPN2sf12VertexBufferESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE11_M_allocateEm
	.addrsig_sym _ZSt34__uninitialized_move_if_noexcept_aIPN2sf12VertexBufferES2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE8max_sizeEv
	.addrsig_sym _ZNKSt6vectorIN2sf12VertexBufferESaIS1_EE4sizeEv
	.addrsig_sym _ZNSt6vectorIN2sf12VertexBufferESaIS1_EE11_S_max_sizeERKS2_
	.addrsig_sym _ZNKSt12_Vector_baseIN2sf12VertexBufferESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8max_sizeERKS2_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf12VertexBufferEEE8allocateERS2_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf12VertexBufferEE8allocateEmPKv
	.addrsig_sym _ZSt22__uninitialized_copy_aIPKN2sf12VertexBufferEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.addrsig_sym _ZSt32__make_move_if_noexcept_iteratorIN2sf12VertexBufferEPKS1_ET0_PT_
	.addrsig_sym _ZSt18uninitialized_copyIPKN2sf12VertexBufferEPS1_ET0_T_S6_S5_
	.addrsig_sym _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf12VertexBufferEPS3_EET0_T_S8_S7_
	.addrsig_sym _ZSt10_ConstructIN2sf12VertexBufferEJRKS1_EEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIRKN2sf12VertexBufferEEOT_RNSt16remove_referenceIS4_E4typeE
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.addrsig_sym _ZSt4moveIRN2sf9TransformEEONSt16remove_referenceIT_E4typeEOS4_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf9TransformEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZSt7forwardIN2sf9TransformEEOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE9constructIS2_JS2_EEEvPT_DpOT0_
	.addrsig_sym _ZNKSt6vectorIN2sf9TransformESaIS1_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPN2sf9TransformESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf9TransformESaIS1_EE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.addrsig_sym _ZNKSt6vectorIN2sf9TransformESaIS1_EE8max_sizeEv
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE11_S_max_sizeERKS2_
	.addrsig_sym _ZNKSt12_Vector_baseIN2sf9TransformESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf9TransformEEE8max_sizeERKS2_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf9TransformEE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf9TransformEEE8allocateERS2_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf9TransformEE8allocateEmPKv
	.addrsig_sym _ZNSt6vectorIN2sf9TransformESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt12__relocate_aIPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZSt14__relocate_a_1IPN2sf9TransformES2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZSt12__niter_baseIPN2sf9TransformEET_S3_
	.addrsig_sym _ZSt19__relocate_object_aIN2sf9TransformES1_SaIS1_EEvPT_PT0_RT1_
	.addrsig_sym _ZSt11__addressofIN2sf9TransformEEPT_RS2_
	.addrsig_sym _ZNSt6vectorIN2sf5ImageESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf5ImageEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZSt7forwardIN2sf5ImageEEOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZNSt6vectorIN2sf5ImageESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE9constructIS2_JS2_EEEvPT_DpOT0_
	.addrsig_sym _ZN9__gnu_cxx14__alloc_traitsISaIhEhE17_S_select_on_copyERKS1_
	.addrsig_sym _ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_
	.addrsig_sym _ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm
	.addrsig_sym _ZNKSt6vectorIN2sf5ImageESaIS1_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPN2sf5ImageESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf5ImageESaIS1_EE11_M_allocateEm
	.addrsig_sym _ZSt34__uninitialized_move_if_noexcept_aIPN2sf5ImageES2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZNKSt6vectorIN2sf5ImageESaIS1_EE8max_sizeEv
	.addrsig_sym _ZNKSt6vectorIN2sf5ImageESaIS1_EE4sizeEv
	.addrsig_sym _ZNSt6vectorIN2sf5ImageESaIS1_EE11_S_max_sizeERKS2_
	.addrsig_sym _ZNKSt12_Vector_baseIN2sf5ImageESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf5ImageEEE8max_sizeERKS2_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf5ImageEE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf5ImageEEE8allocateERS2_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf5ImageEE8allocateEmPKv
	.addrsig_sym _ZSt22__uninitialized_copy_aIPKN2sf5ImageEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.addrsig_sym _ZSt32__make_move_if_noexcept_iteratorIN2sf5ImageEPKS1_ET0_PT_
	.addrsig_sym _ZSt18uninitialized_copyIPKN2sf5ImageEPS1_ET0_T_S6_S5_
	.addrsig_sym _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf5ImageEPS3_EET0_T_S8_S7_
	.addrsig_sym _ZSt10_ConstructIN2sf5ImageEJRKS1_EEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIRKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	.addrsig_sym _ZNSt6vectorIN2sf7TextureESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf7TextureEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZSt7forwardIN2sf7TextureEEOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZNSt6vectorIN2sf7TextureESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE9constructIS2_JS2_EEEvPT_DpOT0_
	.addrsig_sym _ZNKSt6vectorIN2sf7TextureESaIS1_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPN2sf7TextureESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf7TextureESaIS1_EE11_M_allocateEm
	.addrsig_sym _ZSt34__uninitialized_move_if_noexcept_aIPN2sf7TextureES2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZNKSt6vectorIN2sf7TextureESaIS1_EE8max_sizeEv
	.addrsig_sym _ZNKSt6vectorIN2sf7TextureESaIS1_EE4sizeEv
	.addrsig_sym _ZNSt6vectorIN2sf7TextureESaIS1_EE11_S_max_sizeERKS2_
	.addrsig_sym _ZNKSt12_Vector_baseIN2sf7TextureESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf7TextureEEE8max_sizeERKS2_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf7TextureEE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf7TextureEEE8allocateERS2_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf7TextureEE8allocateEmPKv
	.addrsig_sym _ZSt22__uninitialized_copy_aIPKN2sf7TextureEPS1_S1_ET0_T_S6_S5_RSaIT1_E
	.addrsig_sym _ZSt32__make_move_if_noexcept_iteratorIN2sf7TextureEPKS1_ET0_PT_
	.addrsig_sym _ZSt18uninitialized_copyIPKN2sf7TextureEPS1_ET0_T_S6_S5_
	.addrsig_sym _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKN2sf7TextureEPS3_EET0_T_S8_S7_
	.addrsig_sym _ZSt10_ConstructIN2sf7TextureEJRKS1_EEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIRKN2sf7TextureEEOT_RNSt16remove_referenceIS4_E4typeE
	.addrsig_sym _ZSt8_DestroyIPN2sf11VertexArrayES1_EvT_S3_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPN2sf11VertexArrayEEvT_S3_
	.addrsig_sym _ZNSt12_Destroy_auxILb0EE9__destroyIPN2sf11VertexArrayEEEvT_S5_
	.addrsig_sym _ZSt8_DestroyIN2sf11VertexArrayEEvPT_
	.addrsig_sym _ZSt11__addressofIN2sf11VertexArrayEEPT_RS2_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE13_M_deallocateEPS1_m
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE10deallocateERS2_PS1_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE10deallocateEPS2_m
	.addrsig_sym _ZSt8_DestroyIPPKSt6vectorIbSaIbEES4_EvT_S6_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPPKSt6vectorIbSaIbEEEvT_S6_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPPKSt6vectorIbSaIbEEEEvT_S8_
	.addrsig_sym _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE13_M_deallocateEPS4_m
	.addrsig_sym _ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE10deallocateERS5_PS4_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE10deallocateEPS5_m
	.addrsig_sym _ZSt8_DestroyIPPKN2sf5ImageES3_EvT_S5_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPPKN2sf5ImageEEvT_S5_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPPKN2sf5ImageEEEvT_S7_
	.addrsig_sym _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE13_M_deallocateEPS3_m
	.addrsig_sym _ZNSt16allocator_traitsISaIPKN2sf5ImageEEE10deallocateERS4_PS3_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE10deallocateEPS4_m
	.addrsig_sym _ZSt8_DestroyIPttEvT_S1_RSaIT0_E
	.addrsig_sym _ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZSt8_DestroyIPtEvT_S1_
	.addrsig_sym _ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_
	.addrsig_sym _ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm
	.addrsig_sym _ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE12emplace_backIJS1_EEEvDpOT_
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv
	.addrsig_sym _ZNKSt6vectorIN2sf6VertexESaIS1_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPN2sf6VertexESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.addrsig_sym _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE3endEv
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIRKN2sf11VertexArrayEEOT_RNSt16remove_referenceIS4_E4typeE
	.addrsig_sym _ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEES2_E17_S_select_on_copyERKS3_
	.addrsig_sym _ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E
	.addrsig_sym _ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv
	.addrsig_sym _ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf6VertexEEE37select_on_container_copy_constructionERKS2_
	.addrsig_sym _ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE17_M_create_storageEm
	.addrsig_sym _ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_
	.addrsig_sym _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_
	.addrsig_sym _ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_
	.addrsig_sym _ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv
	.addrsig_sym _ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE
	.addrsig_sym _ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_
	.addrsig_sym _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE5beginEv
	.addrsig_sym _ZNSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEE4baseEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE7destroyIS1_EEvRS2_PT_
	.addrsig_sym _ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE8max_sizeEv
	.addrsig_sym _ZNKSt6vectorIN2sf11VertexArrayESaIS1_EE4sizeEv
	.addrsig_sym _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE11_S_max_sizeERKS2_
	.addrsig_sym _ZNKSt12_Vector_baseIN2sf11VertexArrayESaIS1_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8max_sizeERKS2_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE8allocateERS2_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE8allocateEmPKv
	.addrsig_sym _ZNSt6vectorIN2sf11VertexArrayESaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt12__relocate_aIPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZSt14__relocate_a_1IPN2sf11VertexArrayES2_SaIS1_EET0_T_S5_S4_RT1_
	.addrsig_sym _ZSt12__niter_baseIPN2sf11VertexArrayEET_S3_
	.addrsig_sym _ZSt19__relocate_object_aIN2sf11VertexArrayES1_SaIS1_EEvPT_PT0_RT1_
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf11VertexArrayEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZSt4moveIRN2sf11VertexArrayEEONSt16remove_referenceIT_E4typeEOS4_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE9constructIS2_JS2_EEEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIN2sf11VertexArrayEEOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf11VertexArrayEE7destroyIS2_EEvPT_
	.addrsig_sym _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.addrsig_sym _ZSt4moveIRPKSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS7_
	.addrsig_sym _ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_
	.addrsig_sym _ZSt7forwardIPKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE
	.addrsig_sym _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.addrsig_sym _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE3endEv
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE9constructIS5_JS5_EEEvPT_DpOT0_
	.addrsig_sym _ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.addrsig_sym _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE5beginEv
	.addrsig_sym _ZNSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPPKSt6vectorIbSaIbEES1_IS5_SaIS5_EEE4baseEv
	.addrsig_sym _ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE8max_sizeEv
	.addrsig_sym _ZNKSt6vectorIPKS_IbSaIbEESaIS3_EE4sizeEv
	.addrsig_sym _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE11_S_max_sizeERKS4_
	.addrsig_sym _ZNKSt12_Vector_baseIPKSt6vectorIbSaIbEESaIS4_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8max_sizeERKS5_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIPKSt6vectorIbSaIbEEEE8allocateERS5_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIPKSt6vectorIbSaIbEEE8allocateEmPKv
	.addrsig_sym _ZNSt6vectorIPKS_IbSaIbEESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt12__relocate_aIPPKSt6vectorIbSaIbEES5_SaIS4_EET0_T_S8_S7_RT1_
	.addrsig_sym _ZSt14__relocate_a_1IPKSt6vectorIbSaIbEES4_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS6_E4typeES7_S7_S7_RSaIT0_E
	.addrsig_sym _ZSt12__niter_baseIPPKSt6vectorIbSaIbEEET_S6_
	.addrsig_sym _ZNSt6vectorIPKN2sf5ImageESaIS3_EE12emplace_backIJS3_EEEvDpOT_
	.addrsig_sym _ZSt4moveIRPKN2sf5ImageEEONSt16remove_referenceIT_E4typeEOS6_
	.addrsig_sym _ZNSt16allocator_traitsISaIPKN2sf5ImageEEE9constructIS3_JS3_EEEvRS4_PT_DpOT0_
	.addrsig_sym _ZSt7forwardIPKN2sf5ImageEEOT_RNSt16remove_referenceIS4_E4typeE
	.addrsig_sym _ZNSt6vectorIPKN2sf5ImageESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_
	.addrsig_sym _ZNSt6vectorIPKN2sf5ImageESaIS3_EE3endEv
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE9constructIS4_JS4_EEEvPT_DpOT0_
	.addrsig_sym _ZNKSt6vectorIPKN2sf5ImageESaIS3_EE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
	.addrsig_sym _ZNSt6vectorIPKN2sf5ImageESaIS3_EE5beginEv
	.addrsig_sym _ZNSt12_Vector_baseIPKN2sf5ImageESaIS3_EE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPPKN2sf5ImageESt6vectorIS4_SaIS4_EEE4baseEv
	.addrsig_sym _ZNKSt6vectorIPKN2sf5ImageESaIS3_EE8max_sizeEv
	.addrsig_sym _ZNSt6vectorIPKN2sf5ImageESaIS3_EE11_S_max_sizeERKS4_
	.addrsig_sym _ZNKSt12_Vector_baseIPKN2sf5ImageESaIS3_EE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8max_sizeERKS4_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorIPKN2sf5ImageEE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaIPKN2sf5ImageEEE8allocateERS4_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIPKN2sf5ImageEE8allocateEmPKv
	.addrsig_sym _ZNSt6vectorIPKN2sf5ImageESaIS3_EE14_S_do_relocateEPS3_S6_S6_RS4_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt12__relocate_aIPPKN2sf5ImageES4_SaIS3_EET0_T_S7_S6_RT1_
	.addrsig_sym _ZSt14__relocate_a_1IPKN2sf5ImageES3_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS5_E4typeES6_S6_S6_RSaIT0_E
	.addrsig_sym _ZSt12__niter_baseIPPKN2sf5ImageEET_S5_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEmiEl
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPN2sf11VertexArrayESt6vectorIS2_SaIS2_EEEdeEv
	.addrsig_sym _ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_
	.addrsig_sym _ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_
	.addrsig_sym _ZNSt6vectorItSaItEE3endEv
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_
	.addrsig_sym _ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE
	.addrsig_sym _ZNKSt6vectorItSaItEE12_M_check_lenEmPKc
	.addrsig_sym _ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_
	.addrsig_sym _ZNSt6vectorItSaItEE5beginEv
	.addrsig_sym _ZNSt12_Vector_baseItSaItEE11_M_allocateEm
	.addrsig_sym _ZNSt6vectorItSaItEE11_S_relocateEPtS2_S2_RS0_
	.addrsig_sym _ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv
	.addrsig_sym _ZNKSt6vectorItSaItEE8max_sizeEv
	.addrsig_sym _ZNSt6vectorItSaItEE11_S_max_sizeERKS0_
	.addrsig_sym _ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv
	.addrsig_sym _ZNSt16allocator_traitsISaItEE8max_sizeERKS0_
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv
	.addrsig_sym _ZNK9__gnu_cxx13new_allocatorItE11_M_max_sizeEv
	.addrsig_sym _ZNSt16allocator_traitsISaItEE8allocateERS0_m
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv
	.addrsig_sym _ZNSt6vectorItSaItEE14_S_do_relocateEPtS2_S2_RS0_St17integral_constantIbLb1EE
	.addrsig_sym _ZSt12__relocate_aIPtS0_SaItEET0_T_S3_S2_RT1_
	.addrsig_sym _ZSt14__relocate_a_1IttENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E
	.addrsig_sym _ZSt12__niter_baseIPtET_S1_
	.addrsig_sym _ZNKSt6vectorIbSaIbEE14_M_range_checkEm
	.addrsig_sym _ZNKSt6vectorIbSaIbEEixEm
	.addrsig_sym _ZSt24__throw_out_of_range_fmtPKcz
	.addrsig_sym _ZNSt16allocator_traitsISaIN2sf6VertexEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_
	.addrsig_sym _ZNSt6vectorIN2sf6VertexESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.addrsig_sym _ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE9constructIS2_JRKS2_EEEvPT_DpOT0_
	.addrsig_sym _GLOBAL__sub_I_Plane.cpp
	.addrsig_sym _Unwind_Resume
	.addrsig_sym __stack_chk_fail
	.addrsig_sym _ZStL8__ioinit
	.addrsig_sym __dso_handle
	.addrsig_sym _ZN6Global4FontE
	.addrsig_sym _ZN6Global13MousePositionE
	.addrsig_sym _ZN5Plane12ToolbarPlaneE
	.addrsig_sym _ZN5Plane12PrimaryPlaneE
	.addrsig_sym _ZSt4cout
	.addrsig_sym _ZN6Global11BlockHeightE
	.addrsig_sym _ZN2sf12RenderStates7DefaultE
	.addrsig_sym _ZN6Global11BlockBorderE
	.addrsig_sym _ZN2sf5Color5WhiteE
	.addrsig_sym _ZN6Global10WindowSizeE
	.addrsig_sym _ZTISt11logic_error
	.addrsig_sym _ZTVN10__cxxabiv121__vmi_class_type_infoE
	.addrsig_sym _ZTS5Plane
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTS14ITransformable
	.addrsig_sym _ZTIN2sf13TransformableE
	.addrsig_sym _ZTI14ITransformable
	.addrsig_sym _ZTI11IRenderable
	.addrsig_sym _ZTI15IMouseUpdatable
	.addrsig_sym _ZTI5Plane
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSN2sf8DrawableE
	.addrsig_sym _ZTIN2sf8DrawableE
	.addrsig_sym _ZN6Logger10m_logMutexE
	.addrsig_sym _ZZNSt8__detail18__to_chars_10_implImEEvPcjT_E8__digits
	.addrsig_sym _ZTSZN5PlaneC1EbE3$_0
	.addrsig_sym _ZTIZN5PlaneC1EbE3$_0
